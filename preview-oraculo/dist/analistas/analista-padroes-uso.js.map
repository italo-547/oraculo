{"version":3,"file":"analista-padroes-uso.js","sourceRoot":"","sources":["../../src/analistas/analista-padroes-uso.ts"],"names":[],"mappings":"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","sourcesContent":["// SPDX-License-Identifier: MIT\r\n// src/analistas/analista-padroes-uso.ts\r\nimport * as t from '@babel/types';\r\nimport type { NodePath } from '@babel/traverse';\r\nimport { traverse } from '@nucleo/constelacao/traverse.js';\r\nimport { incrementar, garantirArray } from '@zeladores/util/helpers-analistas.js';\r\nimport type {\r\n  Estatisticas,\r\n  Ocorrencia,\r\n  ContextoExecucao,\r\n  TecnicaAplicarResultado,\r\n} from '@tipos/tipos.js';\r\nimport { criarOcorrencia, ocorrenciaErroAnalista } from '@tipos/tipos.js';\r\n\r\n// Estatísticas globais (mantidas)\r\nexport const estatisticasUsoGlobal: Estatisticas = {\r\n  requires: {},\r\n  consts: {},\r\n  exports: {},\r\n  vars: {},\r\n  lets: {},\r\n  evals: {},\r\n  withs: {},\r\n};\r\n\r\nexport const analistaPadroesUso = {\r\n  nome: 'analista-padroes-uso',\r\n  global: false,\r\n  test: (relPath: string): boolean => relPath.endsWith('.js') || relPath.endsWith('.ts'),\r\n  aplicar: (\r\n    _src: string,\r\n    relPath: string,\r\n    astInput: unknown,\r\n    _fullPath?: string,\r\n    contexto?: ContextoExecucao,\r\n  ): TecnicaAplicarResultado => {\r\n    // Per-file: não exige contexto; ele é usado apenas como fallback para localizar AST\r\n    const ocorrencias: Ocorrencia[] = [];\r\n\r\n    const push = (\r\n      data: Omit<Ocorrencia, 'nivel' | 'origem' | 'tipo' | 'mensagem'> & {\r\n        tipo: string;\r\n        mensagem: string;\r\n        nivel?: Ocorrencia['nivel'];\r\n        origem?: string;\r\n        arquivo?: string;\r\n        relPath?: string;\r\n      },\r\n    ) => {\r\n      ocorrencias.push(\r\n        criarOcorrencia({\r\n          nivel: data.nivel,\r\n          origem: data.origem,\r\n          tipo: data.tipo,\r\n          mensagem: data.mensagem,\r\n          relPath: data.arquivo || data.relPath,\r\n          linha: data.linha,\r\n          coluna: data.coluna,\r\n        }),\r\n      );\r\n    };\r\n\r\n    const statsFlag = estatisticasUsoGlobal as Estatisticas & { ___RESET_DONE___?: boolean };\r\n    if (!statsFlag.___RESET_DONE___) {\r\n      estatisticasUsoGlobal.requires = {};\r\n      estatisticasUsoGlobal.consts = {};\r\n      estatisticasUsoGlobal.exports = {};\r\n      estatisticasUsoGlobal.vars = {};\r\n      estatisticasUsoGlobal.lets = {};\r\n      estatisticasUsoGlobal.evals = {};\r\n      estatisticasUsoGlobal.withs = {};\r\n      statsFlag.___RESET_DONE___ = true;\r\n    }\r\n\r\n    // Normaliza AST recebido do executor (pode ser { node } ou o nó direto); fallback ao contexto\r\n    let astWrap = astInput as unknown as { node?: unknown; type?: string } | undefined;\r\n    if (!astWrap && contexto?.arquivos) {\r\n      const found = contexto.arquivos.find((f) => f.relPath === relPath) || contexto.arquivos[0];\r\n      astWrap = (found?.ast as unknown as { node?: unknown; type?: string }) || undefined;\r\n    }\r\n    const ast = (astWrap && (astWrap as { node?: unknown }).node) || astWrap;\r\n    if (!ast || typeof ast !== 'object') return null;\r\n    const tipo = (ast as { type?: string }).type;\r\n    if (tipo !== 'File' && tipo !== 'Program') return null; // evita traverse inválido\r\n\r\n    try {\r\n      traverse(ast as unknown as t.Node, {\r\n        enter(path: NodePath<t.Node>) {\r\n          const node = path.node;\r\n\r\n          if (t.isVariableDeclaration(node) && node.kind === 'var') {\r\n            incrementar(estatisticasUsoGlobal.vars, relPath);\r\n            push({\r\n              tipo: 'alerta',\r\n              mensagem: `Uso de 'var' detectado. Prefira 'let' ou 'const'.`,\r\n              arquivo: relPath,\r\n              linha: node.loc?.start.line,\r\n              coluna: node.loc?.start.column,\r\n            });\r\n          }\r\n          if (t.isVariableDeclaration(node) && node.kind === 'let') {\r\n            incrementar(estatisticasUsoGlobal.lets, relPath);\r\n            push({\r\n              tipo: 'info',\r\n              mensagem: `Uso de 'let'. Considere 'const' se não houver reatribuição.`,\r\n              arquivo: relPath,\r\n              linha: node.loc?.start.line,\r\n              coluna: node.loc?.start.column,\r\n            });\r\n          }\r\n          if (t.isVariableDeclaration(node) && node.kind === 'const') {\r\n            incrementar(estatisticasUsoGlobal.consts, relPath);\r\n          }\r\n          if (t.isCallExpression(node) && t.isIdentifier(node.callee)) {\r\n            const nome = node.callee.name;\r\n            if (nome === 'require') {\r\n              incrementar(estatisticasUsoGlobal.requires, relPath);\r\n              if (relPath.endsWith('.ts')) {\r\n                push({\r\n                  tipo: 'alerta',\r\n                  mensagem: `Uso de 'require' em arquivo TypeScript. Prefira 'import'.`,\r\n                  arquivo: relPath,\r\n                  linha: node.loc?.start.line,\r\n                  coluna: node.loc?.start.column,\r\n                });\r\n              }\r\n            }\r\n            if (nome === 'eval') {\r\n              incrementar(estatisticasUsoGlobal.evals, relPath);\r\n              push({\r\n                tipo: 'critico',\r\n                mensagem: `Uso de 'eval' detectado. Evite por questões de segurança e performance.`,\r\n                arquivo: relPath,\r\n                linha: node.loc?.start.line,\r\n                coluna: node.loc?.start.column,\r\n              });\r\n            }\r\n          }\r\n          if (t.isExportNamedDeclaration(node) || t.isExportDefaultDeclaration(node)) {\r\n            incrementar(estatisticasUsoGlobal.exports, relPath);\r\n          }\r\n          if (\r\n            t.isAssignmentExpression(node) &&\r\n            t.isMemberExpression(node.left) &&\r\n            ((t.isIdentifier(node.left.object) &&\r\n              node.left.object.name === 'module' &&\r\n              t.isIdentifier(node.left.property) &&\r\n              node.left.property.name === 'exports') ||\r\n              (t.isIdentifier(node.left.object) && node.left.object.name === 'exports')) &&\r\n            relPath.endsWith('.ts')\r\n          ) {\r\n            push({\r\n              tipo: 'alerta',\r\n              mensagem: `Uso de 'module.exports' ou 'exports' em arquivo TypeScript. Prefira 'export'.`,\r\n              arquivo: relPath,\r\n              linha: node.loc?.start.line,\r\n              coluna: node.loc?.start.column,\r\n            });\r\n          }\r\n          if (t.isWithStatement(node)) {\r\n            incrementar(estatisticasUsoGlobal.withs, relPath);\r\n            push({\r\n              tipo: 'critico',\r\n              mensagem: `Uso de 'with' detectado. Evite por questões de legibilidade e escopo.`,\r\n              arquivo: relPath,\r\n              linha: node.loc?.start.line,\r\n              coluna: node.loc?.start.column,\r\n            });\r\n          }\r\n          if (\r\n            (t.isFunctionExpression(node) || t.isFunctionDeclaration(node)) &&\r\n            !node.id &&\r\n            !t.isArrowFunctionExpression(node)\r\n          ) {\r\n            push({\r\n              tipo: 'info',\r\n              mensagem: `Função anônima detectada. Considere nomear funções para melhor rastreabilidade.`,\r\n              arquivo: relPath,\r\n              linha: node.loc?.start.line,\r\n              coluna: node.loc?.start.column,\r\n            });\r\n          }\r\n          // Arrow function em propriedade de classe (Babel 7+: ClassProperty/PropertyDefinition)\r\n          if (\r\n            (node.type === 'ClassProperty' ||\r\n              (node as { type?: string }).type === 'PropertyDefinition') &&\r\n            'value' in (node as unknown as Record<string, unknown>) &&\r\n            t.isArrowFunctionExpression(\r\n              (node as unknown as Record<string, unknown>).value as t.Node,\r\n            )\r\n          ) {\r\n            push({\r\n              tipo: 'info',\r\n              mensagem: `Arrow function usada como método de classe. Prefira método tradicional para melhor herança.`,\r\n              arquivo: relPath,\r\n              linha: node.loc?.start.line,\r\n              coluna: node.loc?.start.column,\r\n            });\r\n          }\r\n        },\r\n      });\r\n    } catch (e) {\r\n      ocorrencias.push(\r\n        ocorrenciaErroAnalista({\r\n          mensagem: `Falha ao analisar padrões de uso em ${relPath}: ${(e as Error).message}`,\r\n          relPath,\r\n          origem: 'analista-padroes-uso',\r\n        }),\r\n      );\r\n    }\r\n\r\n    return garantirArray(ocorrencias);\r\n  },\r\n};\r\n"]}