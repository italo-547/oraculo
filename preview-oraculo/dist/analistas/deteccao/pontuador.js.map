{"version":3,"file":"pontuador.js","sourceRoot":"","sources":["../../../src/analistas/deteccao/pontuador.ts"],"names":[],"mappings":"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","sourcesContent":["// SPDX-License-Identifier: MIT\r\nimport { ARQUETIPOS, normalizarCaminho } from '@analistas/arquetipos-defs.js';\r\nimport { grafoDependencias } from '@analistas/detector-dependencias.js';\r\nimport type {\r\n  ResultadoDeteccaoArquetipo,\r\n  ArquetipoEstruturaDef,\r\n  ArquetipoDeteccaoAnomalia,\r\n} from '@tipos/tipos.js';\r\n\r\nconst PENALIDADE_MISSING_REQUIRED = 20;\r\nconst PESO_OPTIONAL = 5;\r\nconst PESO_REQUIRED = 10;\r\nconst PESO_DEPENDENCIA = 10;\r\nconst PESO_PATTERN = 5;\r\nconst PENALIDADE_FORBIDDEN = 20;\r\n\r\nexport function scoreArquetipo(\r\n  def: ArquetipoEstruturaDef,\r\n  arquivos: string[],\r\n): ResultadoDeteccaoArquetipo {\r\n  const norm = arquivos.map((f) => String(normalizarCaminho(f)));\r\n  const required = def.requiredDirs || [];\r\n  const matchedRequired = required.filter((d) =>\r\n    norm.some((f) => f.startsWith(d + '/') || f === d),\r\n  );\r\n  const missingRequired = required.filter((d) => !matchedRequired.includes(d));\r\n  const optional = def.optionalDirs || [];\r\n  const matchedOptional = optional.filter((d) =>\r\n    norm.some((f) => f.startsWith(d + '/') || f === d),\r\n  );\r\n  // Verifica dependências sugeridas no grafo global (qualquer arquivo pode importar)\r\n  // Otimização: materializa um Set único de todas as dependências para lookup O(1)\r\n  const allDependencies = new Set<string>();\r\n  for (const set of grafoDependencias.values()) {\r\n    for (const dep of set) {\r\n      allDependencies.add(dep);\r\n    }\r\n  }\r\n  function hasDependencyGlobal(dep: string): boolean {\r\n    return allDependencies.has(dep);\r\n  }\r\n  const dependencyMatches = (def.dependencyHints || []).filter((dep) => hasDependencyGlobal(dep));\r\n  const filePatternMatches = (def.filePresencePatterns || []).filter((pat) =>\r\n    norm.some((f) => f.includes(pat)),\r\n  );\r\n  const forbiddenPresent = (def.forbiddenDirs || []).filter((d) =>\r\n    norm.some((f) => f.startsWith(d + '/') || f === d),\r\n  );\r\n\r\n  let score = (def.pesoBase || 1) * 10;\r\n  score += matchedRequired.length * PESO_REQUIRED;\r\n  score -= missingRequired.length * PENALIDADE_MISSING_REQUIRED;\r\n  score += matchedOptional.length * PESO_OPTIONAL;\r\n  score += dependencyMatches.length * PESO_DEPENDENCIA;\r\n  score += filePatternMatches.length * PESO_PATTERN;\r\n  score -= forbiddenPresent.length * PENALIDADE_FORBIDDEN;\r\n\r\n  let explicacaoSimilaridade = '';\r\n  let candidatoExtra: string | undefined;\r\n\r\n  if (def.nome === 'fullstack') {\r\n    const temPages = matchedRequired.includes('pages');\r\n    const temApi = matchedRequired.includes('api');\r\n    const temPrisma = matchedRequired.includes('prisma');\r\n    const temControllers = norm.some((f) => f.includes('src/controllers'));\r\n    const temExpress = grafoDependencias.has('express');\r\n    const isHibridoCompleto = temPages && temApi && temPrisma && temControllers && temExpress;\r\n    if (isHibridoCompleto) {\r\n      score += 40;\r\n      explicacaoSimilaridade =\r\n        'Estrutura híbrida: fullstack + api-rest-express. Projeto combina frontend (pages/api/prisma) e backend Express/controllers.';\r\n      candidatoExtra = 'api-rest-express';\r\n      explicacaoSimilaridade +=\r\n        '\\nOutros candidatos potenciais detectados: fullstack, api-rest-express.';\r\n    } else if (temPages && temApi && temPrisma) {\r\n      score += 20;\r\n      explicacaoSimilaridade = 'Estrutura segue o padrão fullstack (pages/api/prisma).';\r\n      explicacaoSimilaridade +=\r\n        '\\nOutros candidatos potenciais detectados: fullstack, api-rest-express.';\r\n    }\r\n  }\r\n\r\n  if (def.nome === 'api-rest-express' && grafoDependencias.has('express')) {\r\n    if (\r\n      norm.some((f) => f.includes('pages')) &&\r\n      norm.some((f) => f.includes('prisma')) &&\r\n      norm.some((f) => f.includes('api'))\r\n    ) {\r\n      score += 40;\r\n      if (score > 100) score = 100;\r\n      explicacaoSimilaridade =\r\n        'Estrutura híbrida: api-rest-express + fullstack. Projeto combina backend Express/controllers e frontend (pages/prisma/api).';\r\n      explicacaoSimilaridade +=\r\n        '\\nOutros candidatos potenciais detectados: fullstack, api-rest-express.';\r\n    } else if (norm.some((f) => f.includes('pages')) && norm.some((f) => f.includes('prisma'))) {\r\n      score += 40;\r\n      if (score > 100) score = 100;\r\n      explicacaoSimilaridade =\r\n        'Estrutura híbrida: api-rest-express + fullstack. Projeto combina backend Express/controllers e frontend (pages/prisma).';\r\n      explicacaoSimilaridade +=\r\n        '\\nOutros candidatos potenciais detectados: fullstack, api-rest-express.';\r\n    }\r\n  }\r\n\r\n  if (def.nome === 'api-rest-express') {\r\n    const temControllers = matchedRequired.includes('src/controllers');\r\n    const temExpress = dependencyMatches.includes('express');\r\n    if (temControllers && temExpress) {\r\n      score += 50;\r\n    } else if (temControllers) {\r\n      score += 25;\r\n    } else if (temExpress) {\r\n      score += 15;\r\n    }\r\n    if (norm.some((f) => /api|rest/i.test(f))) {\r\n      score += 10;\r\n    }\r\n    if (score >= 100) {\r\n      explicacaoSimilaridade = 'Estrutura segue o padrão oficial api-rest-express.';\r\n    } else if (score >= 70) {\r\n      // Para simplificar a validação em testes, adotamos uma formulação curta próxima do \"padrão oficial\"\r\n      explicacaoSimilaridade = 'Estrutura segue o padrão api-rest-express com pequenas diferenças.';\r\n    } else if (score >= 40) {\r\n      explicacaoSimilaridade =\r\n        'Estrutura parcialmente compatível com o padrão api-rest-express. Recomenda-se padronizar src/controllers, dependência express e rotas api/rest.';\r\n    } else {\r\n      explicacaoSimilaridade =\r\n        'Estrutura personalizada, mas o padrão mais próximo é api-rest-express. Recomenda-se seguir boas práticas para facilitar manutenção.';\r\n    }\r\n  }\r\n\r\n  // Explicação genérica quando há penalidades/ausências e ainda não foi preenchida\r\n  if (!explicacaoSimilaridade) {\r\n    const partes: string[] = [];\r\n    if (missingRequired.length > 0) {\r\n      partes.push(`Diretórios obrigatórios ausentes/faltantes: ${missingRequired.join(', ')}.`);\r\n    }\r\n    if (forbiddenPresent.length > 0) {\r\n      partes.push(`Diretórios não permitidos/proibidos presentes: ${forbiddenPresent.join(', ')}.`);\r\n    }\r\n    if (partes.length > 0) {\r\n      explicacaoSimilaridade = `${partes.join(' ')} Estrutura parcialmente compatível, personalizada ou com diferenças.`;\r\n    }\r\n  }\r\n\r\n  // Importante: manter score negativo quando penalidades superam acertos,\r\n  // pois alguns testes validam score <= 0 para cenários de penalização.\r\n  const maxPossible =\r\n    (def.pesoBase || 1) * 10 +\r\n    (def.requiredDirs?.length || 0) * PESO_REQUIRED +\r\n    (def.optionalDirs?.length || 0) * PESO_OPTIONAL +\r\n    (def.dependencyHints?.length || 0) * PESO_DEPENDENCIA +\r\n    (def.filePresencePatterns?.length || 0) * PESO_PATTERN +\r\n    30;\r\n  const confidence = maxPossible > 0 ? Math.min(100, Math.round((score / maxPossible) * 100)) : 0;\r\n\r\n  const raizFiles = norm.filter((p) => typeof p === 'string' && !p.includes('/'));\r\n  const allowed = new Set([...(def.rootFilesAllowed || [])]);\r\n  let anomalias: ArquetipoDeteccaoAnomalia[] = [];\r\n  for (const rf of raizFiles) {\r\n    if (typeof rf === 'string' && rf.trim() !== '' && !allowed.has(rf)) {\r\n      anomalias.push({ path: rf, motivo: 'Arquivo na raiz não permitido para este arquétipo' });\r\n    }\r\n  }\r\n  let sugestaoPadronizacao = '';\r\n  if (def.nome === 'api-rest-express') {\r\n    if (!matchedRequired.includes('src/controllers')) {\r\n      sugestaoPadronizacao +=\r\n        'Sugestão: adicione o diretório src/controllers para seguir o padrão api-rest-express.\\n';\r\n    }\r\n    if (!dependencyMatches.includes('express')) {\r\n      sugestaoPadronizacao +=\r\n        'Sugestão: adicione express nas dependências para seguir o padrão api-rest-express.\\n';\r\n    }\r\n    if (!norm.some((f) => /api|rest/i.test(f))) {\r\n      sugestaoPadronizacao +=\r\n        'Sugestão: utilize nomes de arquivos e rotas que incluam \"api\" ou \"rest\" para reforçar o padrão.\\n';\r\n    }\r\n  }\r\n\r\n  return {\r\n    nome: def.nome,\r\n    score,\r\n    confidence,\r\n    matchedRequired,\r\n    missingRequired,\r\n    matchedOptional,\r\n    dependencyMatches,\r\n    filePatternMatches,\r\n    forbiddenPresent,\r\n    anomalias,\r\n    sugestaoPadronizacao,\r\n    explicacaoSimilaridade,\r\n    descricao: def.descricao || '',\r\n    candidatoExtra,\r\n  };\r\n}\r\n\r\nexport function pontuarTodos(arquivos: string[]): ResultadoDeteccaoArquetipo[] {\r\n  const resultados: ResultadoDeteccaoArquetipo[] = [];\r\n  for (const def of ARQUETIPOS) {\r\n    const r = scoreArquetipo(def, arquivos);\r\n    resultados.push(r);\r\n    if (r.candidatoExtra) {\r\n      const extra = ARQUETIPOS.find((a) => a.nome === r.candidatoExtra);\r\n      if (extra) {\r\n        const e = scoreArquetipo(extra, arquivos);\r\n        if (!resultados.some((x) => x.nome === e.nome)) resultados.push(e);\r\n      }\r\n    }\r\n  }\r\n  // Filtro: manter apenas candidatos que apresentem algum sinal (match/forbidden/pattern/dep)\r\n  return resultados.filter(\r\n    (r) =>\r\n      (r.matchedRequired?.length || 0) > 0 ||\r\n      (r.matchedOptional?.length || 0) > 0 ||\r\n      (r.dependencyMatches?.length || 0) > 0 ||\r\n      (r.filePatternMatches?.length || 0) > 0 ||\r\n      (r.forbiddenPresent?.length || 0) > 0,\r\n  );\r\n}\r\n"]}