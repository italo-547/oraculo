{"version":3,"file":"comando-atualizar.js","sourceRoot":"","sources":["../../src/cli/comando-atualizar.ts"],"names":[],"mappings":"AAAA,+BAA+B;AAC/B,OAAO,EAAE,OAAO,EAAE,MAAM,WAAW,CAAC;AACpC,OAAO,KAAK,MAAM,qCAAqC,CAAC;AACxD,OAAO,EAAE,mBAAmB,EAAE,MAAM,6BAA6B,CAAC;AAIlE,OAAO,EAAE,iBAAiB,EAAE,MAAM,yBAAyB,CAAC;AAC5D,OAAO,EAAE,mBAAmB,EAAE,MAAM,0BAA0B,CAAC;AAC/D,OAAO,EAAE,GAAG,EAAE,MAAM,8BAA8B,CAAC;AACnD,OAAO,EAAE,MAAM,EAAE,MAAM,iCAAiC,CAAC;AAEzD,MAAM,UAAU,gBAAgB,CAAC,mBAA4D;IAC3F,OAAO,IAAI,OAAO,CAAC,WAAW,CAAC;SAC5B,WAAW,CAAC,wDAAwD,CAAC;SACrE,MAAM,CAAC,UAAU,EAAE,mCAAmC,CAAC;SACvD,MAAM,CAAC,KAAK,WAA0B,IAA0B;QAC/D,mBAAmB,CACjB,IAAI,CAAC,MAAM,IAAI,OAAO,IAAI,CAAC,MAAM,CAAC,IAAI,KAAK,UAAU,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,EAAE,CAChF,CAAC;QACF,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,6CAA6C,CAAC,CAAC,CAAC;QAEpE,MAAM,OAAO,GAAG,OAAO,CAAC,GAAG,EAAE,CAAC;QAC9B,IAAI,WAAW,GAAuB,EAAE,CAAC;QAEzC,IAAI,CAAC;YACH,MAAM,SAAS,GAAG,MAAM,iBAAiB,CAAC,OAAO,EAAE,EAAE,gBAAgB,EAAE,KAAK,EAAE,CAAC,CAAC;YAChF,WAAW,GAAG,SAAS,CAAC,WAAW,CAAC;YAEpC,MAAM,iBAAiB,GAAG,MAAM,mBAAmB,CAAC,WAAW,CAAC,CAAC;YAEjE,IACE,iBAAiB,CAAC,MAAM,KAAM,IAAwC;gBACtE,iBAAiB,CAAC,MAAM,KAAM,iBAAqD,EACnF,CAAC;gBACD,GAAG,CAAC,OAAO,CAAC,8DAA8D,CAAC,CAAC;YAC9E,CAAC;iBAAM,CAAC;gBACN,GAAG,CAAC,KAAK,CACP,mFAAmF,CACpF,CAAC;gBACF,GAAG,CAAC,IAAI,CACN,mGAAmG,CACpG,CAAC;YACJ,CAAC;YAED,MAAM,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,+BAA+B,CAAC,CAAC,CAAC,4BAA4B,CAAC;YAEzF,GAAG,CAAC,IAAI,CAAC,kBAAkB,GAAG,EAAE,CAAC,CAAC;YAClC,mBAAmB,CAAC,GAAG,EAAE,EAAE,KAAK,EAAE,SAAS,EAAE,CAAC,CAAC;YAE/C,GAAG,CAAC,OAAO,CAAC,sCAAsC,CAAC,CAAC;QACtD,CAAC;QAAC,OAAO,GAAY,EAAE,CAAC;YACtB,GAAG,CAAC,IAAI,CAAC,oCAAoC,CAAC,CAAC;YAC/C,IACE,OAAO,GAAG,KAAK,QAAQ;gBACvB,GAAG;gBACH,UAAU,IAAI,GAAG;gBACjB,KAAK,CAAC,OAAO,CAAE,GAA8B,CAAC,QAAQ,CAAC,EACvD,CAAC;gBACA,GAA8B,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAS,EAAE,EAAE;oBAC7D,GAAG,CAAC,KAAK,CAAC,IAAI,GAAG,CAAC,CAAC,CAAC;gBACtB,CAAC,CAAC,CAAC;YACL,CAAC;YACD,IAAI,MAAM,CAAC,QAAQ;gBAAE,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;YACxC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QAClB,CAAC;IACH,CAAC,CAAC,CAAC;AACP,CAAC","sourcesContent":["// SPDX-License-Identifier: MIT\r\nimport { Command } from 'commander';\r\nimport chalk from '../nucleo/constelacao/chalk-safe.js';\r\nimport { executarShellSeguro } from '../nucleo/util/exec-safe.js';\r\n\r\nimport type { FileEntryWithAst } from '../tipos/tipos.js';\r\n\r\nimport { iniciarInquisicao } from '../nucleo/inquisidor.js';\r\nimport { scanSystemIntegrity } from '../guardian/sentinela.js';\r\nimport { log } from '../nucleo/constelacao/log.js';\r\nimport { config } from '../nucleo/constelacao/cosmos.js';\r\n\r\nexport function comandoAtualizar(aplicarFlagsGlobais: (opts: Record<string, unknown>) => void) {\r\n  return new Command('atualizar')\r\n    .description('Atualiza o Or√°culo se a integridade estiver preservada')\r\n    .option('--global', 'atualiza globalmente via npm i -g')\r\n    .action(async function (this: Command, opts: { global?: boolean }) {\r\n      aplicarFlagsGlobais(\r\n        this.parent && typeof this.parent.opts === 'function' ? this.parent.opts() : {},\r\n      );\r\n      log.info(chalk.bold('\\nüîÑ Iniciando processo de atualiza√ß√£o...\\n'));\r\n\r\n      const baseDir = process.cwd();\r\n      let fileEntries: FileEntryWithAst[] = [];\r\n\r\n      try {\r\n        const resultado = await iniciarInquisicao(baseDir, { incluirMetadados: false });\r\n        fileEntries = resultado.fileEntries;\r\n\r\n        const guardianResultado = await scanSystemIntegrity(fileEntries);\r\n\r\n        if (\r\n          guardianResultado.status === ('ok' as typeof guardianResultado.status) ||\r\n          guardianResultado.status === ('baseline-aceito' as typeof guardianResultado.status)\r\n        ) {\r\n          log.sucesso('üîí Guardian: integridade validada. Prosseguindo atualiza√ß√£o.');\r\n        } else {\r\n          log.aviso(\r\n            'üåÄ Guardian gerou novo baseline ou detectou altera√ß√µes. Prosseguindo com cautela.',\r\n          );\r\n          log.info(\r\n            'Recomendado: `oraculo guardian --diff` e `oraculo guardian --accept-baseline` antes de atualizar.',\r\n          );\r\n        }\r\n\r\n        const cmd = opts.global ? 'npm install -g oraculo@latest' : 'npm install oraculo@latest';\r\n\r\n        log.info(`üì• Executando: ${cmd}`);\r\n        executarShellSeguro(cmd, { stdio: 'inherit' });\r\n\r\n        log.sucesso('‚úÖ Atualiza√ß√£o conclu√≠da com sucesso!');\r\n      } catch (err: unknown) {\r\n        log.erro('üö® Atualiza√ß√£o abortada ou falhou.');\r\n        if (\r\n          typeof err === 'object' &&\r\n          err &&\r\n          'detalhes' in err &&\r\n          Array.isArray((err as { detalhes?: unknown }).detalhes)\r\n        ) {\r\n          (err as { detalhes: string[] }).detalhes.forEach((d: string) => {\r\n            log.aviso('‚ùó ' + d);\r\n          });\r\n        }\r\n        if (config.DEV_MODE) console.error(err);\r\n        process.exit(1);\r\n      }\r\n    });\r\n}\r\n"]}