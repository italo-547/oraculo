{"version":3,"file":"comando-analistas.js","sourceRoot":"","sources":["../../src/cli/comando-analistas.ts"],"names":[],"mappings":"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","sourcesContent":["// SPDX-License-Identifier: MIT\r\nimport { Command } from 'commander';\r\nimport { registroAnalistas, listarAnalistas } from '@analistas/registry.js';\r\nimport { log } from '@nucleo/constelacao/log.js';\r\nimport { salvarEstado } from '@zeladores/util/persistencia.js';\r\nimport path from 'node:path';\r\nimport { config } from '@nucleo/constelacao/cosmos.js';\r\n\r\nexport function comandoAnalistas() {\r\n  return new Command('analistas')\r\n    .description('Lista analistas registrados e seus metadados atuais')\r\n    .option('-j, --json', 'Sa√≠da em JSON')\r\n    .option('-o, --output <arquivo>', 'Arquivo para exportar JSON de analistas')\r\n    .option('-d, --doc <arquivo>', 'Gera documenta√ß√£o Markdown dos analistas')\r\n    .action(async (opts: { json?: boolean; output?: string; doc?: string }) => {\r\n      const lista = listarAnalistas();\r\n      // Gera√ß√£o de documenta√ß√£o markdown\r\n      if (opts.doc) {\r\n        const destinoDoc = path.isAbsolute(opts.doc)\r\n          ? opts.doc\r\n          : path.join(process.cwd(), opts.doc);\r\n        const linhas: string[] = [];\r\n        linhas.push('# Analistas Registrados');\r\n        linhas.push('');\r\n        linhas.push(`Gerado em: ${new Date().toISOString()}`);\r\n        linhas.push('');\r\n        linhas.push('| Nome | Categoria | Descri√ß√£o | Limites |');\r\n        linhas.push('| ---- | --------- | --------- | ------- |');\r\n        for (const a of lista) {\r\n          const registroOriginal = (\r\n            registroAnalistas as Array<{\r\n              nome: string;\r\n              limites?: Record<string, number>;\r\n              categoria?: string;\r\n              descricao?: string;\r\n            }>\r\n          ).find((r) => r.nome === a.nome);\r\n          let limitesStr = '';\r\n          if (registroOriginal?.limites) {\r\n            limitesStr = Object.entries(registroOriginal.limites)\r\n              .map(([k, v]) => `${k}:${v}`)\r\n              .join('<br>');\r\n          }\r\n          linhas.push(`| ${a.nome} | ${a.categoria} | ${a.descricao || ''} | ${limitesStr} |`);\r\n        }\r\n        linhas.push('');\r\n        await salvarEstado(destinoDoc, linhas.join('\\n'));\r\n        log.sucesso(`üìù Documenta√ß√£o de analistas gerada em ${destinoDoc}`);\r\n        return;\r\n      }\r\n      if (opts.output) {\r\n        const destino = path.isAbsolute(opts.output)\r\n          ? opts.output\r\n          : path.join(process.cwd(), opts.output);\r\n        await salvarEstado(destino, {\r\n          geradoEm: new Date().toISOString(),\r\n          total: lista.length,\r\n          analistas: lista,\r\n          configLimites: config.ANALISE_LIMITES ?? {},\r\n        });\r\n        log.sucesso(`üìÑ Exportado JSON de analistas para ${destino}`);\r\n        return;\r\n      }\r\n      if (opts.json) {\r\n        log.info(JSON.stringify({ total: lista.length, analistas: lista }, null, 2));\r\n        return;\r\n      }\r\n      log.info('\\nüìã Analistas registrados:\\n');\r\n      for (const a of lista) {\r\n        log.info(`- ${a.nome} (${a.categoria}) ${a.descricao ? '‚Äî ' + a.descricao : ''}`);\r\n      }\r\n      log.info(`\\nTotal: ${registroAnalistas.length}`);\r\n    });\r\n}\r\n"]}