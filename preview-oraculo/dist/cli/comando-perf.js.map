{"version":3,"file":"comando-perf.js","sourceRoot":"","sources":["../../src/cli/comando-perf.ts"],"names":[],"mappings":"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","sourcesContent":["// SPDX-License-Identifier: MIT\r\nimport { Command } from 'commander';\r\nimport { promises as fs } from 'node:fs';\r\nimport path from 'node:path';\r\nimport crypto from 'node:crypto';\r\nimport { log } from '@nucleo/constelacao/log.js';\r\nimport { config } from '@nucleo/constelacao/cosmos.js';\r\nimport { formatPct } from '@nucleo/constelacao/format.js';\r\nimport { salvarEstado, lerEstado } from '@zeladores/util/persistencia.js';\r\n\r\n// Tipagens reutilizadas (espelho parcial de MetricaExecucao para evitar dependência circular leve)\r\ninterface MetricaAnalistaLike {\r\n  nome: string;\r\n  duracaoMs: number;\r\n  ocorrencias: number;\r\n}\r\ninterface MetricaExecucaoLike {\r\n  totalArquivos: number;\r\n  tempoParsingMs: number;\r\n  tempoAnaliseMs: number;\r\n  cacheAstHits: number;\r\n  cacheAstMiss: number;\r\n  analistas: MetricaAnalistaLike[];\r\n}\r\n\r\ninterface SnapshotPerf {\r\n  tipo: 'baseline';\r\n  timestamp: string;\r\n  commit?: string;\r\n  node: string;\r\n  totalArquivos?: number;\r\n  tempoParsingMs?: number;\r\n  tempoAnaliseMs?: number;\r\n  cacheAstHits?: number;\r\n  cacheAstMiss?: number;\r\n  analistasTop?: { nome: string; duracaoMs: number; ocorrencias: number }[];\r\n  hashConteudo?: string; // hash de métricas para identificação rápida\r\n}\r\n\r\nasync function obterCommit(): Promise<string | undefined> {\r\n  try {\r\n    // usar helper seguro\r\n    const { executarShellSeguro } = await import('../nucleo/util/exec-safe.js');\r\n    return executarShellSeguro('git rev-parse --short HEAD', {\r\n      stdio: ['ignore', 'pipe', 'ignore'],\r\n    })\r\n      .toString()\r\n      .trim();\r\n  } catch {\r\n    return undefined;\r\n  }\r\n}\r\n\r\nfunction calcularHash(snapshot: Omit<SnapshotPerf, 'hashConteudo'>) {\r\n  return crypto\r\n    .createHash('sha1')\r\n    .update(JSON.stringify(snapshot, Object.keys(snapshot).sort()))\r\n    .digest('hex')\r\n    .slice(0, 10);\r\n}\r\n\r\nasync function gerarBaseline(destDir: string, metricas?: Partial<MetricaExecucaoLike>) {\r\n  const commit = await obterCommit();\r\n  const base: Omit<SnapshotPerf, 'hashConteudo'> = {\r\n    tipo: 'baseline',\r\n    timestamp: new Date().toISOString(),\r\n    commit,\r\n    node: process.version,\r\n    totalArquivos: metricas?.totalArquivos,\r\n    tempoParsingMs: metricas?.tempoParsingMs,\r\n    tempoAnaliseMs: metricas?.tempoAnaliseMs,\r\n    cacheAstHits: metricas?.cacheAstHits,\r\n    cacheAstMiss: metricas?.cacheAstMiss,\r\n    analistasTop: Array.isArray(metricas?.analistas)\r\n      ? metricas.analistas\r\n          .slice()\r\n          .sort((a, b) => b.duracaoMs - a.duracaoMs)\r\n          .slice(0, 5)\r\n          .map((a) => ({ nome: a.nome, duracaoMs: a.duracaoMs, ocorrencias: a.ocorrencias }))\r\n      : undefined,\r\n  };\r\n  const hashConteudo = calcularHash(base);\r\n  const snapshot: SnapshotPerf = { ...base, hashConteudo };\r\n  await fs.mkdir(destDir, { recursive: true });\r\n  const nome = `baseline-${Date.now()}.json`;\r\n  await salvarEstado(path.join(destDir, nome), snapshot);\r\n  return snapshot;\r\n}\r\n\r\nasync function carregarSnapshots(dir: string): Promise<SnapshotPerf[]> {\r\n  try {\r\n    const arquivos = await fs.readdir(dir);\r\n    const jsons = arquivos.filter((f) => f.endsWith('.json'));\r\n    const out: SnapshotPerf[] = [];\r\n    for (const f of jsons) {\r\n      try {\r\n        const parsed = await lerEstado<SnapshotPerf>(path.join(dir, f));\r\n        if (parsed && parsed.tipo === 'baseline') out.push(parsed);\r\n      } catch {\r\n        /* ignore */\r\n      }\r\n    }\r\n    return out.sort((a, b) => a.timestamp.localeCompare(b.timestamp));\r\n  } catch {\r\n    return [];\r\n  }\r\n}\r\n\r\nfunction diffPercent(a?: number, b?: number) {\r\n  if (!a && !b) return 0;\r\n  if (!a || !b) return 0;\r\n  if (a === 0) return 0;\r\n  return ((b - a) / a) * 100;\r\n}\r\n\r\nfunction compararSnapshots(base: SnapshotPerf, atual: SnapshotPerf) {\r\n  const campos: (keyof SnapshotPerf)[] = [\r\n    'tempoParsingMs',\r\n    'tempoAnaliseMs',\r\n    'cacheAstHits',\r\n    'cacheAstMiss',\r\n    'totalArquivos',\r\n  ];\r\n  const diffs = campos.map((c) => {\r\n    const anterior = base[c] as number | undefined;\r\n    const novo = atual[c] as number | undefined;\r\n    return { campo: c, anterior, novo, variacaoPct: diffPercent(anterior, novo) };\r\n  });\r\n  return diffs;\r\n}\r\n\r\nexport function comandoPerf() {\r\n  /* istanbul ignore next */\r\n  if (false) 0;\r\n  return new Command('perf')\r\n    .description('Operações de baseline e comparação de performance sintética')\r\n    .option('-d, --dir <dir>', 'Diretório de snapshots', config.PERF_SNAPSHOT_DIR)\r\n    .option('-j, --json', 'Saída JSON')\r\n    .option('-l, --limite <n>', 'Limite para regressão (%)', (v) => Number(v), 30)\r\n    .addCommand(\r\n      new Command('baseline')\r\n        .description(\r\n          'Gera uma nova baseline. Usa métricas globais da última execução se disponíveis.',\r\n        )\r\n        .action(async (opts, cmd) => {\r\n          const parent = cmd.parent?.opts?.() || {};\r\n          const dir = parent.dir ? String(parent.dir) : config.PERF_SNAPSHOT_DIR;\r\n          const metricas = (\r\n            globalThis as unknown as {\r\n              __ULTIMAS_METRICAS_ORACULO__?: Partial<MetricaExecucaoLike> | null;\r\n            }\r\n          ).__ULTIMAS_METRICAS_ORACULO__;\r\n          const snap = await gerarBaseline(dir, metricas || undefined);\r\n          if (parent.json) {\r\n            console.log(JSON.stringify({ gerado: true, snapshot: snap }, null, 2));\r\n          } else {\r\n            log.sucesso(\r\n              `Baseline gerada: commit=${snap.commit || 'n/a'} parsing=${snap.tempoParsingMs}ms analise=${snap.tempoAnaliseMs}ms`,\r\n            );\r\n          }\r\n        }),\r\n    )\r\n    .addCommand(\r\n      new Command('compare')\r\n        .description('Compara os dois últimos snapshots e sinaliza regressão')\r\n        .action(async (opts, cmd) => {\r\n          const parent = cmd.parent?.opts?.() || {};\r\n          const dir = parent.dir ? String(parent.dir) : config.PERF_SNAPSHOT_DIR;\r\n          const limite = parent.limite;\r\n          const snaps = await carregarSnapshots(dir);\r\n          if (snaps.length < 2) {\r\n            const msg = 'Menos de dois snapshots para comparar';\r\n            if (parent.json) console.log(JSON.stringify({ erro: msg }));\r\n            else log.aviso(msg);\r\n            return;\r\n          }\r\n          const anterior = snaps[snaps.length - 2];\r\n          const atual = snaps[snaps.length - 1];\r\n          const diffs = compararSnapshots(anterior, atual);\r\n          const regressao = diffs\r\n            .filter((d) => d.campo === 'tempoAnaliseMs' || d.campo === 'tempoParsingMs')\r\n            .some((d) => d.variacaoPct > limite);\r\n          if (parent.json) {\r\n            console.log(\r\n              JSON.stringify(\r\n                {\r\n                  base: anterior.hashConteudo,\r\n                  atual: atual.hashConteudo,\r\n                  limite,\r\n                  diffs,\r\n                  regressao,\r\n                },\r\n                null,\r\n                2,\r\n              ),\r\n            );\r\n          } else {\r\n            log.info('Comparação entre snapshots:');\r\n            diffs.forEach((d) => {\r\n              log.info(\r\n                `  ${d.campo}: ${d.anterior ?? '-'} => ${d.novo ?? '-'} (${formatPct(d.variacaoPct)})`,\r\n              );\r\n            });\r\n            if (regressao) log.aviso(`⚠️ Regressão acima de ${limite}% detectada.`);\r\n            else log.sucesso('✅ Sem regressões significativas.');\r\n          }\r\n        }),\r\n    );\r\n}\r\n"]}