{"version":3,"file":"comando-metricas.js","sourceRoot":"","sources":["../../src/cli/comando-metricas.ts"],"names":[],"mappings":"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","sourcesContent":["// SPDX-License-Identifier: MIT\r\nimport { Command } from 'commander';\r\nimport path from 'node:path';\r\nimport { lerEstado, salvarEstado } from '../zeladores/util/persistencia.js';\r\nimport { log } from '../nucleo/constelacao/log.js';\r\nimport { config } from '../nucleo/constelacao/cosmos.js';\r\nimport { formatMs } from '../nucleo/constelacao/format.js';\r\nimport type { MetricaExecucao } from '../tipos/tipos.js';\r\n\r\ninterface RegistroHistorico extends MetricaExecucao {\r\n  timestamp: number;\r\n}\r\n\r\nconst formatarDuracao = (ms: number) => formatMs(ms);\r\n\r\nfunction agregados(historico: RegistroHistorico[]) {\r\n  if (!historico.length) return null;\r\n  const total = historico.length;\r\n  const somaAnalise = historico.reduce((acc, h) => acc + h.tempoAnaliseMs, 0);\r\n  const somaParsing = historico.reduce((acc, h) => acc + h.tempoParsingMs, 0);\r\n  const analistasMap = new Map<\r\n    string,\r\n    { totalMs: number; execucoes: number; ocorrencias: number }\r\n  >();\r\n  for (const h of historico) {\r\n    for (const a of h.analistas) {\r\n      const dado = analistasMap.get(a.nome) || { totalMs: 0, execucoes: 0, ocorrencias: 0 };\r\n      dado.totalMs += a.duracaoMs;\r\n      dado.execucoes += 1;\r\n      dado.ocorrencias += a.ocorrencias;\r\n      analistasMap.set(a.nome, dado);\r\n    }\r\n  }\r\n  const analistasOrdenados = [...analistasMap.entries()]\r\n    .sort((a, b) => b[1].totalMs - a[1].totalMs)\r\n    .slice(0, 5)\r\n    .map(([nome, d]) => ({\r\n      nome,\r\n      totalMs: d.totalMs,\r\n      mediaMs: d.totalMs / d.execucoes,\r\n      execucoes: d.execucoes,\r\n      ocorrencias: d.ocorrencias,\r\n    }));\r\n  return {\r\n    totalExecucoes: total,\r\n    mediaAnaliseMs: somaAnalise / total,\r\n    mediaParsingMs: somaParsing / total,\r\n    topAnalistas: analistasOrdenados,\r\n  };\r\n}\r\n\r\nexport function comandoMetricas() {\r\n  return new Command('metricas')\r\n    .description('Inspeciona hist√≥rico de m√©tricas de execu√ß√µes anteriores')\r\n    .option('-j, --json', 'Sa√≠da em JSON bruto (historico e agregados)')\r\n    .option(\r\n      '-l, --limite <n>',\r\n      'Quantidade de registros mais recentes (default 10)',\r\n      (v) => Number(v),\r\n      10,\r\n    )\r\n    .option('-e, --export <arquivo>', 'Exporta hist√≥rico completo em JSON para arquivo')\r\n    .option('-a, --analistas', 'Exibe tabela agregada por analista (top 5)')\r\n    .action(\r\n      async (opts: { json?: boolean; limite?: number; export?: string; analistas?: boolean }) => {\r\n        const caminho = config.ANALISE_METRICAS_HISTORICO_PATH;\r\n        const historico = await lerEstado<RegistroHistorico[]>(caminho).catch(() => []);\r\n        const lista = Array.isArray(historico) ? historico : [];\r\n        const ultimos = opts.limite ? lista.slice(-opts.limite) : lista;\r\n        const agg = agregados(lista) || undefined;\r\n\r\n        if (opts.export) {\r\n          const destino = path.isAbsolute(opts.export)\r\n            ? opts.export\r\n            : path.join(process.cwd(), opts.export);\r\n          await salvarEstado(destino, {\r\n            exportadoEm: new Date().toISOString(),\r\n            total: lista.length,\r\n            historico: lista,\r\n          });\r\n          log.sucesso(`üì¶ Hist√≥rico de m√©tricas exportado para ${destino}`);\r\n          return;\r\n        }\r\n\r\n        if (opts.json) {\r\n          // Emite JSON puro (sem prefixos de log) para facilitar piping / CI\r\n          console.log(\r\n            JSON.stringify(\r\n              { total: lista.length, limite: opts.limite, historico: ultimos, agregados: agg },\r\n              null,\r\n              2,\r\n            ),\r\n          );\r\n          return;\r\n        }\r\n\r\n        log.info(`\\nüìä Execu√ß√µes registradas: ${lista.length}`);\r\n        if (!lista.length) {\r\n          log.aviso(\r\n            'Nenhum hist√≥rico de m√©tricas encontrado ainda. Execute um diagn√≥stico com --metricas ativo.',\r\n          );\r\n          return;\r\n        }\r\n        for (const h of ultimos) {\r\n          const data = new Date(h.timestamp).toISOString();\r\n          log.info(\r\n            `- ${data} | arquivos=${h.totalArquivos} analise=${formatarDuracao(h.tempoAnaliseMs)} parsing=${formatarDuracao(h.tempoParsingMs)} cache(h/m)=${h.cacheAstHits}/${h.cacheAstMiss}`,\r\n          );\r\n        }\r\n        if (opts.analistas && agg) {\r\n          log.info('\\nüß† Top analistas (por tempo acumulado):');\r\n          for (const a of agg.topAnalistas) {\r\n            log.info(\r\n              `  ‚Ä¢ ${a.nome} total=${formatMs(a.totalMs)} m√©dia=${formatMs(a.mediaMs)} exec=${a.execucoes} ocorr=${a.ocorrencias}`,\r\n            );\r\n          }\r\n        }\r\n        if (agg) {\r\n          log.info(\r\n            `\\nM√©dias: an√°lise=${formatMs(agg.mediaAnaliseMs)} parsing=${formatMs(agg.mediaParsingMs)}`,\r\n          );\r\n        }\r\n      },\r\n    );\r\n}\r\n"]}