{"version":3,"file":"comandos.js","sourceRoot":"","sources":["../../src/cli/comandos.ts"],"names":[],"mappings":"AAEA,OAAO,EAAE,mBAAmB,EAAE,MAAM,2BAA2B,CAAC;AAChE,OAAO,EAAE,eAAe,EAAE,MAAM,uBAAuB,CAAC;AACxD,OAAO,EAAE,YAAY,EAAE,MAAM,oBAAoB,CAAC;AAClD,OAAO,EAAE,mBAAmB,EAAE,MAAM,2BAA2B,CAAC;AAChE,OAAO,EAAE,gBAAgB,EAAE,MAAM,wBAAwB,CAAC;AAC1D,OAAO,EAAE,gBAAgB,EAAE,MAAM,wBAAwB,CAAC;AAC1D,OAAO,EAAE,eAAe,EAAE,MAAM,uBAAuB,CAAC;AACxD,OAAO,EAAE,wBAAwB,EAAE,MAAM,uBAAuB,CAAC;AAEjE,MAAM,UAAU,iBAAiB,CAAC,OAAgB,EAAE,mBAA4C;IAC9F,OAAO,CAAC,UAAU,CAAC,mBAAmB,CAAC,mBAAmB,CAAC,CAAC,CAAC;IAC7D,OAAO,CAAC,UAAU,CAAC,eAAe,CAAC,mBAAmB,CAAC,CAAC,CAAC;IACzD,OAAO,CAAC,UAAU,CAAC,YAAY,CAAC,mBAAmB,CAAC,CAAC,CAAC;IACtD,OAAO,CAAC,UAAU,CAAC,mBAAmB,CAAC,mBAAmB,CAAC,CAAC,CAAC;IAC7D,OAAO,CAAC,UAAU,CAAC,gBAAgB,CAAC,mBAAmB,CAAC,CAAC,CAAC;IAC1D,OAAO,CAAC,UAAU,CAAC,gBAAgB,EAAE,CAAC,CAAC;IACvC,OAAO,CAAC,UAAU,CAAC,eAAe,EAAE,CAAC,CAAC;IAEtC,+BAA+B;IAC/B,wBAAwB,CAAC,OAAO,CAAC,CAAC;AACpC,CAAC;AAED,0BAA0B;AAC1B,0BAA0B;AAC1B,IAAI,KAAK;IAAE,CAAC,CAAC,CAAC,sBAAsB","sourcesContent":["// SPDX-License-Identifier: MIT\r\nimport type { Command } from 'commander';\r\nimport { comandoDiagnosticar } from './comando-diagnosticar.js';\r\nimport { comandoGuardian } from './comando-guardian.js';\r\nimport { comandoPodar } from './comando-podar.js';\r\nimport { comandoReestruturar } from './comando-reestruturar.js';\r\nimport { comandoAtualizar } from './comando-atualizar.js';\r\nimport { comandoAnalistas } from './comando-analistas.js';\r\nimport { comandoMetricas } from './comando-metricas.js';\r\nimport { registrarComandoReverter } from './comando-reverter.js';\r\n\r\nexport function registrarComandos(program: Command, aplicarFlagsGlobais: (opts: unknown) => void) {\r\n  program.addCommand(comandoDiagnosticar(aplicarFlagsGlobais));\r\n  program.addCommand(comandoGuardian(aplicarFlagsGlobais));\r\n  program.addCommand(comandoPodar(aplicarFlagsGlobais));\r\n  program.addCommand(comandoReestruturar(aplicarFlagsGlobais));\r\n  program.addCommand(comandoAtualizar(aplicarFlagsGlobais));\r\n  program.addCommand(comandoAnalistas());\r\n  program.addCommand(comandoMetricas());\r\n\r\n  // Registra comando de revers√£o\r\n  registrarComandoReverter(program);\r\n}\r\n\r\n/* istanbul ignore next */\r\n/* istanbul ignore next */\r\nif (false) 0; // removed stub import\r\n"]}