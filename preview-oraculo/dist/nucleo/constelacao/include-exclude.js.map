{"version":3,"file":"include-exclude.js","sourceRoot":"","sources":["../../../src/nucleo/constelacao/include-exclude.ts"],"names":[],"mappings":"AAOA,OAAO,UAAU,MAAM,YAAY,CAAC;AAEpC;;;;GAIG;AACH,MAAM,UAAU,aAAa,CAC3B,OAAe,EACf,KAAa,EACb,MAA4B;IAE5B,2CAA2C;IAC3C,IAAI,MAAM,CAAC,QAAQ,EAAE,CAAC;QACpB,KAAK,MAAM,GAAG,IAAI,MAAM,CAAC,QAAQ,EAAE,CAAC;YAClC,IAAI,OAAO,CAAC,UAAU,CAAC,GAAG,CAAC,EAAE,CAAC;gBAC5B,MAAM,IAAI,GAAG,MAAM,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;gBAClC,IAAI,IAAI,CAAC,OAAO;oBAAE,OAAO,KAAK,CAAC;gBAC/B,IAAI,IAAI,CAAC,OAAO;oBAAE,OAAO,IAAI,CAAC;gBAC9B,IAAI,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAS,EAAE,EAAE,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;oBAAE,OAAO,IAAI,CAAC;gBACzF,IAAI,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE,KAAK,CAAC;oBAAE,OAAO,IAAI,CAAC;YAC9D,CAAC;QACH,CAAC;IACH,CAAC;IACD,sEAAsE;IACtE,IACE,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,iBAAiB,CAAC;QACvC,MAAM,CAAC,iBAAiB,CAAC,MAAM,GAAG,CAAC;QACnC,UAAU,CAAC,OAAO,CAAC,OAAO,EAAE,MAAM,CAAC,iBAAiB,CAAC,EACrD,CAAC;QACD,OAAO,KAAK,CAAC;IACf,CAAC;IACD,IAAI,MAAM,CAAC,aAAa,IAAI,MAAM,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC,CAAS,EAAE,EAAE,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;QAC1F,OAAO,KAAK,CAAC;IACf,CAAC;IACD,IACE,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,iBAAiB,CAAC;QACvC,MAAM,CAAC,iBAAiB,CAAC,MAAM,GAAG,CAAC;QACnC,UAAU,CAAC,OAAO,CAAC,OAAO,EAAE,MAAM,CAAC,iBAAiB,CAAC,EACrD,CAAC;QACD,OAAO,IAAI,CAAC;IACd,CAAC;IACD,IAAI,MAAM,CAAC,aAAa,IAAI,MAAM,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC,CAAS,EAAE,EAAE,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;QAC1F,OAAO,IAAI,CAAC;IACd,CAAC;IACD,kCAAkC;IAClC,OAAO,IAAI,CAAC;AACd,CAAC","sourcesContent":["// SPDX-License-Identifier: MIT\r\n/**\r\n * Helper centralizado para lógica de include/exclude dinâmica por diretório/padrão.\r\n * Permite ativar/desativar regras, aplicar toggles e customizações programáticas.\r\n */\r\nimport type { Dirent } from 'node:fs';\r\nimport type { IncludeExcludeConfig } from '../../tipos/tipos.js';\r\nimport micromatch from 'micromatch';\r\n\r\n/**\r\n * Avalia se um caminho deve ser incluído/excluído conforme config dinâmica.\r\n * - Aplica regras globais e específicas por diretório.\r\n * - Permite toggles programáticos.\r\n */\r\nexport function shouldInclude(\r\n  relPath: string,\r\n  entry: Dirent,\r\n  config: IncludeExcludeConfig,\r\n): boolean {\r\n  // Regras por diretório (match por prefixo)\r\n  if (config.dirRules) {\r\n    for (const dir in config.dirRules) {\r\n      if (relPath.startsWith(dir)) {\r\n        const rule = config.dirRules[dir];\r\n        if (rule.exclude) return false;\r\n        if (rule.include) return true;\r\n        if (rule.patterns && rule.patterns.some((p: string) => relPath.includes(p))) return true;\r\n        if (rule.custom && rule.custom(relPath, entry)) return true;\r\n      }\r\n    }\r\n  }\r\n  // Globais (prioridade: excludeGlob > exclude > includeGlob > include)\r\n  if (\r\n    Array.isArray(config.globalExcludeGlob) &&\r\n    config.globalExcludeGlob.length > 0 &&\r\n    micromatch.isMatch(relPath, config.globalExcludeGlob)\r\n  ) {\r\n    return false;\r\n  }\r\n  if (config.globalExclude && config.globalExclude.some((p: string) => relPath.includes(p))) {\r\n    return false;\r\n  }\r\n  if (\r\n    Array.isArray(config.globalIncludeGlob) &&\r\n    config.globalIncludeGlob.length > 0 &&\r\n    micromatch.isMatch(relPath, config.globalIncludeGlob)\r\n  ) {\r\n    return true;\r\n  }\r\n  if (config.globalInclude && config.globalInclude.some((p: string) => relPath.includes(p))) {\r\n    return true;\r\n  }\r\n  // Default: inclui se não excluído\r\n  return true;\r\n}\r\n"]}