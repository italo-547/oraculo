{"version":3,"file":"cosmos.js","sourceRoot":"","sources":["../../../src/nucleo/constelacao/cosmos.ts"],"names":[],"mappings":"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","sourcesContent":["// SPDX-License-Identifier: MIT\r\nimport { promises as fs } from 'node:fs';\r\nimport path from 'node:path';\r\nimport type { IncludeExcludeConfig } from '@tipos/tipos.js';\r\n\r\n// Diretório atual do usuário (base do projeto)\r\nconst CWD = process.cwd();\r\n\r\n// Diretórios internos do Oráculo\r\nconst ORACULO_STATE = path.join(CWD, '.oraculo');\r\nconst ZELADOR_ABANDONED = path.join(ORACULO_STATE, 'abandonados');\r\n\r\n// Configuração global do sistema Oráculo\r\nexport const configDefault = {\r\n  VERBOSE: false,\r\n  // 🌱 Flags gerais\r\n  DEV_MODE: process.env.NODE_ENV === 'development' || process.env.ORACULO_DEV === 'true',\r\n  AUTOANALISE_CONCURRENCY: 5,\r\n  // Segurança: modo seguro impede ações destrutivas por padrão.\r\n  // Em ambiente de testes (VITEST) mantemos SAFE_MODE desabilitado para preservar o comportamento das suites.\r\n  // Para desativar por processo/ambiente fora de testes: ORACULO_SAFE_MODE=0\r\n  SAFE_MODE: process.env.VITEST ? false : process.env.ORACULO_SAFE_MODE !== '0',\r\n  // Permissões explícitas para permitir plugins/exec/fs mutações quando SAFE_MODE ativo\r\n  ALLOW_PLUGINS: process.env.ORACULO_ALLOW_PLUGINS === '1' || false,\r\n  ALLOW_EXEC: process.env.ORACULO_ALLOW_EXEC === '1' || false,\r\n  ALLOW_MUTATE_FS: process.env.ORACULO_ALLOW_MUTATE_FS === '1' || false,\r\n\r\n  // 🛡️ Guardian\r\n  GUARDIAN_ENABLED: true,\r\n  GUARDIAN_ENFORCE_PROTECTION: true,\r\n  GUARDIAN_BASELINE: path.join(ORACULO_STATE, 'baseline.json'),\r\n  GUARDIAN_ALLOW_ADDS: false,\r\n  GUARDIAN_ALLOW_CHG: false,\r\n  GUARDIAN_ALLOW_DELS: false,\r\n  // Padrões ignorados somente para o Guardian (não impacta scanner geral / analistas)\r\n  GUARDIAN_IGNORE_PATTERNS: [] as string[], // obsoleto (sincronizado a partir de INCLUDE_EXCLUDE_RULES)\r\n\r\n  // 📄 Relatórios\r\n  REPORT_SILENCE_LOGS: false,\r\n  // Quando true, suprime logs de progresso que incluem a palavra \"parcial\"\r\n  // (ex.: \"Diretórios escaneados (parcial): ...\"). Útil para reduzir ruído em CI ou\r\n  // ao executar em modo silencioso. Valor default: false.\r\n  SUPPRESS_PARCIAL_LOGS: false,\r\n  REPORT_EXPORT_ENABLED: false,\r\n  REPORT_OUTPUT_DIR: path.join(CWD, 'relatorios'),\r\n  // Relatório de Saúde (controle de exibição)\r\n  // Quando true, usa tabela com moldura no modo normal/compact (ruído reduzido)\r\n  RELATORIO_SAUDE_TABELA_ENABLED: true,\r\n  // Quando true, em modo VERBOSE a tabela é desativada e exibimos lista detalhada\r\n  RELATORIO_SAUDE_DETALHADO_VERBOSE: true,\r\n\r\n  // 📂 Zelador\r\n  ORACULO_STATE_DIR: ORACULO_STATE,\r\n  ZELADOR_ABANDONED_DIR: ZELADOR_ABANDONED,\r\n  ZELADOR_PENDING_PATH: path.join(ORACULO_STATE, 'pendentes.json'),\r\n  ZELADOR_REACTIVATE_PATH: path.join(ORACULO_STATE, 'reativar.json'),\r\n  ZELADOR_HISTORY_PATH: path.join(ORACULO_STATE, 'historico.json'),\r\n  ZELADOR_REPORT_PATH: path.join(ORACULO_STATE, 'poda-oraculo.md'),\r\n  ZELADOR_GHOST_INACTIVITY_DAYS: 30,\r\n  ZELADOR_IGNORE_PATTERNS: [] as string[], // obsoleto (sincronizado a partir de INCLUDE_EXCLUDE_RULES)\r\n  // Padrões adicionais controlados via CLI para filtragem dinâmica pontual\r\n  CLI_INCLUDE_PATTERNS: [] as string[], // quando não vazio: somente arquivos que casem algum pattern serão considerados (override dos ignores padrão)\r\n  // Grupos de include: cada ocorrência de --include forma um grupo; padrões separados por vírgula/espaço dentro do mesmo argumento devem ser TODOS casados (AND).\r\n  // O arquivo é incluído se casar QUALQUER grupo (OR entre grupos). Mantemos CLI_INCLUDE_PATTERNS como lista achatada para raízes/compat.\r\n  CLI_INCLUDE_GROUPS: [] as string[][],\r\n  CLI_EXCLUDE_PATTERNS: [] as string[], // sempre excluídos (aplicado após include)\r\n  // Regras dinâmicas e programáticas (opcionais) para decisões de include/exclude\r\n  // Regras dinâmicas: NOME PT-BR (ConfigIncluiExclui) mas tipo mantém compat\r\n  INCLUDE_EXCLUDE_RULES: {\r\n    // Fonte única de verdade para exclusões/ inclusões globais\r\n    globalExcludeGlob: [\r\n      // Dependências e artefatos externos\r\n      '**/node_modules/**',\r\n      '.pnpm/**',\r\n      // Estado interno / cache / builds\r\n      '**/.oraculo/**',\r\n      'dist/**',\r\n      '**/dist/**',\r\n      'coverage/**',\r\n      '**/coverage/**',\r\n      'build/**',\r\n      '**/build/**',\r\n      // Logs e lockfiles\r\n      '**/*.log',\r\n      '**/*.lock',\r\n      'package-lock.json',\r\n      'yarn.lock',\r\n      'pnpm-lock.yaml',\r\n      // VCS\r\n      '**/.git/**',\r\n    ],\r\n    globalInclude: [],\r\n    globalExclude: [],\r\n    dirRules: {},\r\n    // NOTE: campo `defaultExcludes` removido — use `globalExcludeGlob` em INCLUDE_EXCLUDE_RULES\r\n  } as IncludeExcludeConfig,\r\n  ZELADOR_LINE_THRESHOLD: 20,\r\n\r\n  // 🔍 Analistas\r\n  SCANNER_EXTENSOES_COM_AST: ['.js', '.jsx', '.ts', '.tsx', '.mjs', '.cjs'],\r\n  VIGIA_TOP_N: 10,\r\n  ANALISE_LIMITES: {\r\n    FUNCOES_LONGAS: {\r\n      MAX_LINHAS: 30,\r\n      MAX_PARAMETROS: 4,\r\n      MAX_ANINHAMENTO: 3,\r\n    },\r\n  },\r\n  ANALISE_AST_CACHE_ENABLED: true,\r\n  ANALISE_METRICAS_ENABLED: true,\r\n  // Timeout por analista individual (ms) - 0 desabilita\r\n  ANALISE_TIMEOUT_POR_ANALISTA_MS: 30000, // 30 segundos por padrão\r\n  // Pool de workers para processamento paralelo\r\n  WORKER_POOL_ENABLED: true,\r\n  WORKER_POOL_MAX_WORKERS: 0, // 0 = usar número de CPUs\r\n  WORKER_POOL_BATCH_SIZE: 10,\r\n  // Caminho de histórico de métricas (migrado para subdir dedicado; arquivo antigo na raiz ainda lido como fallback em runtime onde aplicável)\r\n  ANALISE_METRICAS_HISTORICO_PATH: path.join(\r\n    ORACULO_STATE,\r\n    'historico-metricas',\r\n    'metricas-historico.json',\r\n  ),\r\n  ANALISE_METRICAS_HISTORICO_MAX: 200,\r\n  // Priorização de arquivos (usa histórico incremental anterior)\r\n  ANALISE_PRIORIZACAO_ENABLED: true,\r\n  ANALISE_PRIORIZACAO_PESOS: {\r\n    duracaoMs: 1,\r\n    ocorrencias: 2,\r\n    penalidadeReuso: 0.5,\r\n  },\r\n  LOG_ESTRUTURADO: false,\r\n  // Incremental desabilitado por padrão para evitar efeitos colaterais em testes; habilite explicitamente onde necessário\r\n  ANALISE_INCREMENTAL_ENABLED: false,\r\n  ANALISE_INCREMENTAL_STATE_PATH: path.join(ORACULO_STATE, 'incremental-analise.json'),\r\n  ANALISE_INCREMENTAL_VERSION: 1,\r\n\r\n  // Performance (snapshots sintéticos)\r\n  PERF_SNAPSHOT_DIR: path.join('docs', 'perf'),\r\n\r\n  // Estrutura – diretórios alvo padronizados (evita literais dispersos)\r\n  ESTRUTURA_TARGETS: {\r\n    TESTS_RAIZ_DIR: 'src',\r\n    SCRIPTS_DIR: path.posix.join('src', 'scripts'),\r\n    CONFIG_DIR: 'config',\r\n    TYPES_DIR: 'types',\r\n    DOCS_FRAGMENTS_DIR: path.posix.join('docs', 'fragments'),\r\n  },\r\n\r\n  // Estrutura (plugins, layers, auto-fix, concorrência)\r\n  STRUCTURE_PLUGINS: [],\r\n  STRUCTURE_AUTO_FIX: false,\r\n  STRUCTURE_CONCURRENCY: 5,\r\n  STRUCTURE_LAYERS: {},\r\n  STRUCTURE_REVERSE_MAP_PATH: path.join(ORACULO_STATE, 'mapa-reversao.json'),\r\n  // Limite de tamanho (bytes) para considerar mover arquivo em plano de reorganização\r\n  ESTRUTURA_PLANO_MAX_FILE_SIZE: 256 * 1024, // ~250KB\r\n  // Limite de arquivos considerados \"muitos arquivos na raiz\" (ajustável por repo)\r\n  ESTRUTURA_ARQUIVOS_RAIZ_MAX: 10,\r\n\r\n  // Compatibilidade/legado\r\n  STATE_DIR: ORACULO_STATE,\r\n  ZELADOR_STATE_DIR: ORACULO_STATE,\r\n  COMPACT_MODE: false,\r\n  // Modo somente varredura (sem AST, sem técnicas) quando ativado por flag\r\n  SCAN_ONLY: false,\r\n  // Alias semântico (uniformização com ANALISE_*) – manter sincronizado com SCAN_ONLY\r\n  ANALISE_SCAN_ONLY: false,\r\n  // Controle de ruído de erros de parsing\r\n  PARSE_ERRO_AGRUPAR: true, // quando true, múltiplos erros no mesmo arquivo são consolidados\r\n  PARSE_ERRO_MAX_POR_ARQUIVO: 1, // limite de ocorrências individuais por arquivo antes de agrupar\r\n  // Se verdadeiro, qualquer PARSE_ERRO (mesmo agregado) provoca exit code 1\r\n  PARSE_ERRO_FALHA: false,\r\n};\r\n\r\n// Clonamos para instância mutável\r\nexport const config: typeof configDefault & {\r\n  __OVERRIDES__?: Record<string, { from: unknown; to: unknown; fonte: string }>;\r\n} = JSON.parse(JSON.stringify(configDefault));\r\n\r\ntype DiffRegistro = { from: unknown; to: unknown; fonte: string };\r\n\r\n// Helper interno: verifica se é um objeto plano (não array)\r\nfunction ehObjetoPlano(v: unknown): v is Record<string, unknown> {\r\n  return !!v && typeof v === 'object' && !Array.isArray(v);\r\n}\r\n\r\n// Merge profundo e seguro de objetos, registrando diferenças para auditoria\r\nfunction mesclarProfundo(\r\n  target: Record<string, unknown>,\r\n  src: Record<string, unknown>,\r\n  fonte: string,\r\n  diffs: Record<string, DiffRegistro>,\r\n  prefix = '',\r\n): void {\r\n  for (const k of Object.keys(src || {})) {\r\n    const keyPath = prefix ? `${prefix}.${k}` : k;\r\n    const srcVal = src[k];\r\n    const tgtVal = target[k];\r\n    if (ehObjetoPlano(srcVal) && ehObjetoPlano(tgtVal)) {\r\n      mesclarProfundo(\r\n        tgtVal as Record<string, unknown>,\r\n        srcVal as Record<string, unknown>,\r\n        fonte,\r\n        diffs,\r\n        keyPath,\r\n      );\r\n    } else if (srcVal !== undefined) {\r\n      if (tgtVal !== srcVal) {\r\n        diffs[keyPath] = { from: tgtVal, to: srcVal, fonte };\r\n      }\r\n      // atribuição dinâmica segura\r\n      (target as Record<string, unknown>)[k] = srcVal as unknown;\r\n    }\r\n  }\r\n}\r\n\r\nasync function carregarArquivoConfig(): Promise<Record<string, unknown> | null> {\r\n  // Ordem de busca simples\r\n  const candidatos = ['oraculo.config.json', 'src/config.json'];\r\n  for (const nome of candidatos) {\r\n    try {\r\n      const conteudo = await fs.readFile(path.join(process.cwd(), nome), 'utf-8');\r\n      const json = conteudo.trim() ? JSON.parse(conteudo) : null;\r\n      if (json) return json;\r\n    } catch {\r\n      /* ignore */\r\n    }\r\n  }\r\n  return null;\r\n}\r\n\r\n// Atualiza padrões de ignorados a partir de INCLUDE_EXCLUDE_RULES\r\nfunction sincronizarIgnorados() {\r\n  const dyn = (config.INCLUDE_EXCLUDE_RULES || {}) as IncludeExcludeConfig;\r\n  const glob = Array.isArray(dyn.globalExcludeGlob) ? dyn.globalExcludeGlob : [];\r\n  // A partir de agora, apenas `globalExcludeGlob` é adotado como fonte de verdade.\r\n  const arr = Array.from(new Set(glob.map((g) => String(g))));\r\n  (config as unknown as { ZELADOR_IGNORE_PATTERNS: string[] }).ZELADOR_IGNORE_PATTERNS = arr;\r\n  (config as unknown as { GUARDIAN_IGNORE_PATTERNS: string[] }).GUARDIAN_IGNORE_PATTERNS = arr;\r\n}\r\n\r\nfunction carregarEnvConfig(): Record<string, unknown> {\r\n  const resultado: Record<string, unknown> = {};\r\n  // Mapeia cada chave do default para uma env ORACULO_<KEY>\r\n  const stack: Array<{ obj: Record<string, unknown>; prefix: string }> = [\r\n    { obj: configDefault as unknown as Record<string, unknown>, prefix: '' },\r\n  ];\r\n  while (stack.length) {\r\n    const popped = stack.pop();\r\n    if (!popped) break;\r\n    const { obj, prefix } = popped;\r\n    for (const k of Object.keys(obj)) {\r\n      const keyPath = prefix ? `${prefix}.${k}` : k;\r\n      const envName = `ORACULO_${keyPath.replace(/\\./g, '_').toUpperCase()}`;\r\n      const currentVal = (obj as Record<string, unknown>)[k];\r\n      if (ehObjetoPlano(currentVal)) {\r\n        stack.push({ obj: currentVal, prefix: keyPath });\r\n      } else {\r\n        const rawEnv = process.env[envName];\r\n        if (rawEnv !== undefined) {\r\n          let val: unknown = rawEnv;\r\n          if (/^(true|false)$/i.test(rawEnv)) val = rawEnv.toLowerCase() === 'true';\r\n          else if (/^-?\\d+(\\.\\d+)?$/.test(rawEnv)) val = Number(rawEnv);\r\n          atribuirPorCaminho(resultado, keyPath, val);\r\n        }\r\n      }\r\n    }\r\n  }\r\n  return resultado;\r\n}\r\n\r\n// Atribui um valor em um caminho ponto-notado, criando objetos intermediários conforme necessário\r\nfunction atribuirPorCaminho(base: Record<string, unknown>, keyPath: string, value: unknown) {\r\n  const parts = keyPath.split('.');\r\n  let cursor: Record<string, unknown> = base;\r\n  for (let i = 0; i < parts.length - 1; i++) {\r\n    const p = parts[i];\r\n    let next = cursor[p];\r\n    if (!ehObjetoPlano(next)) {\r\n      next = {};\r\n      cursor[p] = next;\r\n    }\r\n    cursor = next as Record<string, unknown>;\r\n  }\r\n  cursor[parts[parts.length - 1]] = value;\r\n}\r\n\r\nexport async function inicializarConfigDinamica(overridesCli?: Record<string, unknown>) {\r\n  const diffs: Record<string, DiffRegistro> = {};\r\n  const arquivo = await carregarArquivoConfig();\r\n  if (arquivo)\r\n    mesclarProfundo(\r\n      config as unknown as Record<string, unknown>,\r\n      arquivo as Record<string, unknown>,\r\n      'arquivo',\r\n      diffs,\r\n    );\r\n  const envCfg = carregarEnvConfig();\r\n  if (Object.keys(envCfg).length)\r\n    mesclarProfundo(config as unknown as Record<string, unknown>, envCfg, 'env', diffs);\r\n  if (overridesCli && Object.keys(overridesCli).length)\r\n    mesclarProfundo(\r\n      config as unknown as Record<string, unknown>,\r\n      overridesCli as Record<string, unknown>,\r\n      'cli',\r\n      diffs,\r\n    );\r\n  // Removido: fallback de migração para caminho antigo de métricas (não utilizado)\r\n  // Sincroniza alias de modo somente varredura\r\n  if (config.ANALISE_SCAN_ONLY && !config.SCAN_ONLY) config.SCAN_ONLY = true;\r\n  else if (config.SCAN_ONLY && !config.ANALISE_SCAN_ONLY) config.ANALISE_SCAN_ONLY = true;\r\n  // Sincroniza padrões de ignorados a partir da configuração dinâmica\r\n  sincronizarIgnorados();\r\n  config.__OVERRIDES__ = diffs;\r\n  return diffs;\r\n}\r\n\r\nexport function aplicarConfigParcial(partial: Record<string, unknown>) {\r\n  const diffs: Record<string, DiffRegistro> = {};\r\n  mesclarProfundo(config as unknown as Record<string, unknown>, partial, 'programatico', diffs);\r\n  if (config.ANALISE_SCAN_ONLY && !config.SCAN_ONLY) config.SCAN_ONLY = true;\r\n  else if (config.SCAN_ONLY && !config.ANALISE_SCAN_ONLY) config.ANALISE_SCAN_ONLY = true;\r\n  // Sincroniza padrões de ignorados a partir da configuração dinâmica\r\n  sincronizarIgnorados();\r\n  config.__OVERRIDES__ = { ...(config.__OVERRIDES__ || {}), ...diffs };\r\n  return diffs;\r\n}\r\n\r\n// Inicialização automática (arquivo + env) sem CLI (CLI aplicará depois)\r\n// Em ambiente de testes (VITEST), evitamos auto-init para não sobrescrever flags de teste.\r\nif (!process.env.VITEST) {\r\n  void inicializarConfigDinamica();\r\n}\r\n"]}