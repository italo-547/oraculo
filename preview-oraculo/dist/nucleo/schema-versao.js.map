{"version":3,"file":"schema-versao.js","sourceRoot":"","sources":["../../src/nucleo/schema-versao.ts"],"names":[],"mappings":"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","sourcesContent":["// SPDX-License-Identifier: MIT\r\n/**\r\n * Sistema de Versionamento de Schema para Relatórios JSON\r\n *\r\n * Este módulo gerencia versões de schema para relatórios JSON do Oráculo,\r\n * garantindo compatibilidade futura e evolução controlada dos formatos.\r\n */\r\n\r\nexport interface SchemaMetadata {\r\n  /** Versão do schema (ex: \"1.0.0\") */\r\n  versao: string;\r\n  /** Data de criação do schema */\r\n  criadoEm: string;\r\n  /** Descrição das mudanças nesta versão */\r\n  descricao: string;\r\n  /** Versões compatíveis para leitura (backward compatibility) */\r\n  compatibilidade: string[];\r\n  /** Campos obrigatórios nesta versão */\r\n  camposObrigatorios: string[];\r\n  /** Campos opcionais nesta versão */\r\n  camposOpcionais: string[];\r\n}\r\n\r\nexport interface RelatorioComVersao<T = unknown> {\r\n  /** Metadados de versão do schema */\r\n  _schema: SchemaMetadata;\r\n  /** Dados do relatório */\r\n  dados: T;\r\n}\r\n\r\n/** Versão atual do schema */\r\nexport const VERSAO_ATUAL = '1.0.0';\r\n\r\n/** Histórico de versões do schema */\r\nexport const HISTORICO_VERSOES: Record<string, SchemaMetadata> = {\r\n  '1.0.0': {\r\n    versao: '1.0.0',\r\n    criadoEm: '2025-08-28',\r\n    descricao: 'Versão inicial com campos básicos de relatório',\r\n    compatibilidade: ['1.0.0'],\r\n    camposObrigatorios: [\r\n      '_schema',\r\n      'dados',\r\n      '_schema.versao',\r\n      '_schema.criadoEm',\r\n      '_schema.descricao',\r\n    ],\r\n    camposOpcionais: [\r\n      '_schema.compatibilidade',\r\n      '_schema.camposObrigatorios',\r\n      '_schema.camposOpcionais',\r\n    ],\r\n  },\r\n};\r\n\r\n/**\r\n * Cria metadados de schema para a versão atual\r\n */\r\nexport function criarSchemaMetadata(\r\n  versao: string = VERSAO_ATUAL,\r\n  descricaoPersonalizada?: string,\r\n): SchemaMetadata {\r\n  const base = HISTORICO_VERSOES[versao];\r\n  if (!base) {\r\n    throw new Error(`Versão de schema desconhecida: ${versao}`);\r\n  }\r\n\r\n  return {\r\n    ...base,\r\n    ...(descricaoPersonalizada && { descricao: descricaoPersonalizada }),\r\n  };\r\n}\r\n\r\n/**\r\n * Valida se um relatório tem schema válido\r\n */\r\nexport function validarSchema(relatorio: Record<string, unknown>): {\r\n  valido: boolean;\r\n  erros: string[];\r\n} {\r\n  const erros: string[] = [];\r\n\r\n  // Verificar estrutura básica\r\n  if (!relatorio || typeof relatorio !== 'object') {\r\n    erros.push('Relatório deve ser um objeto');\r\n    return { valido: false, erros };\r\n  }\r\n\r\n  // Verificar presença do schema\r\n  if (!('_schema' in relatorio) || !relatorio._schema) {\r\n    erros.push('Campo _schema é obrigatório');\r\n    return { valido: false, erros };\r\n  }\r\n\r\n  const schema = relatorio._schema as Record<string, unknown>;\r\n\r\n  // Verificar campos obrigatórios do schema\r\n  const camposObrigatorios = ['versao', 'criadoEm', 'descricao'];\r\n  for (const campo of camposObrigatorios) {\r\n    if (!(campo in schema)) {\r\n      erros.push(`Campo _schema.${campo} é obrigatório`);\r\n    }\r\n  }\r\n\r\n  // Verificar se a versão existe no histórico\r\n  if (schema.versao && typeof schema.versao === 'string' && !HISTORICO_VERSOES[schema.versao]) {\r\n    erros.push(`Versão de schema desconhecida: ${schema.versao}`);\r\n  }\r\n\r\n  // Verificar presença dos dados\r\n  if (!('dados' in relatorio)) {\r\n    erros.push('Campo dados é obrigatório');\r\n  }\r\n\r\n  return {\r\n    valido: erros.length === 0,\r\n    erros,\r\n  };\r\n}\r\n\r\n/**\r\n * Migra um relatório para a versão atual se necessário\r\n */\r\nexport function migrarParaVersaoAtual<T>(\r\n  relatorio: Record<string, unknown>,\r\n): RelatorioComVersao<T> {\r\n  // Se já tem schema válido, retornar como está\r\n  const validacao = validarSchema(relatorio);\r\n  if (validacao.valido && relatorio._schema) {\r\n    return relatorio as unknown as RelatorioComVersao<T>;\r\n  }\r\n\r\n  // Se não tem schema, assumir que é um relatório legado e embrulhar\r\n  if (!('_schema' in relatorio) || !relatorio._schema) {\r\n    return {\r\n      _schema: criarSchemaMetadata(),\r\n      dados: relatorio as unknown as T,\r\n    };\r\n  }\r\n\r\n  // Para futuras migrações, implementar lógica aqui\r\n  // Por enquanto, apenas revalidar\r\n  if (!validacao.valido) {\r\n    throw new Error(`Relatório com schema inválido: ${validacao.erros.join(', ')}`);\r\n  }\r\n\r\n  return relatorio as unknown as RelatorioComVersao<T>;\r\n}\r\n\r\n/**\r\n * Cria um relatório com versão atual\r\n */\r\nexport function criarRelatorioComVersao<T>(\r\n  dados: T,\r\n  versao: string = VERSAO_ATUAL,\r\n  descricao?: string,\r\n): RelatorioComVersao<T> {\r\n  return {\r\n    _schema: criarSchemaMetadata(versao, descricao),\r\n    dados,\r\n  };\r\n}\r\n\r\n/**\r\n * Extrai apenas os dados de um relatório versionado\r\n */\r\nexport function extrairDados<T>(relatorio: RelatorioComVersao<T>): T {\r\n  return relatorio.dados;\r\n}\r\n\r\n/**\r\n * Verifica se uma versão é compatível com a atual\r\n */\r\nexport function versaoCompativel(versao: string): boolean {\r\n  const metadata = HISTORICO_VERSOES[versao];\r\n  if (!metadata) return false;\r\n\r\n  return metadata.compatibilidade.includes(VERSAO_ATUAL);\r\n}\r\n"]}