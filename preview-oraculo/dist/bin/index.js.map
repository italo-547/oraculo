{"version":3,"file":"index.js","sourceRoot":"","sources":["../../src/bin/index.ts"],"names":[],"mappings":";AACA,+BAA+B;AAC/B,mFAAmF;AACnF,OAAO,IAAI,MAAM,WAAW,CAAC;AAC7B,OAAO,EAAE,aAAa,EAAE,MAAM,UAAU,CAAC;AAEzC,MAAM,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC;AACnE,MAAM,UAAU,GAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,iBAAiB,CAAC,CAAC;AAC7D,MAAM,SAAS,GAAG,aAAa,CAAC,UAAU,CAAC,CAAC,QAAQ,EAAE,CAAC;AACvD,MAAM,SAAS,GAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,KAAK,EAAE,QAAQ,CAAC,CAAC;AAC1D,MAAM,QAAQ,GAAG,aAAa,CAAC,SAAS,CAAC,CAAC,QAAQ,EAAE,CAAC;AAErD,+EAA+E;AAC/E,KAAK,CAAC,KAAK,IAAI,EAAE;IACf,IAAI,CAAC;QACH,MAAM,EAAE,QAAQ,EAAE,GAAG,MAAM,MAAM,CAAC,aAAa,CAAC,CAAC;QACjD,QAAQ,CAAC,SAAS,EAAE,aAAa,CAAC,IAAI,CAAC,CAAC,CAAC;QACzC,MAAM,MAAM,CAAC,QAAQ,CAAC,CAAC;IACzB,CAAC;IAAC,OAAO,GAAG,EAAE,CAAC;QACb,OAAO,CAAC,KAAK,CAAC,gCAAgC,EAAG,GAAa,EAAE,OAAO,IAAI,GAAG,CAAC,CAAC;QAChF,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IAClB,CAAC;AACH,CAAC,CAAC,EAAE,CAAC","sourcesContent":["#!/usr/bin/env node\r\n// SPDX-License-Identifier: MIT\r\n// Bootstrap do binÃ¡rio: registra o loader ESM programaticamente e importa ./cli.js\r\nimport path from 'node:path';\r\nimport { pathToFileURL } from 'node:url';\r\n\r\nconst distRoot = path.resolve(path.dirname(process.argv[1]), '..');\r\nconst loaderPath = path.resolve(distRoot, 'node.loader.mjs');\r\nconst loaderUrl = pathToFileURL(loaderPath).toString();\r\nconst entryPath = path.resolve(distRoot, 'bin', 'cli.js');\r\nconst entryUrl = pathToFileURL(entryPath).toString();\r\n\r\n// Registra o loader sem usar --experimental-loader (evita ExperimentalWarning)\r\nvoid (async () => {\r\n  try {\r\n    const { register } = await import('node:module');\r\n    register(loaderUrl, pathToFileURL('./'));\r\n    await import(entryUrl);\r\n  } catch (err) {\r\n    console.error('Erro ao inicializar o oraculo:', (err as Error)?.message || err);\r\n    process.exit(1);\r\n  }\r\n})();\r\n"]}