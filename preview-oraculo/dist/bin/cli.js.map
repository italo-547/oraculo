{"version":3,"file":"cli.js","sourceRoot":"","sources":["../../src/bin/cli.ts"],"names":[],"mappings":"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","sourcesContent":["#!/usr/bin/env node\r\n// SPDX-License-Identifier: MIT\r\nimport { Command } from 'commander';\r\nimport { readFileSync } from 'node:fs';\r\nimport { fileURLToPath } from 'node:url';\r\nimport { dirname, join } from 'node:path';\r\nimport chalk from '@nucleo/constelacao/chalk-safe.js';\r\n\r\nimport { registrarComandos } from '@cli/comandos.js';\r\nimport { comandoPerf } from '@cli/comando-perf.js';\r\nimport {\r\n  config,\r\n  aplicarConfigParcial,\r\n  inicializarConfigDinamica,\r\n} from '@nucleo/constelacao/cosmos.js';\r\n\r\n// caminho do m√≥dulo (usado para localizar arquivos de configura√ß√£o)\r\nconst __filename = fileURLToPath(import.meta.url);\r\nconst __dirname = dirname(__filename);\r\n\r\n// üì¶ Ler vers√£o dinamicamente do package.json\r\nfunction getVersion(): string {\r\n  try {\r\n    // Ao compilar, este arquivo vai para dist/bin; o package.json fica na raiz (subir dois n√≠veis)\r\n    const packagePath = join(__dirname, '..', '..', 'package.json');\r\n    const packageJson = JSON.parse(readFileSync(packagePath, 'utf-8'));\r\n    return packageJson.version || '0.0.0';\r\n  } catch {\r\n    return '0.0.0'; // fallback\r\n  }\r\n}\r\n\r\n// üõ†Ô∏è Configura√ß√£o principal do CLI\r\nconst program = new Command();\r\n\r\nprogram\r\n  .name(chalk.magenta('oraculo'))\r\n  .version(getVersion())\r\n  .description('A ferramenta Or√°culo: an√°lise, reestrutura√ß√£o e prote√ß√£o de reposit√≥rios.')\r\n  .option('-s, --silence', 'silencia todos os logs de informa√ß√£o e aviso (sobrep√µe --verbose)')\r\n  .option(\r\n    '-v, --verbose',\r\n    'exibe logs detalhados de cada arquivo e t√©cnica analisada (ignorado se --silence)',\r\n  )\r\n  .option('-e, --export', 'gera arquivos de relat√≥rio detalhados (JSON e Markdown)')\r\n  .option('--debug', 'ativa logs de debug (equivalente a --dev)');\r\n// Flag experimental implementada\r\nprogram.option('--scan-only', 'executa apenas varredura e prioriza√ß√£o sem AST ou t√©cnicas');\r\n// Flags experimentais de config din√¢mica (exemplos comuns)\r\nprogram\r\n  .option('--log-estruturado', 'ativa logging estruturado JSON')\r\n  .option('--incremental', 'habilita an√°lise incremental')\r\n  .option('--no-incremental', 'desabilita an√°lise incremental')\r\n  .option('--metricas', 'habilita m√©tricas de an√°lise')\r\n  .option('--no-metricas', 'desabilita m√©tricas de an√°lise');\r\n\r\n// üåê Flags globais aplic√°veis em todos os comandos\r\ninterface OraculoGlobalFlags {\r\n  silence?: boolean;\r\n  verbose?: boolean;\r\n  export?: boolean;\r\n  dev?: boolean; // legado removido da CLI; mantido aqui apenas para compat de parse em tests antigos\r\n  debug?: boolean;\r\n  logEstruturado?: boolean;\r\n  incremental?: boolean;\r\n  meticas?: boolean;\r\n  scanOnly?: boolean;\r\n}\r\nasync function aplicarFlagsGlobais(opts: unknown) {\r\n  const flags = opts as OraculoGlobalFlags;\r\n  // Sanitiza√ß√£o e normaliza√ß√£o (pode lan√ßar)\r\n  try {\r\n    // lazy import para n√£o criar ciclo\r\n    const { sanitizarFlags } = await import('../zeladores/util/validacao.js');\r\n    sanitizarFlags(flags as Record<string, unknown>);\r\n  } catch (e) {\r\n    console.error(chalk.red(`‚ùå Flags inv√°lidas: ${(e as Error).message}`));\r\n    if (!process.env.VITEST) process.exit(1);\r\n  }\r\n  config.REPORT_SILENCE_LOGS = Boolean(flags.silence);\r\n  config.REPORT_EXPORT_ENABLED = Boolean(flags.export);\r\n  const debugAtivo = Boolean(flags.debug) || process.env.ORACULO_DEBUG === 'true';\r\n  config.DEV_MODE = debugAtivo;\r\n  config.SCAN_ONLY = Boolean(flags.scanOnly);\r\n  // Se silence est√° ativo, verbose √© sempre falso\r\n  config.VERBOSE = flags.silence ? false : Boolean(flags.verbose);\r\n  const overrides: Record<string, unknown> = {};\r\n  const optObj = opts as Record<string, unknown>;\r\n  if (typeof optObj.logEstruturado === 'boolean') overrides.LOG_ESTRUTURADO = optObj.logEstruturado;\r\n  if (typeof optObj.incremental === 'boolean')\r\n    overrides.ANALISE_INCREMENTAL_ENABLED = optObj.incremental;\r\n  if (typeof optObj.metricas === 'boolean') overrides.ANALISE_METRICAS_ENABLED = optObj.metricas;\r\n  if (Object.keys(overrides).length) aplicarConfigParcial(overrides);\r\n\r\n  // Unifica√ß√£o: filtros de include/exclude s√£o definidos apenas nos comandos\r\n  // (--include/--exclude). Flags globais antigas removidas.\r\n}\r\n\r\n// üîó Registro de todos os comandos\r\nregistrarComandos(program, (o) => {\r\n  return aplicarFlagsGlobais(o);\r\n});\r\nprogram.addCommand(comandoPerf());\r\n\r\n// üöÄ Execu√ß√£o do CLI\r\n// Carrega config de arquivo/env explicitamente no processo do CLI, mesmo sob VITEST (e2e spawn)\r\nvoid (async () => {\r\n  // Aplica defaults de produ√ß√£o (se presentes) antes de inicializar a config din√¢mica.\r\n  try {\r\n    if (process.env.NODE_ENV === 'production') {\r\n      try {\r\n        // Em dist/bin, o safe config est√° na raiz do pacote: subir dois n√≠veis\r\n        const safeCfgPath = join(__dirname, '..', '..', 'oraculo.config.safe.json');\r\n        const raw = readFileSync(safeCfgPath, 'utf-8');\r\n        const safeCfg = JSON.parse(raw);\r\n        const prod = safeCfg?.productionDefaults;\r\n        if (prod && typeof prod === 'object') {\r\n          for (const [k, v] of Object.entries(prod)) {\r\n            if (process.env[k] === undefined) process.env[k] = String(v);\r\n          }\r\n        }\r\n      } catch {\r\n        // ignore - arquivo safe pode n√£o existir em todos os ambientes\r\n      }\r\n    }\r\n    await inicializarConfigDinamica();\r\n  } catch {\r\n    // ignore: CLI continua com defaults\r\n  }\r\n  await program.parseAsync(process.argv);\r\n})();\r\n"]}