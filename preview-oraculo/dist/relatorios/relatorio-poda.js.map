{"version":3,"file":"relatorio-poda.js","sourceRoot":"","sources":["../../src/relatorios/relatorio-poda.ts"],"names":[],"mappings":"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","sourcesContent":["// SPDX-License-Identifier: MIT\r\nimport { salvarEstado } from '@zeladores/util/persistencia.js';\r\nimport type { Pendencia } from '@tipos/tipos.js';\r\n\r\nexport async function gerarRelatorioPodaMarkdown(\r\n  caminho: string,\r\n  podados: Pendencia[],\r\n  mantidos: Pendencia[],\r\n  opcoes?: { simulado?: boolean },\r\n): Promise<void> {\r\n  const data = new Date().toISOString();\r\n  const totalPodados = podados.length;\r\n  const totalMantidos = mantidos.length;\r\n  const simulado = opcoes?.simulado;\r\n\r\n  let md = `# ðŸŒ¿ RelatÃ³rio de Poda Oracular\\n\\n`;\r\n  md += `**Data:** ${data}  \\n`;\r\n  md += `**ExecuÃ§Ã£o:** ${simulado ? 'SimulaÃ§Ã£o' : 'Real'}  \\n`;\r\n  md += `**Arquivos podados:** ${totalPodados}  \\n`;\r\n  md += `**Arquivos mantidos:** ${totalMantidos}  \\n`;\r\n  md += `\\n---\\n`;\r\n\r\n  md += `## Arquivos Podados\\n`;\r\n  if (totalPodados === 0) {\r\n    md += 'Nenhum arquivo foi podado neste ciclo.\\n';\r\n  } else {\r\n    md += '| Arquivo | Motivo | Dias Inativo | Detectado em |\\n';\r\n    md += '|---------|--------|--------------|--------------|\\n';\r\n    for (const p of podados) {\r\n      const pendenciaObj = p as unknown as Record<string, unknown>;\r\n      const diasInativo =\r\n        typeof pendenciaObj.diasInativo === 'number' ? String(pendenciaObj.diasInativo) : '-';\r\n      md += `| ${p.arquivo} | ${p.motivo} | ${diasInativo} | ${p.detectedAt ? new Date(p.detectedAt).toISOString().slice(0, 10) : '-'} |\\n`;\r\n    }\r\n  }\r\n  md += '\\n---\\n';\r\n\r\n  md += `## Arquivos Mantidos\\n`;\r\n  if (totalMantidos === 0) {\r\n    md += 'Nenhum arquivo mantido neste ciclo.\\n';\r\n  } else {\r\n    md += '| Arquivo | Motivo |\\n';\r\n    md += '|---------|--------|\\n';\r\n    for (const p of mantidos) {\r\n      md += `| ${p.arquivo} | ${p.motivo} |\\n`;\r\n    }\r\n  }\r\n\r\n  await salvarEstado(caminho, md);\r\n}\r\n\r\nexport async function gerarRelatorioPodaJson(\r\n  caminho: string,\r\n  podados: Pendencia[],\r\n  mantidos: Pendencia[],\r\n): Promise<void> {\r\n  const json = {\r\n    podados: podados.map((p) => {\r\n      const pendenciaObj = p as unknown as Record<string, unknown>;\r\n      return {\r\n        arquivo: p.arquivo,\r\n        motivo: p.motivo,\r\n        diasInativo:\r\n          typeof pendenciaObj.diasInativo === 'number' ? pendenciaObj.diasInativo : undefined,\r\n      };\r\n    }),\r\n    mantidos: mantidos.map((p) => ({ arquivo: p.arquivo, motivo: p.motivo })),\r\n    totalPodados: podados.length,\r\n    totalMantidos: mantidos.length,\r\n    timestamp: Date.now(),\r\n  };\r\n  await salvarEstado(caminho, json);\r\n}\r\n"]}