// SPDX-License-Identifier: MIT
import { describe, it, expect, vi } from 'vitest';

const gerarCalls: string[] = [];
vi.mock('../../src/nucleo/constelacao/log.js', () => ({
  log: { info: vi.fn(), erro: vi.fn(), sucesso: vi.fn(), aviso: vi.fn() },
}));
vi.mock('../../src/guardian/baseline.js', () => ({
  carregarBaseline: vi.fn(async () => ({})),
  salvarBaseline: vi.fn(),
}));
vi.mock('../../src/guardian/hash.js', () => ({
  gerarSnapshotDoConteudo: (c: string) => {
    gerarCalls.push(c);
    return 'h' + c;
  },
}));
vi.mock('../../src/guardian/diff.js', () => ({
  diffSnapshots: () => ({}) as any,
  verificarErros: () => [],
}));
vi.mock('../../src/guardian/constantes.js', () => ({ BASELINE_PATH: 'baseline.json' }));

describe('sentinela filtro node_modules', () => {
  it('ignora entradas dentro de node_modules', async () => {
    const { scanSystemIntegrity } = await import('../../src/guardian/sentinela.js');
    const fileEntries = [
      { relPath: 'src/a.ts', content: 'a', fullPath: 'src/a.ts' },
      {
        relPath: 'node_modules/lib/index.js',
        content: 'lib',
        fullPath: 'node_modules/lib/index.js',
      },
    ];
    await scanSystemIntegrity(fileEntries, { justDiff: true });
    expect(gerarCalls).toContain('a');
    expect(gerarCalls).not.toContain('lib');
  });
});
