{"version":3,"file":"registry.js","sourceRoot":"","sources":["../../src/analistas/registry.ts"],"names":[],"mappings":"AAAA,+BAA+B;AAC/B,OAAO,EAAE,qBAAqB,EAAE,MAAM,8BAA8B,CAAC;AACrE,OAAO,EAAE,kBAAkB,EAAE,MAAM,2BAA2B,CAAC;AAC/D,OAAO,KAAK,uBAAuB,MAAM,4BAA4B,CAAC;AACtE,OAAO,KAAK,oBAAoB,MAAM,yBAAyB,CAAC;AAChE,OAAO,EAAE,aAAa,EAAE,MAAM,qBAAqB,CAAC;AACpD,OAAO,EAAE,oBAAoB,EAAE,MAAM,6BAA6B,CAAC;AAGnE,8EAA8E;AAC9E,MAAM,oBAAoB,GACvB,uBAAmD,CAAC,oBAAoB;IACxE,uBAAmD,CAAC,OAAO;IAC3D,uBAAmD,CAAC;AAEvD,MAAM,iBAAiB,GACpB,oBAAgD,CAAC,iBAAiB;IAClE,oBAAgD,CAAC,OAAO;IACxD,oBAAgD,CAAC;AAEpD,MAAM,CAAC,MAAM,iBAAiB,GAA2B;IACvD,oBAA0C;IAC1C,iBAAuC;IACvC,qBAAqB;IACrB,kBAAwC;IACxC,aAAmC;IACnC,oBAA0C;CAC3C,CAAC;AAEF,MAAM,UAAU,eAAe;IAC7B,OAAO,iBAAiB,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;QACnC,IAAI,EAAG,CAAc,CAAC,IAAI,IAAI,cAAc;QAC5C,SAAS,EAAG,CAAc,CAAC,SAAS,IAAI,KAAK;QAC7C,SAAS,EAAG,CAAc,CAAC,SAAS,IAAI,EAAE;KAC3C,CAAC,CAAC,CAAC;AACN,CAAC","sourcesContent":["// SPDX-License-Identifier: MIT\r\nimport { analistaFuncoesLongas } from './analista-funcoes-longas.js';\r\nimport { analistaPadroesUso } from './analista-padroes-uso.js';\r\nimport * as detectorDependenciasMod from './detector-dependencias.js';\r\nimport * as detectorEstruturaMod from './detector-estrutura.js';\r\nimport { ritualComando } from './ritual-comando.js';\r\nimport { analistaTodoComments } from './analista-todo-comments.js';\r\nimport type { Analista, Tecnica } from '../tipos/tipos.js';\r\n\r\n// Registro central de analistas. Futuro: lazy loading, filtros por categoria.\r\nconst detectorDependencias =\r\n  (detectorDependenciasMod as Record<string, unknown>).detectorDependencias ??\r\n  (detectorDependenciasMod as Record<string, unknown>).default ??\r\n  (detectorDependenciasMod as Record<string, unknown>);\r\n\r\nconst detectorEstrutura =\r\n  (detectorEstruturaMod as Record<string, unknown>).detectorEstrutura ??\r\n  (detectorEstruturaMod as Record<string, unknown>).default ??\r\n  (detectorEstruturaMod as Record<string, unknown>);\r\n\r\nexport const registroAnalistas: (Analista | Tecnica)[] = [\r\n  detectorDependencias as unknown as Tecnica,\r\n  detectorEstrutura as unknown as Tecnica,\r\n  analistaFuncoesLongas,\r\n  analistaPadroesUso as unknown as Tecnica,\r\n  ritualComando as unknown as Tecnica,\r\n  analistaTodoComments as unknown as Tecnica,\r\n];\r\n\r\nexport function listarAnalistas() {\r\n  return registroAnalistas.map((a) => ({\r\n    nome: (a as Analista).nome || 'desconhecido',\r\n    categoria: (a as Analista).categoria || 'n/d',\r\n    descricao: (a as Analista).descricao || '',\r\n  }));\r\n}\r\n"]}