{"version":3,"file":"arquetipos-personalizados.js","sourceRoot":"","sources":["../../src/analistas/arquetipos-personalizados.ts"],"names":[],"mappings":"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","sourcesContent":["// SPDX-License-Identifier: MIT\r\n/**\r\n * Sistema de Arqu√©tipos Personalizados do Or√°culo\r\n *\r\n * Permite que usu√°rios criem arqu√©tipos personalizados para seus projetos,\r\n * mantendo compatibilidade com arqu√©tipos oficiais e oferecendo sugest√µes\r\n * de melhores pr√°ticas baseadas na personaliza√ß√£o do usu√°rio.\r\n */\r\n\r\nimport { promises as fs } from 'node:fs';\r\nimport path from 'node:path';\r\nimport type { ArquetipoPersonalizado, ArquetipoEstruturaDef } from '../tipos/tipos.js';\r\nimport { ARQUETIPOS } from './arquetipos-defs.js';\r\nimport { log } from '../nucleo/constelacao/log.js';\r\n\r\nconst ARQUETIPO_PERSONALIZADO_FILENAME = 'oraculo.repo.arquetipo.json';\r\n\r\n/**\r\n * Carrega o arqu√©tipo personalizado do projeto atual\r\n */\r\nexport async function carregarArquetipoPersonalizado(\r\n  baseDir: string = process.cwd(),\r\n): Promise<ArquetipoPersonalizado | null> {\r\n  const arquivoArquetipo = path.join(baseDir, ARQUETIPO_PERSONALIZADO_FILENAME);\r\n\r\n  try {\r\n    const conteudo = await fs.readFile(arquivoArquetipo, 'utf-8');\r\n    const arquetipo: ArquetipoPersonalizado = JSON.parse(conteudo);\r\n\r\n    // Valida√ß√£o b√°sica\r\n    if (!arquetipo.nome || !arquetipo.arquetipoOficial) {\r\n      log.aviso(\r\n        `‚ö†Ô∏è Arqu√©tipo personalizado inv√°lido em ${arquivoArquetipo}: nome ou arquetipoOficial ausente`,\r\n      );\r\n      return null;\r\n    }\r\n\r\n    return arquetipo;\r\n  } catch {\r\n    // Arquivo n√£o existe ou √© inv√°lido - isso √© normal\r\n    return null;\r\n  }\r\n}\r\n\r\n/**\r\n * Salva um arqu√©tipo personalizado\r\n */\r\nexport async function salvarArquetipoPersonalizado(\r\n  arquetipo: Omit<ArquetipoPersonalizado, 'metadata'>,\r\n  baseDir: string = process.cwd(),\r\n): Promise<void> {\r\n  const arquetipoCompleto: ArquetipoPersonalizado = {\r\n    ...arquetipo,\r\n    metadata: {\r\n      criadoEm: new Date().toISOString(),\r\n      versao: '1.0.0',\r\n      notasUsuario: undefined,\r\n    },\r\n  };\r\n\r\n  const arquivoArquetipo = path.join(baseDir, ARQUETIPO_PERSONALIZADO_FILENAME);\r\n  await fs.writeFile(arquivoArquetipo, JSON.stringify(arquetipoCompleto, null, 2), 'utf-8');\r\n\r\n  log.sucesso(`‚úÖ Arqu√©tipo personalizado salvo em ${arquivoArquetipo}`);\r\n}\r\n\r\n/**\r\n * Verifica se existe um arqu√©tipo personalizado\r\n */\r\nexport async function existeArquetipoPersonalizado(\r\n  baseDir: string = process.cwd(),\r\n): Promise<boolean> {\r\n  const arquivoArquetipo = path.join(baseDir, ARQUETIPO_PERSONALIZADO_FILENAME);\r\n\r\n  try {\r\n    await fs.access(arquivoArquetipo);\r\n    return true;\r\n  } catch {\r\n    return false;\r\n  }\r\n}\r\n\r\n/**\r\n * Obt√©m o arqu√©tipo oficial base para um arqu√©tipo personalizado\r\n */\r\nexport function obterArquetipoOficial(\r\n  arquetipoPersonalizado: ArquetipoPersonalizado,\r\n): ArquetipoEstruturaDef | null {\r\n  return ARQUETIPOS.find((arq) => arq.nome === arquetipoPersonalizado.arquetipoOficial) || null;\r\n}\r\n\r\n/**\r\n * Gera sugest√µes de cria√ß√£o de arqu√©tipo personalizado quando projeto √© desconhecido\r\n */\r\nexport function gerarSugestaoArquetipoPersonalizado(projetoDesconhecido: {\r\n  nome: string;\r\n  estruturaDetectada: string[];\r\n  arquivosRaiz: string[];\r\n}): string {\r\n  const sugestao = `\r\nüåü Projeto personalizado detectado: \"${projetoDesconhecido.nome}\"\r\n\r\nO Or√°culo identificou uma estrutura de projeto que n√£o corresponde a arqu√©tipos oficiais,\r\nmas voc√™ pode criar um arqu√©tipo personalizado para receber sugest√µes otimizadas!\r\n\r\nüìÅ Estrutura detectada:\r\n${projetoDesconhecido.estruturaDetectada.map((dir) => `  ‚Ä¢ ${dir}`).join('\\n')}\r\n\r\nüìÑ Arquivos na raiz:\r\n${projetoDesconhecido.arquivosRaiz\r\n  .slice(0, 5)\r\n  .map((file) => `  ‚Ä¢ ${file}`)\r\n  .join('\\n')}\r\n${projetoDesconhecido.arquivosRaiz.length > 5 ? `  ‚Ä¢ ... e mais ${projetoDesconhecido.arquivosRaiz.length - 5} arquivos` : ''}\r\n\r\nüí° Para criar seu arqu√©tipo personalizado, execute:\r\n   oraculo diagnosticar --criar-arquetipo\r\n\r\nIsso criar√° um arquivo 'oraculo.repo.arquetipo.json' com base na estrutura atual,\r\nque o Or√°culo usar√° para oferecer sugest√µes personalizadas mantendo as melhores pr√°ticas.\r\n`;\r\n\r\n  return sugestao;\r\n}\r\n\r\n/**\r\n * Cria um template de arqu√©tipo personalizado baseado na estrutura atual do projeto\r\n */\r\nexport function criarTemplateArquetipoPersonalizado(\r\n  nomeProjeto: string,\r\n  estruturaDetectada: string[],\r\n  arquivosRaiz: string[],\r\n  arquetipoSugerido: string = 'generico',\r\n): Omit<ArquetipoPersonalizado, 'metadata'> {\r\n  // Tenta inferir o tipo de projeto baseado na estrutura\r\n  let arquetipoOficial = arquetipoSugerido;\r\n\r\n  if (estruturaDetectada.some((dir) => dir.includes('commands') || dir.includes('events'))) {\r\n    arquetipoOficial = 'bot';\r\n  } else if (\r\n    estruturaDetectada.some((dir) => dir.includes('controllers') || dir.includes('routes'))\r\n  ) {\r\n    arquetipoOficial = 'api-rest-express';\r\n  } else if (estruturaDetectada.some((dir) => dir.includes('pages') && dir.includes('api'))) {\r\n    arquetipoOficial = 'fullstack';\r\n  } else if (estruturaDetectada.some((dir) => dir.includes('cli'))) {\r\n    arquetipoOficial = 'cli-modular';\r\n  }\r\n\r\n  // Identifica diret√≥rios principais (n√£o muito profundos)\r\n  const diretoriosPrincipais = estruturaDetectada\r\n    .filter((dir) => !dir.includes('/') || dir.split('/').length <= 2)\r\n    .filter((dir) => !dir.startsWith('node_modules') && !dir.startsWith('.git'));\r\n\r\n  // Identifica arquivos-chave na raiz\r\n  const arquivosChave = arquivosRaiz\r\n    .filter(\r\n      (file) =>\r\n        ['package.json', 'tsconfig.json', 'README.md', '.env.example'].includes(file) ||\r\n        file.endsWith('.ts') ||\r\n        file.endsWith('.js'),\r\n    )\r\n    .slice(0, 5);\r\n\r\n  return {\r\n    nome: nomeProjeto,\r\n    descricao: `Projeto personalizado: ${nomeProjeto}`,\r\n    arquetipoOficial,\r\n    estruturaPersonalizada: {\r\n      diretorios: diretoriosPrincipais,\r\n      arquivosChave,\r\n      padroesNomenclatura: {\r\n        // Padr√µes comuns baseados na estrutura detectada\r\n        ...(estruturaDetectada.some((d) => d.includes('components')) && {\r\n          components: '*-component.*',\r\n        }),\r\n        ...(estruturaDetectada.some((d) => d.includes('utils')) && { utils: '*-util.*' }),\r\n        ...(estruturaDetectada.some((d) => d.includes('test')) && { tests: '*.test.*' }),\r\n      },\r\n    },\r\n    melhoresPraticas: {\r\n      recomendado: ['src/', 'tests/', 'docs/', 'README.md', '.env.example'],\r\n      evitar: ['temp/', 'cache/', '*.log'],\r\n      notas: [\r\n        'Mantenha c√≥digo fonte organizado em src/',\r\n        'Separe testes em pasta dedicada',\r\n        'Documente APIs e funcionalidades importantes',\r\n      ],\r\n    },\r\n  };\r\n}\r\n\r\n/**\r\n * Valida um arqu√©tipo personalizado\r\n */\r\nexport function validarArquetipoPersonalizado(arquetipo: ArquetipoPersonalizado): {\r\n  valido: boolean;\r\n  erros: string[];\r\n} {\r\n  const erros: string[] = [];\r\n\r\n  if (!arquetipo.nome || typeof arquetipo.nome !== 'string') {\r\n    erros.push('Nome do projeto √© obrigat√≥rio');\r\n  }\r\n\r\n  if (!arquetipo.arquetipoOficial || typeof arquetipo.arquetipoOficial !== 'string') {\r\n    erros.push('Arqu√©tipo oficial base √© obrigat√≥rio');\r\n  } else {\r\n    // Verifica se o arqu√©tipo oficial existe\r\n    const arquetipoOficial = ARQUETIPOS.find((arq) => arq.nome === arquetipo.arquetipoOficial);\r\n    if (!arquetipoOficial) {\r\n      erros.push(\r\n        `Arqu√©tipo oficial '${arquetipo.arquetipoOficial}' n√£o encontrado. Use: ${ARQUETIPOS.map((a) => a.nome).join(', ')}`,\r\n      );\r\n    }\r\n  }\r\n\r\n  if (!arquetipo.estruturaPersonalizada) {\r\n    erros.push('Estrutura personalizada √© obrigat√≥ria');\r\n  } else {\r\n    if (!Array.isArray(arquetipo.estruturaPersonalizada.diretorios)) {\r\n      erros.push('Diret√≥rios devem ser um array');\r\n    }\r\n    if (!Array.isArray(arquetipo.estruturaPersonalizada.arquivosChave)) {\r\n      erros.push('Arquivos-chave devem ser um array');\r\n    }\r\n  }\r\n\r\n  return {\r\n    valido: erros.length === 0,\r\n    erros,\r\n  };\r\n}\r\n\r\n/**\r\n * Lista todos os arqu√©tipos oficiais dispon√≠veis\r\n */\r\nexport function listarArquetiposOficiais(): ArquetipoEstruturaDef[] {\r\n  return ARQUETIPOS;\r\n}\r\n\r\n/**\r\n * Integra arqu√©tipo personalizado com oficial para sugest√µes\r\n */\r\nexport function integrarArquetipos(\r\n  personalizado: ArquetipoPersonalizado,\r\n  oficial: ArquetipoEstruturaDef,\r\n): ArquetipoEstruturaDef {\r\n  return {\r\n    ...oficial,\r\n    nome: personalizado.nome,\r\n    descricao: personalizado.descricao || oficial.descricao,\r\n    requiredDirs: personalizado.estruturaPersonalizada.diretorios,\r\n    optionalDirs: oficial.optionalDirs,\r\n    rootFilesAllowed: personalizado.estruturaPersonalizada.arquivosChave,\r\n    // Mant√©m outras propriedades do oficial como base\r\n    forbiddenDirs: oficial.forbiddenDirs,\r\n    dependencyHints: oficial.dependencyHints,\r\n    filePresencePatterns: oficial.filePresencePatterns,\r\n    pesoBase: oficial.pesoBase,\r\n  };\r\n}\r\n"]}