{"version":3,"file":"detector-estrutura.js","sourceRoot":"","sources":["../../src/analistas/detector-estrutura.ts"],"names":[],"mappings":"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","sourcesContent":["// SPDX-License-Identifier: MIT\r\nimport { grafoDependencias } from '@analistas/detector-dependencias.js';\r\nimport micromatch from 'micromatch';\r\nimport { config } from '@nucleo/constelacao/cosmos.js';\r\nimport { isInsideSrc } from '@nucleo/constelacao/paths.js';\r\nimport type {\r\n  TecnicaAplicarResultado,\r\n  ContextoExecucao,\r\n  Ocorrencia,\r\n  SinaisProjeto,\r\n} from '@tipos/tipos.js';\r\n\r\nexport const sinaisDetectados: SinaisProjeto = {};\r\n\r\n/**\r\n * Analisa a estrutura do projeto e detecta padrões como monorepo, fullstack, mistura de src/packages, etc.\r\n * Retorna ocorrências para cada sinal relevante encontrado.\r\n */\r\nexport const detectorEstrutura = {\r\n  nome: 'detector-estrutura',\r\n  global: true,\r\n  test(_relPath: string): boolean {\r\n    return true;\r\n  },\r\n\r\n  aplicar(\r\n    _src: string,\r\n    _relPath: string,\r\n    _ast: unknown,\r\n    _fullPath?: string,\r\n    contexto?: ContextoExecucao,\r\n  ): TecnicaAplicarResultado {\r\n    if (!contexto) return [];\r\n\r\n    const caminhos = contexto.arquivos.map((f) => f.relPath);\r\n    // Normaliza separadores para evitar falsos negativos em Windows (\\\\ vs /)\r\n    const caminhosNorm = caminhos.map((p) => (p ? p.replace(/\\\\/g, '/') : ''));\r\n    // Conjuntos para buscas O(1) e deduplicação implícita\r\n    const setCaminhos = new Set(caminhos);\r\n\r\n    const sinais: SinaisProjeto & {\r\n      ehFullstack?: boolean;\r\n      ehMonorepo?: boolean;\r\n    } = {\r\n      // Next.js: considerar tanto pages/ quanto app/\r\n      temPages: caminhosNorm.some((p) => p.includes('pages/') || p.includes('app/')),\r\n      temApi: caminhosNorm.some((p) => p.includes('api/')),\r\n      temControllers: caminhosNorm.some((p) => p.includes('controllers/')),\r\n      temComponents: caminhosNorm.some((p) => p.includes('components/')),\r\n      temCli: caminhosNorm.some((p) => /(^|\\/)cli\\.(ts|js)$/.test(p)),\r\n      temSrc: caminhosNorm.some((p) => isInsideSrc(p)),\r\n      temPrisma: caminhosNorm.some((p) => p.includes('prisma/') || p.includes('schema.prisma')),\r\n      temPackages: caminhosNorm.some((p) => p.includes('packages/') || p.includes('turbo.json')),\r\n      temExpress: grafoDependencias.has('express'),\r\n    };\r\n\r\n    const ehFullstack = !!(sinais.temPages && sinais.temApi && sinais.temPrisma);\r\n    const ehMonorepo = !!sinais.temPackages;\r\n\r\n    Object.assign(sinaisDetectados, sinais);\r\n\r\n    const ocorrencias: Ocorrencia[] = [];\r\n\r\n    // Estrutura monorepo\r\n    if (ehMonorepo) {\r\n      ocorrencias.push({\r\n        tipo: 'estrutura-monorepo',\r\n        nivel: 'info',\r\n        mensagem: 'Estrutura de monorepo detectada.',\r\n        origem: 'detector-estrutura',\r\n        relPath: '[raiz do projeto]',\r\n        linha: 0,\r\n      });\r\n      // Monorepo sem packages\r\n      if (!caminhos.some((p) => p.includes('packages/'))) {\r\n        ocorrencias.push({\r\n          tipo: 'estrutura-monorepo-incompleto',\r\n          nivel: 'aviso',\r\n          mensagem: 'Monorepo sem pasta packages/.',\r\n          origem: 'detector-estrutura',\r\n          relPath: '[raiz do projeto]',\r\n          linha: 0,\r\n        });\r\n      }\r\n    }\r\n\r\n    // Estrutura fullstack\r\n    if (ehFullstack) {\r\n      ocorrencias.push({\r\n        tipo: 'estrutura-fullstack',\r\n        nivel: 'info',\r\n        mensagem: 'Estrutura fullstack detectada.',\r\n        origem: 'detector-estrutura',\r\n        relPath: '[raiz do projeto]',\r\n        linha: 0,\r\n      });\r\n    } else if (sinais.temPages && !sinais.temApi) {\r\n      ocorrencias.push({\r\n        tipo: 'estrutura-incompleta',\r\n        nivel: 'aviso',\r\n        mensagem: 'Projeto possui pages/ mas não possui api/.',\r\n        origem: 'detector-estrutura',\r\n        relPath: '[raiz do projeto]',\r\n        linha: 0,\r\n      });\r\n    }\r\n\r\n    // Mistura de padrões: src/ e packages/ juntos\r\n    if (sinais.temSrc && sinais.temPackages) {\r\n      ocorrencias.push({\r\n        tipo: 'estrutura-mista',\r\n        nivel: 'aviso',\r\n        mensagem:\r\n          'Projeto possui src/ e packages/ (monorepo) ao mesmo tempo. Avalie a organização.',\r\n        origem: 'detector-estrutura',\r\n        relPath: '[raiz do projeto]',\r\n        linha: 0,\r\n      });\r\n    }\r\n\r\n    // Muitos arquivos na raiz (considera apenas nível imediato sem subpastas)\r\n    const arquivosRaiz = caminhosNorm.filter((p) => !p.includes('/') && p.trim() !== '');\r\n    const LIMITE_RAIZ = Number(config.ESTRUTURA_ARQUIVOS_RAIZ_MAX || 10);\r\n    if (arquivosRaiz.length > LIMITE_RAIZ) {\r\n      ocorrencias.push({\r\n        tipo: 'estrutura-suspeita',\r\n        nivel: 'aviso',\r\n        mensagem: 'Muitos arquivos na raiz do projeto. Considere organizar em pastas.',\r\n        origem: 'detector-estrutura',\r\n        relPath: '[raiz do projeto]',\r\n        linha: 0,\r\n      });\r\n    }\r\n\r\n    // Sinais de backend\r\n    if (sinais.temControllers || sinais.temPrisma || sinais.temApi) {\r\n      ocorrencias.push({\r\n        tipo: 'estrutura-backend',\r\n        nivel: 'info',\r\n        mensagem: 'Sinais de backend detectados (controllers/, prisma/, api/).',\r\n        origem: 'detector-estrutura',\r\n        relPath: '[raiz do projeto]',\r\n        linha: 0,\r\n      });\r\n    }\r\n\r\n    // Sinais de frontend\r\n    if (sinais.temComponents || sinais.temPages) {\r\n      ocorrencias.push({\r\n        tipo: 'estrutura-frontend',\r\n        nivel: 'info',\r\n        mensagem: 'Sinais de frontend detectados (components/, pages/).',\r\n        origem: 'detector-estrutura',\r\n        relPath: '[raiz do projeto]',\r\n        linha: 0,\r\n      });\r\n    }\r\n\r\n    // Arquivos de configuração conhecidos — agrupa em uma única ocorrência para reduzir ruído\r\n    const arquivosConfig = ['package.json', 'tsconfig.json', 'turbo.json', 'pnpm-workspace.yaml'];\r\n    const detectados = arquivosConfig.filter((cfg) => setCaminhos.has(cfg));\r\n    if (detectados.length > 0) {\r\n      ocorrencias.push({\r\n        tipo: 'estrutura-config',\r\n        nivel: 'info',\r\n        mensagem: `Arquivos de configuração detectados: ${detectados.join(', ')}`,\r\n        origem: 'detector-estrutura',\r\n        relPath: '[raiz do projeto]',\r\n        linha: 1,\r\n      });\r\n    }\r\n\r\n    // Múltiplos entrypoints\r\n    // Lista de entrypoints potencialmente grande em repositórios com dependências; filtra ignorados\r\n    const entrypointsAll = caminhosNorm.filter((p) =>\r\n      /(^|[\\\\/])(cli|index|main)\\.(ts|js)$/.test(p),\r\n    );\r\n    const ignoredDyn =\r\n      (config.INCLUDE_EXCLUDE_RULES && config.INCLUDE_EXCLUDE_RULES.globalExcludeGlob) ||\r\n      (Array.isArray(config.ZELADOR_IGNORE_PATTERNS)\r\n        ? (config.ZELADOR_IGNORE_PATTERNS as string[])\r\n        : []);\r\n    const entrypoints = entrypointsAll\r\n      .filter((p) => !micromatch.isMatch(p, (ignoredDyn as unknown as string[]) || []))\r\n      .sort();\r\n    if (entrypoints.length > 1) {\r\n      const MAX_LIST = 20;\r\n      if (entrypoints.length > MAX_LIST) {\r\n        // Muitos entrypoints: agrega por diretório para reduzir ruído sem perder o sinal\r\n        const dirCounts = new Map<string, number>();\r\n        for (const p of entrypoints) {\r\n          const dir = p.includes('/') ? p.slice(0, p.lastIndexOf('/')) : '.';\r\n          dirCounts.set(dir, (dirCounts.get(dir) || 0) + 1);\r\n        }\r\n        const ordenado = [...dirCounts.entries()].sort(\r\n          (a, b) => b[1] - a[1] || (a[0] < b[0] ? -1 : a[0] > b[0] ? 1 : 0),\r\n        );\r\n        const MAX_DIRS = 10;\r\n        const top = ordenado.slice(0, MAX_DIRS);\r\n        const ocultosDir = ordenado.length - top.length;\r\n        const mostradosEntrypoints = top.reduce((acc, [, n]) => acc + n, 0);\r\n        const ocultosEntrypoints = entrypoints.length - mostradosEntrypoints;\r\n        const previewGrupos = top.map(([d, n]) => `${d} (${n})`).join(', ');\r\n        const sufixoOcultos = [\r\n          ocultosDir > 0 ? `+${ocultosDir} dirs` : null,\r\n          ocultosEntrypoints > 0 ? `+${ocultosEntrypoints} entrypoints` : null,\r\n        ]\r\n          .filter(Boolean)\r\n          .join(', ');\r\n\r\n        ocorrencias.push({\r\n          tipo: 'estrutura-entrypoints',\r\n          nivel: 'aviso',\r\n          mensagem:\r\n            sufixoOcultos && sufixoOcultos.length > 0\r\n              ? `Projeto possui múltiplos entrypoints (agrupados por diretório): ${previewGrupos} … (${sufixoOcultos} ocultos)`\r\n              : `Projeto possui múltiplos entrypoints (agrupados por diretório): ${previewGrupos}`,\r\n          origem: 'detector-estrutura',\r\n          relPath: '[raiz do projeto]',\r\n          linha: 0,\r\n        });\r\n      } else {\r\n        // Quantidade moderada: lista direta mantendo ordenação estável\r\n        const preview = entrypoints.slice(0, MAX_LIST);\r\n        const resto = entrypoints.length - preview.length;\r\n        ocorrencias.push({\r\n          tipo: 'estrutura-entrypoints',\r\n          nivel: 'aviso',\r\n          mensagem:\r\n            resto > 0\r\n              ? `Projeto possui múltiplos entrypoints: ${preview.join(', ')} … (+${resto} ocultos)`\r\n              : `Projeto possui múltiplos entrypoints: ${preview.join(', ')}`,\r\n          origem: 'detector-estrutura',\r\n          relPath: '[raiz do projeto]',\r\n          linha: 0,\r\n        });\r\n      }\r\n    }\r\n\r\n    // Ausência de src/ em projetos grandes (verifica realmente se diretório src existe fisicamente)\r\n    if (!sinais.temSrc && caminhosNorm.length > 30) {\r\n      ocorrencias.push({\r\n        tipo: 'estrutura-sem-src',\r\n        nivel: 'aviso',\r\n        mensagem: 'Projeto grande sem pasta src/. Considere organizar o código fonte.',\r\n        origem: 'detector-estrutura',\r\n        relPath: '[raiz do projeto]',\r\n        linha: 0,\r\n      });\r\n    }\r\n\r\n    return Array.isArray(ocorrencias) ? ocorrencias : [];\r\n  },\r\n};\r\n"]}