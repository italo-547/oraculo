{"version":3,"file":"relatorio-reestruturar.js","sourceRoot":"","sources":["../../src/relatorios/relatorio-reestruturar.ts"],"names":[],"mappings":"AAAA,+BAA+B;AAC/B,OAAO,EAAE,YAAY,EAAE,MAAM,mCAAmC,CAAC;AAOjE,MAAM,CAAC,KAAK,UAAU,kCAAkC,CACtD,OAAe,EACf,UAAiC,EACjC,MAAqF;IAErF,MAAM,IAAI,GAAG,IAAI,IAAI,EAAE,CAAC,WAAW,EAAE,CAAC;IACtC,MAAM,KAAK,GAAG,UAAU,CAAC,MAAM,CAAC;IAChC,MAAM,QAAQ,GAAG,MAAM,EAAE,QAAQ,CAAC;IAClC,MAAM,MAAM,GAAG,MAAM,EAAE,MAAM,IAAI,cAAc,CAAC;IAChD,MAAM,MAAM,GAAG,MAAM,EAAE,MAAM,IAAI,SAAS,CAAC;IAC3C,MAAM,SAAS,GAAG,MAAM,EAAE,SAAS,IAAI,CAAC,CAAC;IAEzC,MAAM,MAAM,GAAa,EAAE,CAAC;IAC5B,MAAM,CAAC,IAAI,CAAC,2CAA2C,CAAC,CAAC;IACzD,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IAChB,MAAM,CAAC,IAAI,CAAC,aAAa,IAAI,IAAI,CAAC,CAAC;IACnC,MAAM,CAAC,IAAI,CAAC,iBAAiB,QAAQ,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,MAAM,IAAI,CAAC,CAAC;IAClE,MAAM,CAAC,IAAI,CAAC,wBAAwB,MAAM,IAAI,CAAC,CAAC;IAChD,MAAM,CAAC,IAAI,CAAC,eAAe,MAAM,IAAI,CAAC,CAAC;IACvC,MAAM,CAAC,IAAI,CAAC,4BAA4B,KAAK,IAAI,CAAC,CAAC;IACnD,MAAM,CAAC,IAAI,CAAC,6BAA6B,SAAS,IAAI,CAAC,CAAC;IACxD,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IAChB,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IACnB,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IAEhB,MAAM,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;IAC7B,IAAI,CAAC,KAAK,EAAE,CAAC;QACX,MAAM,CAAC,IAAI,CAAC,wCAAwC,CAAC,CAAC;IACxD,CAAC;SAAM,CAAC;QACN,MAAM,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;QAC7B,MAAM,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;QAC7B,KAAK,MAAM,CAAC,IAAI,UAAU,EAAE,CAAC;YAC3B,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC;QACzC,CAAC;IACH,CAAC;IAED,MAAM,YAAY,CAAC,OAAO,EAAE,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;AACjD,CAAC;AAED,MAAM,CAAC,KAAK,UAAU,8BAA8B,CAClD,OAAe,EACf,UAAiC,EACjC,MAAqF;IAErF,MAAM,IAAI,GAAG;QACX,QAAQ,EAAE,OAAO,CAAC,MAAM,EAAE,QAAQ,CAAC;QACnC,MAAM,EAAE,MAAM,EAAE,MAAM,IAAI,cAAc;QACxC,MAAM,EAAE,MAAM,EAAE,MAAM,IAAI,SAAS;QACnC,SAAS,EAAE,MAAM,EAAE,SAAS,IAAI,CAAC;QACjC,eAAe,EAAE,UAAU,CAAC,MAAM;QAClC,UAAU;QACV,SAAS,EAAE,IAAI,CAAC,GAAG,EAAE;KACtB,CAAC;IACF,MAAM,YAAY,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;AACpC,CAAC","sourcesContent":["// SPDX-License-Identifier: MIT\r\nimport { salvarEstado } from '../zeladores/util/persistencia.js';\r\n\r\nexport interface MovimentoEstrutural {\r\n  de: string;\r\n  para: string;\r\n}\r\n\r\nexport async function gerarRelatorioReestruturarMarkdown(\r\n  caminho: string,\r\n  movimentos: MovimentoEstrutural[],\r\n  opcoes?: { simulado?: boolean; origem?: string; preset?: string; conflitos?: number },\r\n): Promise<void> {\r\n  const data = new Date().toISOString();\r\n  const total = movimentos.length;\r\n  const simulado = opcoes?.simulado;\r\n  const origem = opcoes?.origem ?? 'desconhecido';\r\n  const preset = opcoes?.preset ?? 'oraculo';\r\n  const conflitos = opcoes?.conflitos ?? 0;\r\n\r\n  const linhas: string[] = [];\r\n  linhas.push('# üß© Relat√≥rio de Reestrutura√ß√£o Oracular');\r\n  linhas.push('');\r\n  linhas.push(`**Data:** ${data}  `);\r\n  linhas.push(`**Execu√ß√£o:** ${simulado ? 'Simula√ß√£o' : 'Real'}  `);\r\n  linhas.push(`**Origem do plano:** ${origem}  `);\r\n  linhas.push(`**Preset:** ${preset}  `);\r\n  linhas.push(`**Total de movimentos:** ${total}  `);\r\n  linhas.push(`**Conflitos detectados:** ${conflitos}  `);\r\n  linhas.push('');\r\n  linhas.push('---');\r\n  linhas.push('');\r\n\r\n  linhas.push('## Movimentos');\r\n  if (!total) {\r\n    linhas.push('Nenhum movimento sugerido neste ciclo.');\r\n  } else {\r\n    linhas.push('| De | Para |');\r\n    linhas.push('|----|------|');\r\n    for (const m of movimentos) {\r\n      linhas.push(`| ${m.de} | ${m.para} |`);\r\n    }\r\n  }\r\n\r\n  await salvarEstado(caminho, linhas.join('\\n'));\r\n}\r\n\r\nexport async function gerarRelatorioReestruturarJson(\r\n  caminho: string,\r\n  movimentos: MovimentoEstrutural[],\r\n  opcoes?: { simulado?: boolean; origem?: string; preset?: string; conflitos?: number },\r\n): Promise<void> {\r\n  const json = {\r\n    simulado: Boolean(opcoes?.simulado),\r\n    origem: opcoes?.origem ?? 'desconhecido',\r\n    preset: opcoes?.preset ?? 'oraculo',\r\n    conflitos: opcoes?.conflitos ?? 0,\r\n    totalMovimentos: movimentos.length,\r\n    movimentos,\r\n    timestamp: Date.now(),\r\n  };\r\n  await salvarEstado(caminho, json);\r\n}\r\n"]}