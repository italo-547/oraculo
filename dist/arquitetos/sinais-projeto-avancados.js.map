{"version":3,"file":"sinais-projeto-avancados.js","sourceRoot":"","sources":["../../src/arquitetos/sinais-projeto-avancados.ts"],"names":[],"mappings":"AA6BA,yEAAyE;AACzE,MAAM,UAAU,cAAc,CAC5B,GAA0B,EAC1B,SAAmB,EAAE,2CAA2C;AAChE,gBAAyC;IAEzC,wDAAwD;IACxD,OAAO;QACL,IAAI,EAAE,GAAG,CAAC,IAAI;QACd,SAAS,EAAE,GAAG,CAAC,SAAS,IAAI,EAAE;QAC9B,KAAK,EAAE,CAAC;QACR,UAAU,EAAE,CAAC;QACb,eAAe,EAAE,EAAE;QACnB,eAAe,EAAE,EAAE;QACnB,eAAe,EAAE,EAAE;QACnB,iBAAiB,EAAE,EAAE;QACrB,kBAAkB,EAAE,EAAE;QACtB,gBAAgB,EAAE,EAAE;QACpB,SAAS,EAAE,EAAE;KACd,CAAC;AACJ,CAAC;AAED,MAAM,UAAU,sBAAsB,CACpC,WAA+B,EAC/B,WAAqC,EACrC,GAAa,EACb,QAAiB,EACjB,SAAoB;IAEpB,qDAAqD;IACrD,MAAM,SAAS,GAAG,CAAC,IAAa,EAAoC,EAAE;QACpE,OAAO,CACL,OAAO,IAAI,KAAK,QAAQ;YACxB,IAAI,KAAK,IAAI;YACb,IAAI,IAAI,IAAI;YACZ,OAAQ,IAAoC,CAAC,EAAE,EAAE,IAAI,KAAK,QAAQ,CACnE,CAAC;IACJ,CAAC,CAAC;IACF,MAAM,MAAM,GAA2B;QACrC,OAAO,EAAE,CAAC;QACV,OAAO,EAAE,EAAE;QACX,SAAS,EAAE,CAAC;QACZ,KAAK,EAAE,EAAE;QACT,OAAO,EAAE,CAAC;QACV,oBAAoB,EAAE,EAAE;QACxB,YAAY,EAAE,EAAE;QAChB,OAAO,EAAE,EAAE;QACX,YAAY,EAAE,EAAE;QAChB,cAAc,EAAE,EAAE;QAClB,cAAc,EAAE,EAAE;KACnB,CAAC;IAEF,KAAK,MAAM,EAAE,IAAI,WAAW,EAAE,CAAC;QAC7B,IAAI,IAAI,GAAgB,EAAE,CAAC;QAC3B,IACE,EAAE,CAAC,GAAG;YACN,EAAE,CAAC,GAAG,CAAC,IAAI;YACV,EAAE,CAAC,GAAG,CAAC,IAAgB,CAAC,IAAI,KAAK,SAAS;YAC3C,KAAK,CAAC,OAAO,CAAE,EAAE,CAAC,GAAG,CAAC,IAAgB,CAAC,IAAI,CAAC,EAC5C,CAAC;YACD,IAAI,GAAI,EAAE,CAAC,GAAG,CAAC,IAAgB,CAAC,IAAI,CAAC;QACvC,CAAC;QACD,UAAU;QACV,MAAM,CAAC,OAAO,IAAI,IAAI,CAAC,MAAM,CAC3B,CAAC,CAAC,EAAmD,EAAE,CAAC,CAAC,CAAC,IAAI,KAAK,qBAAqB,CACzF,CAAC,MAAM,CAAC;QACT,UAAU;QACV,MAAM,OAAO,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,EAA0B,EAAE,CAAC,CAAC,CAAC,IAAI,KAAK,mBAAmB,CAAC,CAAC;QAC3F,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC;QAC3D,YAAY;QACZ,MAAM,CAAC,SAAS,IAAI,IAAI,CAAC,MAAM,CAC7B,CAAC,CAAC,EAA4B,EAAE,CAAC,CAAC,CAAC,IAAI,KAAK,qBAAqB,CAClE,CAAC,MAAM,CAAC;QACT,qBAAqB;QACrB,MAAM,CAAC,KAAK,CAAC,IAAI,CACf,GAAG,IAAI;aACJ,MAAM,CAAC,CAAC,CAAC,EAA4E,EAAE,CACtF,CAAC,wBAAwB,EAAE,wBAAwB,EAAE,mBAAmB,CAAC,CAAC,QAAQ,CAChF,CAAC,CAAC,IAAI,CACP,CACF;aACA,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC;aAClD,MAAM,CAAC,CAAC,CAAC,EAAe,EAAE,CAAC,OAAO,CAAC,KAAK,QAAQ,CAAC,CACrD,CAAC;QACF,UAAU;QACV,MAAM,CAAC,OAAO,IAAI,IAAI,CAAC,MAAM,CAC3B,CAAC,CAAC,EAAyB,EAAE,CAAC,CAAC,CAAC,IAAI,KAAK,kBAAkB,CAC5D,CAAC,MAAM,CAAC;QACT,wBAAwB;QACxB,KAAK,MAAM,CAAC,IAAI,OAAO,EAAE,CAAC;YACxB,IAAI,OAAO,CAAC,CAAC,MAAM,CAAC,KAAK,KAAK,QAAQ,EAAE,CAAC;gBACvC,IAAI,kDAAkD,CAAC,IAAI,CAAC,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC;oBAC5E,MAAM,CAAC,oBAAoB,CAAC,IAAI,CAAC,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;gBACnD,CAAC;YACH,CAAC;QACH,CAAC;QACD,6BAA6B;QAC7B,MAAM,GAAG,GAAG,EAAE,CAAC,OAAO,CAAC,OAAO,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;QAC3C,IAAI,iDAAiD,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC;YAChE,MAAM,CAAC,YAAY,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QAChC,CAAC;QACD,IAAI,yCAAyC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC;YACxD,MAAM,CAAC,cAAc,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QAClC,CAAC;QACD,IAAI,iDAAiD,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC;YAChE,MAAM,CAAC,cAAc,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QAClC,CAAC;IACH,CAAC;IACD,yCAAyC;IACzC,IAAI,WAAW,EAAE,CAAC;QAChB,MAAM,CAAC,YAAY,CAAC,IAAI,CAAC,GAAG,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,YAAY,IAAI,EAAE,CAAC,CAAC,CAAC;QACzE,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,OAAO,IAAI,EAAE,CAAC,CAAC,CAAC;IACjE,CAAC;IACD,mBAAmB;IACnB,MAAM,CAAC,OAAO,GAAG,KAAK,CAAC,IAAI,CAAC,IAAI,GAAG,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC;IACrD,MAAM,CAAC,oBAAoB,GAAG,KAAK,CAAC,IAAI,CAAC,IAAI,GAAG,CAAC,MAAM,CAAC,oBAAoB,CAAC,CAAC,CAAC;IAC/E,MAAM,CAAC,YAAY,GAAG,KAAK,CAAC,IAAI,CAAC,IAAI,GAAG,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC,CAAC;IAC/D,MAAM,CAAC,cAAc,GAAG,KAAK,CAAC,IAAI,CAAC,IAAI,GAAG,CAAC,MAAM,CAAC,cAAc,CAAC,CAAC,CAAC;IACnE,MAAM,CAAC,cAAc,GAAG,KAAK,CAAC,IAAI,CAAC,IAAI,GAAG,CAAC,MAAM,CAAC,cAAc,CAAC,CAAC,CAAC;IACnE,MAAM,CAAC,KAAK,GAAG,KAAK,CAAC,IAAI,CAAC,IAAI,GAAG,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC;IACjD,OAAO,MAAM,CAAC;AAChB,CAAC","sourcesContent":["// SPDX-License-Identifier: MIT\r\nimport type { FileEntryWithAst } from '@tipos/tipos.js';\r\nimport type {\r\n  Statement,\r\n  ImportDeclaration,\r\n  VariableDeclaration,\r\n  TSTypeAliasDeclaration,\r\n  TSInterfaceDeclaration,\r\n  TSEnumDeclaration,\r\n  ClassDeclaration,\r\n  Program,\r\n} from '@babel/types';\r\n\r\nexport interface SinaisProjetoAvancados {\r\n  funcoes: number;\r\n  imports: string[];\r\n  variaveis: number;\r\n  tipos: string[];\r\n  classes: number;\r\n  frameworksDetectados: string[];\r\n  dependencias: string[];\r\n  scripts: string[];\r\n  pastasPadrao: string[];\r\n  arquivosPadrao: string[];\r\n  arquivosConfig: string[];\r\n}\r\n// Adicione os tipos necessários\r\nimport type { ArquetipoEstruturaDef, ResultadoDeteccaoArquetipo } from '../tipos/tipos.js';\r\n\r\n// Exemplo de uso (remova ou adapte conforme necessário no contexto real)\r\nexport function scoreArquetipo(\r\n  def: ArquetipoEstruturaDef,\r\n  _arquivos: string[], // prefixo _ para ignorar warning de unused\r\n  _sinaisAvancados?: SinaisProjetoAvancados, // prefixo _ para ignorar warning de unused\r\n): ResultadoDeteccaoArquetipo {\r\n  // Implementação fictícia para evitar erro de compilação\r\n  return {\r\n    nome: def.nome,\r\n    descricao: def.descricao ?? '',\r\n    score: 0,\r\n    confidence: 0,\r\n    matchedRequired: [],\r\n    missingRequired: [],\r\n    matchedOptional: [],\r\n    dependencyMatches: [],\r\n    filePatternMatches: [],\r\n    forbiddenPresent: [],\r\n    anomalias: [],\r\n  };\r\n}\r\n\r\nexport function extrairSinaisAvancados(\r\n  fileEntries: FileEntryWithAst[],\r\n  packageJson?: Record<string, unknown>,\r\n  _p0?: unknown,\r\n  _baseDir?: string,\r\n  _arquivos?: string[],\r\n): SinaisProjetoAvancados {\r\n  // Auxiliar para checar se o nó possui id.name string\r\n  const hasIdName = (node: unknown): node is { id: { name: string } } => {\r\n    return (\r\n      typeof node === 'object' &&\r\n      node !== null &&\r\n      'id' in node &&\r\n      typeof (node as { id?: { name?: unknown } }).id?.name === 'string'\r\n    );\r\n  };\r\n  const sinais: SinaisProjetoAvancados = {\r\n    funcoes: 0,\r\n    imports: [],\r\n    variaveis: 0,\r\n    tipos: [],\r\n    classes: 0,\r\n    frameworksDetectados: [],\r\n    dependencias: [],\r\n    scripts: [],\r\n    pastasPadrao: [],\r\n    arquivosPadrao: [],\r\n    arquivosConfig: [],\r\n  };\r\n\r\n  for (const fe of fileEntries) {\r\n    let body: Statement[] = [];\r\n    if (\r\n      fe.ast &&\r\n      fe.ast.node &&\r\n      (fe.ast.node as Program).type === 'Program' &&\r\n      Array.isArray((fe.ast.node as Program).body)\r\n    ) {\r\n      body = (fe.ast.node as Program).body;\r\n    }\r\n    // Funções\r\n    sinais.funcoes += body.filter(\r\n      (n): n is import('@babel/types').FunctionDeclaration => n.type === 'FunctionDeclaration',\r\n    ).length;\r\n    // Imports\r\n    const imports = body.filter((n): n is ImportDeclaration => n.type === 'ImportDeclaration');\r\n    sinais.imports.push(...imports.map((i) => i.source.value));\r\n    // Variáveis\r\n    sinais.variaveis += body.filter(\r\n      (n): n is VariableDeclaration => n.type === 'VariableDeclaration',\r\n    ).length;\r\n    // Tipos (TypeScript)\r\n    sinais.tipos.push(\r\n      ...body\r\n        .filter((n): n is TSTypeAliasDeclaration | TSInterfaceDeclaration | TSEnumDeclaration =>\r\n          ['TSTypeAliasDeclaration', 'TSInterfaceDeclaration', 'TSEnumDeclaration'].includes(\r\n            n.type,\r\n          ),\r\n        )\r\n        .map((n) => (hasIdName(n) ? n.id.name : undefined))\r\n        .filter((v): v is string => typeof v === 'string'),\r\n    );\r\n    // Classes\r\n    sinais.classes += body.filter(\r\n      (n): n is ClassDeclaration => n.type === 'ClassDeclaration',\r\n    ).length;\r\n    // Frameworks por import\r\n    for (const i of imports) {\r\n      if (typeof i.source.value === 'string') {\r\n        if (/express|react|next|electron|discord\\.js|telegraf/.test(i.source.value)) {\r\n          sinais.frameworksDetectados.push(i.source.value);\r\n        }\r\n      }\r\n    }\r\n    // Padrões de pastas/arquivos\r\n    const rel = fe.relPath.replace(/\\\\/g, '/');\r\n    if (/src\\/controllers|pages|api|prisma|packages|apps/.test(rel)) {\r\n      sinais.pastasPadrao.push(rel);\r\n    }\r\n    if (/main\\.js|index\\.ts|bot\\.ts|electron\\.js/.test(rel)) {\r\n      sinais.arquivosPadrao.push(rel);\r\n    }\r\n    if (/tsconfig\\.json|turbo\\.json|pnpm-workspace\\.yaml/.test(rel)) {\r\n      sinais.arquivosConfig.push(rel);\r\n    }\r\n  }\r\n  // Dependências e scripts do package.json\r\n  if (packageJson) {\r\n    sinais.dependencias.push(...Object.keys(packageJson.dependencies || {}));\r\n    sinais.scripts.push(...Object.keys(packageJson.scripts || {}));\r\n  }\r\n  // Normaliza arrays\r\n  sinais.imports = Array.from(new Set(sinais.imports));\r\n  sinais.frameworksDetectados = Array.from(new Set(sinais.frameworksDetectados));\r\n  sinais.pastasPadrao = Array.from(new Set(sinais.pastasPadrao));\r\n  sinais.arquivosPadrao = Array.from(new Set(sinais.arquivosPadrao));\r\n  sinais.arquivosConfig = Array.from(new Set(sinais.arquivosConfig));\r\n  sinais.tipos = Array.from(new Set(sinais.tipos));\r\n  return sinais;\r\n}\r\n"]}