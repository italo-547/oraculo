{"version":3,"file":"sentinela.js","sourceRoot":"","sources":["../../src/guardian/sentinela.ts"],"names":[],"mappings":"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","sourcesContent":["// SPDX-License-Identifier: MIT\r\nimport micromatch from 'micromatch';\r\nimport { promises as fs } from 'node:fs';\r\nimport path from 'node:path';\r\nimport { config } from '@nucleo/constelacao/cosmos.js';\r\nimport { log } from '@nucleo/constelacao/log.js';\r\nimport { FileEntry, GuardianError, IntegridadeStatus } from '@tipos/tipos.js';\r\nimport { carregarBaseline, salvarBaseline } from './baseline.js';\r\nimport { BASELINE_PATH } from './constantes.js';\r\nimport { diffSnapshots, verificarErros } from './diff.js';\r\nimport { gerarSnapshotDoConteudo } from './hash.js';\r\n\r\ntype Snapshot = Record<string, string>;\r\n\r\nfunction construirSnapshot(fileEntries: FileEntry[]): Snapshot {\r\n  const snapshot: Snapshot = {};\r\n  for (const { relPath, content } of fileEntries) {\r\n    if (typeof content !== 'string' || !content.trim()) continue;\r\n    try {\r\n      snapshot[relPath] = gerarSnapshotDoConteudo(content);\r\n    } catch (err) {\r\n      log.aviso(\r\n        `\u001fx Falha ao gerar hash de ${relPath}: ${typeof err === 'object' && err && 'message' in err ? (err as { message: string }).message : String(err)}`,\r\n      );\r\n    }\r\n  }\r\n  return snapshot;\r\n}\r\n\r\nexport async function scanSystemIntegrity(\r\n  fileEntries: FileEntry[],\r\n  options?: { justDiff?: boolean; suppressLogs?: boolean },\r\n): Promise<{\r\n  status: IntegridadeStatus;\r\n  timestamp: string;\r\n  detalhes?: string[];\r\n  baselineModificado?: boolean;\r\n}> {\r\n  const agora = new Date().toISOString();\r\n  await fs.mkdir(path.dirname(BASELINE_PATH), { recursive: true });\r\n\r\n  let baselineAnterior: Snapshot | null = null;\r\n  try {\r\n    baselineAnterior = await carregarBaseline();\r\n  } catch (err) {\r\n    log.aviso(\r\n      `‚ö†Ô∏è Baseline inv√°lido ou corrompido: ${typeof err === 'object' && err && 'message' in err ? (err as { message: string }).message : String(err)}`,\r\n    );\r\n  }\r\n\r\n  // Filtra entradas conforme padr√µes ignorados espec√≠ficos do Guardian\r\n  const ignorados =\r\n    (config.INCLUDE_EXCLUDE_RULES && config.INCLUDE_EXCLUDE_RULES.globalExcludeGlob) ||\r\n    config.GUARDIAN_IGNORE_PATTERNS ||\r\n    [];\r\n  const filtrados = fileEntries.filter((f) => {\r\n    const rel = f.relPath.replace(/\\\\/g, '/');\r\n    return !micromatch.isMatch(rel, ignorados);\r\n  });\r\n  if (config.DEV_MODE) {\r\n    const removidos = fileEntries.length - filtrados.length;\r\n    log.info(\r\n      `‚öôÔ∏è Guardian filtro aplicado: ${filtrados.length} arquivos considerados (removidos ${removidos}).`,\r\n    );\r\n  }\r\n  // Usa import din√¢mico para alinhar com mocks de teste (vi.mock/vi.doMock)\r\n  const { gerarSnapshotDoConteudo: gerar } = await import('./hash.js');\r\n  const snapshotAtual: Snapshot = {};\r\n  for (const { relPath, content } of filtrados) {\r\n    if (typeof content !== 'string' || !content.trim()) continue;\r\n    try {\r\n      snapshotAtual[relPath] = gerar(content);\r\n    } catch (err) {\r\n      log.aviso(\r\n        `\\u001Fx Falha ao gerar hash de ${relPath}: ${typeof err === 'object' && err && 'message' in err ? (err as { message: string }).message : String(err)}`,\r\n      );\r\n    }\r\n  }\r\n\r\n  if (!baselineAnterior) {\r\n    if (options?.justDiff) {\r\n      // Em modo justDiff, aus√™ncia de baseline implica sem altera√ß√µes report√°veis\r\n      return { status: IntegridadeStatus.Ok, timestamp: agora, detalhes: [] };\r\n    }\r\n    if (!options?.suppressLogs) {\r\n      log.info(`üÜï Guardian: baseline inicial criado.`);\r\n    }\r\n    await salvarBaseline(snapshotAtual);\r\n    return { status: IntegridadeStatus.Criado, timestamp: agora };\r\n  }\r\n\r\n  if (process.argv.includes('--aceitar')) {\r\n    if (!options?.suppressLogs) {\r\n      log.info(`‚úÖ Guardian: baseline aceito manualmente (--aceitar).`);\r\n    }\r\n    await salvarBaseline(snapshotAtual);\r\n    return { status: IntegridadeStatus.Aceito, timestamp: agora };\r\n  }\r\n\r\n  const diffs = diffSnapshots(baselineAnterior, snapshotAtual);\r\n  const erros = verificarErros(diffs);\r\n\r\n  if (options?.justDiff) {\r\n    return {\r\n      status: erros.length ? IntegridadeStatus.AlteracoesDetectadas : IntegridadeStatus.Ok,\r\n      timestamp: agora,\r\n      detalhes: erros,\r\n    };\r\n  }\r\n\r\n  if (erros.length) {\r\n    throw new GuardianError(erros);\r\n  }\r\n\r\n  return { status: IntegridadeStatus.Ok, timestamp: agora };\r\n}\r\n\r\nexport async function acceptNewBaseline(fileEntries: FileEntry[]): Promise<void> {\r\n  const ignorados = config.GUARDIAN_IGNORE_PATTERNS || [];\r\n  // Preferir configura√ß√£o din√¢mica quando dispon√≠vel\r\n  const ignoradosDyn =\r\n    (config.INCLUDE_EXCLUDE_RULES && config.INCLUDE_EXCLUDE_RULES.globalExcludeGlob) || ignorados;\r\n  const filtrados = fileEntries.filter((f) => {\r\n    const rel = f.relPath.replace(/\\\\/g, '/');\r\n    return !micromatch.isMatch(rel, ignoradosDyn);\r\n  });\r\n  const snapshotAtual = construirSnapshot(filtrados);\r\n  await fs.mkdir(path.dirname(BASELINE_PATH), { recursive: true });\r\n  await salvarBaseline(snapshotAtual);\r\n}\r\n"]}