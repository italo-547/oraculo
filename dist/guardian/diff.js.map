{"version":3,"file":"diff.js","sourceRoot":"","sources":["../../src/guardian/diff.ts"],"names":[],"mappings":"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","sourcesContent":["// SPDX-License-Identifier: MIT\r\nimport { config } from '@nucleo/constelacao/cosmos.js';\r\n\r\nexport interface SnapshotDiff {\r\n  removidos: string[];\r\n  adicionados: string[];\r\n  alterados: string[];\r\n}\r\n\r\n/**\r\n * Compara dois snapshots de integridade (hash por arquivo) e retorna as diferen√ßas encontradas.\r\n */\r\nexport function diffSnapshots(\r\n  before: Record<string, string>,\r\n  after: Record<string, string>,\r\n): SnapshotDiff {\r\n  // Cache intra-processo para evitar recomputar diffs id√™nticos em execu√ß√µes repetidas\r\n  const key = `${Object.keys(before).length}:${Object.keys(after).length}`;\r\n  const hashBefore = config.GUARDIAN_ENFORCE_PROTECTION ? Object.values(before).join('|') : '';\r\n  const hashAfter = config.GUARDIAN_ENFORCE_PROTECTION ? Object.values(after).join('|') : '';\r\n  const cacheKey = key + ':' + hashBefore + '>' + hashAfter;\r\n  const globalAny = global as unknown as { __ORACULO_DIFF_CACHE__?: Map<string, SnapshotDiff> };\r\n  if (!globalAny.__ORACULO_DIFF_CACHE__) globalAny.__ORACULO_DIFF_CACHE__ = new Map();\r\n  const cache = globalAny.__ORACULO_DIFF_CACHE__;\r\n  if (cache.has(cacheKey)) {\r\n    const globAny = globalAny as unknown as { __ORACULO_DIFF_CACHE_HITS__?: number };\r\n    globAny.__ORACULO_DIFF_CACHE_HITS__ = (globAny.__ORACULO_DIFF_CACHE_HITS__ || 0) + 1;\r\n    const hit = cache.get(cacheKey);\r\n    if (hit) return hit;\r\n  }\r\n  const removidos = Object.keys(before).filter((key) => !(key in after));\r\n  const adicionados = Object.keys(after).filter((key) => !(key in before));\r\n  const alterados = Object.keys(before).filter((key) => key in after && before[key] !== after[key]);\r\n  const resultado = { removidos, adicionados, alterados };\r\n  cache.set(cacheKey, resultado);\r\n  return resultado;\r\n}\r\n\r\n/**\r\n * Gera mensagens de erro de integridade com base nas permiss√µes configuradas.\r\n */\r\nexport function verificarErros(diffs: SnapshotDiff): string[] {\r\n  const erros: string[] = [];\r\n\r\n  if (diffs.removidos.length > 0 && !config.GUARDIAN_ALLOW_DELS) {\r\n    erros.push(`üóëÔ∏è Arquivos removidos: ${diffs.removidos.join(', ')}`);\r\n  }\r\n  if (diffs.adicionados.length > 0 && !config.GUARDIAN_ALLOW_ADDS) {\r\n    erros.push(`üìÅ Arquivos adicionados: ${diffs.adicionados.join(', ')}`);\r\n  }\r\n  if (diffs.alterados.length > 0 && !config.GUARDIAN_ALLOW_CHG) {\r\n    erros.push(`‚úèÔ∏è Arquivos alterados: ${diffs.alterados.join(', ')}`);\r\n  }\r\n\r\n  return erros;\r\n}\r\n"]}