{"version":3,"file":"fantasma.js","sourceRoot":"","sources":["../../src/zeladores/fantasma.ts"],"names":[],"mappings":"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","sourcesContent":["// SPDX-License-Identifier: MIT\r\nimport { scanRepository } from '../nucleo/scanner.js';\r\nimport { promises as fs } from 'node:fs';\r\nimport path from 'node:path';\r\nimport { grafoDependencias } from '../analistas/detector-dependencias.js';\r\nimport { isInsideSrc } from '../nucleo/constelacao/paths.js';\r\n\r\nimport type { ArquivoFantasma, FileMap } from '../tipos/tipos.js';\r\n\r\nconst EXTENSOES_ALVO = ['.js', '.ts', '.jsx', '.tsx'];\r\nconst IGNORAR_PADROES = ['test', 'mock', 'spec', 'stories'];\r\n// Janela de inatividade mínima para considerar fantasma (default mais conservador)\r\nconst INATIVIDADE_DIAS = Number(process.env.GHOST_DAYS) || 45;\r\nconst MILIS_POR_DIA = 86_400_000;\r\n\r\nfunction estaSendoReferenciado(relPath: string, grafo: Map<string, Set<string>>): boolean {\r\n  for (const dependencias of grafo.values()) {\r\n    if (dependencias.has(relPath)) return true;\r\n  }\r\n  return false;\r\n}\r\n\r\nexport async function detectarFantasmas(\r\n  baseDir: string = process.cwd(),\r\n): Promise<{ total: number; fantasmas: ArquivoFantasma[] }> {\r\n  const fileMap: FileMap = await scanRepository(baseDir);\r\n  const agora = Date.now();\r\n  const fantasmas: ArquivoFantasma[] = [];\r\n\r\n  for (const entrada of Object.values(fileMap)) {\r\n    const { relPath, fullPath } = entrada;\r\n    const ext = path.extname(relPath).toLowerCase();\r\n\r\n    if (!EXTENSOES_ALVO.includes(ext)) continue;\r\n    if (IGNORAR_PADROES.some((p) => relPath.toLowerCase().includes(p))) continue;\r\n\r\n    try {\r\n      const stat = await fs.stat(fullPath);\r\n      const diasInativo = Math.floor((agora - stat.mtimeMs) / MILIS_POR_DIA);\r\n      // Se o grafo ainda não foi populado (execução isolada da poda), não arrisca classificar\r\n      if (grafoDependencias.size === 0) continue;\r\n      const referenciado = estaSendoReferenciado(relPath, grafoDependencias);\r\n\r\n      // Regras de exclusão preventiva (não marcar como fantasma):\r\n      if (isInsideSrc(relPath)) {\r\n        // Protege arquivos fonte recentes ou de index/entry mesmo que não referenciados ainda\r\n        if (/\\/index\\.(ts|js|tsx|jsx)$/.test(relPath)) continue;\r\n      }\r\n      if (/\\.(d\\.ts)$/.test(relPath)) continue; // declarações\r\n      if (/config\\.(ts|js|cjs|mjs)$/.test(relPath)) continue;\r\n\r\n      // NOVA heurística (mais segura): somente é fantasma se (não referenciado) E (inativo acima do limiar)\r\n      if (!referenciado && diasInativo > INATIVIDADE_DIAS) {\r\n        fantasmas.push({ arquivo: relPath, referenciado, diasInativo });\r\n      }\r\n    } catch {\r\n      // Silenciosamente ignora arquivos inacessíveis\r\n    }\r\n  }\r\n\r\n  return {\r\n    total: fantasmas.length,\r\n    fantasmas,\r\n  };\r\n}\r\n"]}