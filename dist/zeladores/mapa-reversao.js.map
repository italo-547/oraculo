{"version":3,"file":"mapa-reversao.js","sourceRoot":"","sources":["../../src/zeladores/mapa-reversao.ts"],"names":[],"mappings":"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","sourcesContent":["// SPDX-License-Identifier: MIT\r\nimport { promises as fs } from 'node:fs';\r\nimport path from 'node:path';\r\nimport { log } from '../nucleo/constelacao/log.js';\r\nimport { config } from '../nucleo/constelacao/cosmos.js';\r\nimport type { MoveReversao, MapaReversao } from '../tipos/tipos.js';\r\n\r\nfunction getMapaPath(): string {\r\n  return (config && (config.STRUCTURE_REVERSE_MAP_PATH as string)) || '.oraculo/mapa-reversao.json';\r\n}\r\n\r\nexport class GerenciadorMapaReversao {\r\n  private mapa: MapaReversao;\r\n\r\n  constructor() {\r\n    this.mapa = {\r\n      versao: '1.0.0',\r\n      moves: [],\r\n      metadata: {\r\n        totalMoves: 0,\r\n        ultimoMove: '',\r\n        podeReverter: true,\r\n      },\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Carrega o mapa de revers√£o do disco\r\n   */\r\n  async carregar(): Promise<void> {\r\n    try {\r\n      const pathMapa = getMapaPath();\r\n      const conteudo = await fs.readFile(pathMapa, 'utf-8');\r\n      this.mapa = JSON.parse(conteudo);\r\n\r\n      // Valida√ß√£o b√°sica\r\n      if (!this.mapa.moves || !Array.isArray(this.mapa.moves)) {\r\n        throw new Error('Mapa de revers√£o corrompido');\r\n      }\r\n\r\n      log.info(`üìã Mapa de revers√£o carregado: ${this.mapa.moves.length} moves registrados`);\r\n    } catch (error) {\r\n      if ((error as NodeJS.ErrnoException).code === 'ENOENT') {\r\n        // N√£o persistimos automaticamente um mapa vazio ao carregar: evitar efeitos colaterais\r\n        // (ex.: chamada a fs.mkdir) durante opera√ß√µes que apenas consultam o mapa.\r\n        log.info('üìã Nenhum mapa de revers√£o encontrado, iniciando novo');\r\n      } else {\r\n        log.erro(`‚ùå Erro ao carregar mapa de revers√£o: ${(error as Error).message}`);\r\n        // Reinicia com mapa vazio em caso de erro\r\n        this.mapa = {\r\n          versao: '1.0.0',\r\n          moves: [],\r\n          metadata: {\r\n            totalMoves: 0,\r\n            ultimoMove: '',\r\n            podeReverter: true,\r\n          },\r\n        };\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Salva o mapa de revers√£o no disco\r\n   */\r\n  async salvar(): Promise<void> {\r\n    try {\r\n      const pathMapa = getMapaPath();\r\n      await fs.mkdir(path.dirname(pathMapa), { recursive: true });\r\n      await fs.writeFile(pathMapa, JSON.stringify(this.mapa, null, 2), 'utf-8');\r\n      log.info(`üíæ Mapa de revers√£o salvo: ${this.mapa.moves.length} moves`);\r\n    } catch (error) {\r\n      log.erro(`‚ùå Erro ao salvar mapa de revers√£o: ${(error as Error).message}`);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Registra um novo move no mapa de revers√£o\r\n   */\r\n  async registrarMove(\r\n    origem: string,\r\n    destino: string,\r\n    motivo: string,\r\n    conteudoOriginal?: string,\r\n    conteudoFinal?: string,\r\n    // quando true, evita persistir o mapa no disco imediatamente (√∫til para chamadas em massa/tests)\r\n    skipSalvar?: boolean,\r\n  ): Promise<string> {\r\n    const id = `move_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\r\n\r\n    const move: MoveReversao = {\r\n      id,\r\n      timestamp: new Date().toISOString(),\r\n      origem,\r\n      destino,\r\n      motivo,\r\n      // Considera que imports foram reescritos se houver conte√∫do original\r\n      // fornecido (testes esperam que passar conteudoOriginal permita restaura√ß√£o)\r\n      importsReescritos:\r\n        !!conteudoOriginal || (!!conteudoFinal && conteudoOriginal !== conteudoFinal),\r\n      conteudoOriginal,\r\n      conteudoFinal,\r\n    };\r\n\r\n    this.mapa.moves.push(move);\r\n    this.mapa.metadata.totalMoves = this.mapa.moves.length;\r\n    this.mapa.metadata.ultimoMove = move.timestamp;\r\n\r\n    // Persiste no disco por padr√£o; caller pode optar por adiar a persist√™ncia\r\n    if (!skipSalvar) {\r\n      await this.salvar();\r\n    }\r\n\r\n    log.info(`üìù Move registrado: ${origem} ‚Üí ${destino} (${motivo})`);\r\n    return id;\r\n  }\r\n\r\n  /**\r\n   * Remove um move do mapa de revers√£o\r\n   */\r\n  async removerMove(id: string): Promise<boolean> {\r\n    const indice = this.mapa.moves.findIndex((move) => move.id === id);\r\n    if (indice === -1) {\r\n      return false;\r\n    }\r\n\r\n    this.mapa.moves.splice(indice, 1);\r\n    this.mapa.metadata.totalMoves = this.mapa.moves.length;\r\n    await this.salvar();\r\n\r\n    log.info(`üóëÔ∏è Move removido do mapa: ${id}`);\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * Obt√©m todos os moves registrados\r\n   */\r\n  obterMoves(): MoveReversao[] {\r\n    return [...this.mapa.moves];\r\n  }\r\n\r\n  /**\r\n   * Obt√©m moves por arquivo\r\n   */\r\n  obterMovesPorArquivo(arquivo: string): MoveReversao[] {\r\n    return this.mapa.moves.filter((move) => move.origem === arquivo || move.destino === arquivo);\r\n  }\r\n\r\n  /**\r\n   * Verifica se um arquivo pode ser revertido\r\n   */\r\n  podeReverterArquivo(arquivo: string): boolean {\r\n    const moves = this.obterMovesPorArquivo(arquivo);\r\n    return moves.length > 0;\r\n  }\r\n\r\n  /**\r\n   * Reverte um move espec√≠fico\r\n   */\r\n  async reverterMove(id: string, baseDir: string = process.cwd()): Promise<boolean> {\r\n    const move = this.mapa.moves.find((m) => m.id === id);\r\n    if (!move) {\r\n      log.erro(`‚ùå Move n√£o encontrado: ${id}`);\r\n      return false;\r\n    }\r\n\r\n    try {\r\n      // Verifica se o arquivo de destino ainda existe\r\n      const destinoPath = path.join(baseDir, move.destino);\r\n      const origemPath = path.join(baseDir, move.origem);\r\n\r\n      try {\r\n        await fs.access(destinoPath);\r\n      } catch {\r\n        log.erro(`‚ùå Arquivo de destino n√£o encontrado: ${move.destino}`);\r\n        return false;\r\n      }\r\n\r\n      // Verifica se o diret√≥rio de origem existe\r\n      await fs.mkdir(path.dirname(origemPath), { recursive: true });\r\n\r\n      // Verifica se j√° existe arquivo na origem\r\n      try {\r\n        await fs.access(origemPath);\r\n        log.aviso(`‚ö†Ô∏è Arquivo j√° existe na origem: ${move.origem}`);\r\n        return false;\r\n      } catch {\r\n        // OK, origem est√° livre\r\n      }\r\n\r\n      // Move o arquivo de volta\r\n      if (move.importsReescritos && move.conteudoOriginal) {\r\n        // Se os imports foram reescritos, usa o conte√∫do original\r\n        await fs.writeFile(origemPath, move.conteudoOriginal, 'utf-8');\r\n        await fs.unlink(destinoPath);\r\n        log.sucesso(`‚Ü©Ô∏è Arquivo revertido com conte√∫do original: ${move.destino} ‚Üí ${move.origem}`);\r\n      } else {\r\n        // Move simples\r\n        await fs.rename(destinoPath, origemPath);\r\n        log.sucesso(`‚Ü©Ô∏è Arquivo revertido: ${move.destino} ‚Üí ${move.origem}`);\r\n      }\r\n\r\n      // Remove o move do mapa\r\n      await this.removerMove(id);\r\n\r\n      return true;\r\n    } catch (error) {\r\n      log.erro(`‚ùå Erro ao reverter move: ${(error as Error).message}`);\r\n      return false;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Reverte todos os moves de um arquivo\r\n   */\r\n  async reverterArquivo(arquivo: string, baseDir: string = process.cwd()): Promise<boolean> {\r\n    const moves = this.obterMovesPorArquivo(arquivo);\r\n\r\n    if (moves.length === 0) {\r\n      log.aviso(`‚ö†Ô∏è Nenhum move encontrado para: ${arquivo}`);\r\n      return false;\r\n    }\r\n\r\n    // Reverte do mais recente para o mais antigo\r\n    const movesOrdenados = moves.sort(\r\n      (a, b) => new Date(b.timestamp).getTime() - new Date(a.timestamp).getTime(),\r\n    );\r\n\r\n    // Retorna true se pelo menos um move foi revertido com sucesso\r\n    let revertedCount = 0;\r\n    for (const move of movesOrdenados) {\r\n      const resultado = await this.reverterMove(move.id, baseDir);\r\n      if (resultado) revertedCount += 1;\r\n    }\r\n\r\n    return revertedCount > 0;\r\n  }\r\n\r\n  /**\r\n   * Lista moves em formato leg√≠vel\r\n   */\r\n  listarMoves(): string {\r\n    if (this.mapa.moves.length === 0) {\r\n      return 'üìã Nenhum move registrado no mapa de revers√£o.';\r\n    }\r\n\r\n    let resultado = `üìã Mapa de Revers√£o (${this.mapa.moves.length} moves):\\n\\n`;\r\n\r\n    // Ordena por timestamp (mais recente primeiro)\r\n    const movesOrdenados = [...this.mapa.moves].sort(\r\n      (a, b) => new Date(b.timestamp).getTime() - new Date(a.timestamp).getTime(),\r\n    );\r\n\r\n    for (const move of movesOrdenados) {\r\n      const data = new Date(move.timestamp).toLocaleString('pt-BR');\r\n      const reescritos = move.importsReescritos ? ' (imports reescritos)' : '';\r\n\r\n      resultado += `${move.id}:\\n`;\r\n      resultado += `  üìÖ ${data}\\n`;\r\n      resultado += `  üìÅ ${move.origem} ‚Üí ${move.destino}\\n`;\r\n      resultado += `  üí¨ ${move.motivo}${reescritos}\\n\\n`;\r\n    }\r\n\r\n    return resultado;\r\n  }\r\n\r\n  /**\r\n   * Limpa o mapa de revers√£o\r\n   */\r\n  async limpar(): Promise<void> {\r\n    this.mapa.moves = [];\r\n    this.mapa.metadata.totalMoves = 0;\r\n    this.mapa.metadata.ultimoMove = '';\r\n    await this.salvar();\r\n    log.info('üßπ Mapa de revers√£o limpo');\r\n  }\r\n}\r\n\r\n// Inst√¢ncia global\r\nexport const mapaReversao = new GerenciadorMapaReversao();\r\n"]}