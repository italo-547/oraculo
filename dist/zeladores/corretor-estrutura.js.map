{"version":3,"file":"corretor-estrutura.js","sourceRoot":"","sources":["../../src/zeladores/corretor-estrutura.ts"],"names":[],"mappings":"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","sourcesContent":["// SPDX-License-Identifier: MIT\r\nimport { promises as fs } from 'node:fs';\r\nimport path from 'node:path';\r\nimport pLimit from 'p-limit';\r\nimport { log } from '../nucleo/constelacao/log.js';\r\nimport { resolverPluginSeguro } from '../nucleo/constelacao/seguranca.js';\r\nimport { importarModuloSeguro } from '../nucleo/util/import-safe.js';\r\nimport { config } from '../nucleo/constelacao/cosmos.js';\r\nimport { reescreverImports } from './util/imports.js';\r\nimport { mapaReversao } from './mapa-reversao.js';\r\nimport type { FileEntryWithAst } from '../tipos/tipos.js';\r\n\r\ninterface ResultadoEstrutural {\r\n  arquivo: string;\r\n  ideal: string | null;\r\n  atual: string;\r\n  motivo?: string;\r\n}\r\n\r\nexport async function corrigirEstrutura(\r\n  mapa: ResultadoEstrutural[],\r\n  fileEntries: FileEntryWithAst[],\r\n  baseDir: string = process.cwd(),\r\n): Promise<void> {\r\n  // Captura dinâmica das configs (evita congelar valores em tempo de import)\r\n  const CONCORRENCIA = Number(config.STRUCTURE_CONCURRENCY ?? 5);\r\n  const AUTO_FIX = Boolean(config.STRUCTURE_AUTO_FIX);\r\n  const PLUGINS = (config.STRUCTURE_PLUGINS as unknown[]) || [];\r\n  const STRUCTURE_LAYERS = config.STRUCTURE_LAYERS;\r\n\r\n  const limit = pLimit(CONCORRENCIA);\r\n\r\n  await Promise.all(\r\n    mapa.map((entry) =>\r\n      limit(async () => {\r\n        const { arquivo, ideal, atual } = entry;\r\n        if (!ideal || ideal === atual) return;\r\n\r\n        const origem = path.join(baseDir, arquivo);\r\n        // Preserva o nome do arquivo ao mover para a pasta ideal\r\n        const nomeArquivo = path.basename(arquivo);\r\n        const destino = path.join(baseDir, ideal, nomeArquivo);\r\n\r\n        if (!AUTO_FIX) {\r\n          log.info(`→ Simular: ${arquivo} → ${path.relative(baseDir, destino)}`);\r\n          return;\r\n        }\r\n\r\n        try {\r\n          await fs.mkdir(path.dirname(destino), { recursive: true });\r\n        } catch (err) {\r\n          const msg =\r\n            err && typeof err === 'object' && 'message' in err\r\n              ? String((err as { message: unknown }).message)\r\n              : String(err);\r\n          log.erro(`❌ Falha ao criar diretório para ${destino}: ${msg}`);\r\n          return;\r\n        }\r\n\r\n        try {\r\n          const destinoExiste = await fs\r\n            .stat(destino)\r\n            .then(() => true)\r\n            .catch(() => false);\r\n\r\n          if (destinoExiste) {\r\n            log.erro(`⚠️ Destino já existe: ${arquivo} → ${path.relative(baseDir, destino)}`);\r\n            return;\r\n          }\r\n\r\n          // Reescrever imports relativos (opcional; somente quando AUTO_FIX)\r\n          try {\r\n            if (config.SAFE_MODE && !config.ALLOW_MUTATE_FS) {\r\n              log.info(\r\n                `→ SAFE_MODE: simulando escrita/movimento para ${arquivo} → ${path.relative(baseDir, destino)}`,\r\n              );\r\n            } else {\r\n              const conteudo = await fs.readFile(origem, 'utf-8');\r\n              const { novoConteudo } = reescreverImports(\r\n                conteudo,\r\n                path.posix.normalize(arquivo.replace(/\\\\/g, '/')),\r\n                path.posix.normalize(path.relative(baseDir, destino).replace(/\\\\/g, '/')),\r\n              );\r\n\r\n              // Registra o move no mapa de reversão\r\n              await mapaReversao.registrarMove(\r\n                arquivo,\r\n                path.relative(baseDir, destino),\r\n                entry.motivo || 'Reorganização estrutural',\r\n                conteudo,\r\n                novoConteudo,\r\n                true, // não salvar imediatamente para evitar muitas operações de FS em lote/tests\r\n              );\r\n\r\n              await fs.writeFile(destino, novoConteudo, 'utf-8');\r\n              await fs.unlink(origem);\r\n            }\r\n          } catch {\r\n            if (config.SAFE_MODE && !config.ALLOW_MUTATE_FS) {\r\n              // Já simulamos acima — nada a fazer\r\n            } else {\r\n              // fallback: mover arquivo sem reescrita de imports\r\n              try {\r\n                // Registra o move no mapa de reversão sem conteúdo original\r\n                await mapaReversao.registrarMove(\r\n                  arquivo,\r\n                  path.relative(baseDir, destino),\r\n                  entry.motivo || 'Reorganização estrutural (fallback)',\r\n                  undefined,\r\n                  undefined,\r\n                  true, // não salvar imediatamente\r\n                );\r\n\r\n                await fs.rename(origem, destino);\r\n              } catch (err) {\r\n                const msg =\r\n                  err && typeof err === 'object' && 'message' in err\r\n                    ? String((err as { message: unknown }).message)\r\n                    : String(err);\r\n                log.erro(`❌ Falha ao mover ${arquivo} via rename: ${msg}`);\r\n                return;\r\n              }\r\n            }\r\n          }\r\n          log.sucesso(`✅ Movido: ${arquivo} → ${path.relative(baseDir, destino)}`);\r\n        } catch (err) {\r\n          const msg =\r\n            err && typeof err === 'object' && 'message' in err\r\n              ? String((err as { message: unknown }).message)\r\n              : String(err);\r\n          log.erro(`❌ Falha ao mover ${arquivo}: ${msg}`);\r\n        }\r\n      }),\r\n    ),\r\n  );\r\n\r\n  for (const pluginRel of PLUGINS) {\r\n    try {\r\n      const resolvido = resolverPluginSeguro(baseDir, String(pluginRel));\r\n      if (resolvido.erro) {\r\n        log.aviso(`⚠️ Plugin ignorado (${pluginRel}): ${resolvido.erro}`);\r\n        continue;\r\n      }\r\n      const caminhoPlugin = resolvido.caminho;\r\n      if (!caminhoPlugin) {\r\n        log.aviso(`⚠️ Caminho de plugin não resolvido: ${String(pluginRel)}`);\r\n        continue;\r\n      }\r\n      const pluginModule: unknown = await importarModuloSeguro(baseDir, String(pluginRel));\r\n      let pluginFn:\r\n        | ((args: {\r\n            mapa: ResultadoEstrutural[];\r\n            baseDir: string;\r\n            layers: typeof STRUCTURE_LAYERS;\r\n            fileEntries: FileEntryWithAst[];\r\n          }) => Promise<void> | void)\r\n        | undefined;\r\n      if (\r\n        pluginModule &&\r\n        typeof pluginModule === 'object' &&\r\n        'default' in pluginModule &&\r\n        typeof (pluginModule as Record<string, unknown>).default === 'function'\r\n      ) {\r\n        pluginFn = (pluginModule as { default: typeof pluginFn }).default;\r\n      } else if (typeof pluginModule === 'function') {\r\n        pluginFn = pluginModule as typeof pluginFn;\r\n      }\r\n      if (typeof pluginFn === 'function') {\r\n        await pluginFn({ mapa, baseDir, layers: STRUCTURE_LAYERS, fileEntries });\r\n      }\r\n    } catch (err) {\r\n      let msg = 'erro desconhecido';\r\n      if (\r\n        err &&\r\n        typeof err === 'object' &&\r\n        'message' in err &&\r\n        typeof (err as { message?: unknown }).message === 'string'\r\n      ) {\r\n        msg = String((err as { message: string }).message);\r\n      } else if (typeof err === 'string') {\r\n        msg = err;\r\n      }\r\n      log.aviso(`⚠️ Plugin falhou: ${String(pluginRel)} — ${String(msg)}`);\r\n    }\r\n  }\r\n}\r\n"]}