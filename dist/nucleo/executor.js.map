{"version":3,"file":"executor.js","sourceRoot":"","sources":["../../src/nucleo/executor.ts"],"names":[],"mappings":"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","sourcesContent":["// SPDX-License-Identifier: MIT\r\nimport crypto from 'node:crypto';\r\nimport XXH from 'xxhashjs';\r\nimport type {\r\n  ContextoExecucao,\r\n  FileEntryWithAst,\r\n  Ocorrencia,\r\n  ResultadoInquisicao,\r\n  Tecnica,\r\n} from '@tipos/tipos.js';\r\nimport { MetricaAnalista, MetricaExecucao, ocorrenciaErroAnalista } from '@tipos/tipos.js';\r\nimport { lerEstado, salvarEstado } from '@zeladores/util/persistencia.js';\r\nimport { config } from '@nucleo/constelacao/cosmos.js';\r\nimport { formatMs } from '@nucleo/constelacao/format.js';\r\nimport { log } from '@nucleo/constelacao/log.js';\r\n// Fallback para infoDestaque quando mock de log não implementa\r\nconst __infoD = (msg: string) => {\r\n  const l = log as unknown as { infoDestaque?: (m: string) => void; info: (m: string) => void };\r\n  if (typeof l.infoDestaque === 'function') return l.infoDestaque(msg);\r\n  return l.info(msg);\r\n};\r\n\r\nexport async function executarInquisicao(\r\n  fileEntriesComAst: FileEntryWithAst[],\r\n  tecnicas: Tecnica[],\r\n  baseDir: string,\r\n  guardianResultado: unknown,\r\n  opts?: { verbose?: boolean; compact?: boolean },\r\n): Promise<ResultadoInquisicao> {\r\n  const ocorrencias: Ocorrencia[] = [];\r\n  const metricasAnalistas: MetricaAnalista[] = [];\r\n  const arquivosValidosSet = new Set(fileEntriesComAst.map((f) => f.relPath));\r\n  const contextoGlobal: ContextoExecucao = {\r\n    baseDir,\r\n    arquivos: fileEntriesComAst,\r\n    ambiente: {\r\n      arquivosValidosSet,\r\n      guardian: guardianResultado,\r\n    },\r\n  };\r\n  const inicioExecucao = performance.now();\r\n\r\n  // Incremental: carregar estado anterior\r\n  type EstadoIncremental = {\r\n    versao: number;\r\n    arquivos: Record<\r\n      string,\r\n      {\r\n        hash: string;\r\n        ocorrencias: Ocorrencia[];\r\n        analistas?: Record<string, { ocorrencias: number; duracaoMs: number }>;\r\n        ultimaExecucaoMs?: number;\r\n        reaproveitadoCount?: number;\r\n      }\r\n    >;\r\n    estatisticas?: {\r\n      totalReaproveitamentos?: number;\r\n      totalArquivosProcessados?: number;\r\n      ultimaDuracaoMs?: number;\r\n    };\r\n  };\r\n  let estadoIncremental: EstadoIncremental | null = null;\r\n  if (config.ANALISE_INCREMENTAL_ENABLED) {\r\n    const lido = await lerEstado<EstadoIncremental>(config.ANALISE_INCREMENTAL_STATE_PATH).catch(\r\n      () => null,\r\n    );\r\n    if (lido && lido.versao === config.ANALISE_INCREMENTAL_VERSION) estadoIncremental = lido;\r\n  }\r\n  const novoEstado: EstadoIncremental = {\r\n    versao: config.ANALISE_INCREMENTAL_VERSION,\r\n    arquivos: {},\r\n    estatisticas: { totalReaproveitamentos: 0, totalArquivosProcessados: 0, ultimaDuracaoMs: 0 },\r\n  };\r\n\r\n  function hashConteudo(c: string) {\r\n    try {\r\n      // Usa xxhash64 (seed arbitrária) para performance\r\n      return XXH.h64(c, 0xabcd).toString(16);\r\n    } catch {\r\n      // Fallback para sha1 se algo der errado\r\n      return crypto.createHash('sha1').update(c).digest('hex');\r\n    }\r\n  }\r\n\r\n  // Técnicas globais\r\n  for (const tecnica of tecnicas) {\r\n    if (tecnica.global) {\r\n      // início medido apenas por analista específico (inicioAnalista)\r\n      const timeoutMs = config.ANALISE_TIMEOUT_POR_ANALISTA_MS;\r\n      try {\r\n        const inicioAnalista = performance.now();\r\n\r\n        // Implementa timeout para analistas globais se configurado\r\n        let resultado: ReturnType<typeof tecnica.aplicar> | undefined;\r\n\r\n        if (timeoutMs > 0) {\r\n          // Promise.race entre execução do analista global e timeout\r\n          const execPromise = tecnica.aplicar('', '', null, undefined, contextoGlobal);\r\n          resultado = await (async () => {\r\n            let timer: NodeJS.Timeout | null = null;\r\n            try {\r\n              const race = Promise.race([\r\n                execPromise,\r\n                new Promise<never>((_, reject) => {\r\n                  timer = setTimeout(\r\n                    () =>\r\n                      reject(\r\n                        new Error(\r\n                          `Timeout: analista global '${tecnica.nome}' excedeu ${timeoutMs}ms`,\r\n                        ),\r\n                      ),\r\n                    timeoutMs,\r\n                  );\r\n                }),\r\n              ]);\r\n              return await race;\r\n            } finally {\r\n              if (timer) clearTimeout(timer);\r\n            }\r\n          })();\r\n        } else {\r\n          // Execução sem timeout\r\n          resultado = await tecnica.aplicar('', '', null, undefined, contextoGlobal);\r\n        }\r\n\r\n        if (resultado) {\r\n          ocorrencias.push(...(Array.isArray(resultado) ? resultado : [resultado]));\r\n        }\r\n        const duracaoMs = performance.now() - inicioAnalista;\r\n        if (config.ANALISE_METRICAS_ENABLED) {\r\n          metricasAnalistas.push({\r\n            nome: tecnica.nome || 'desconhecido',\r\n            duracaoMs,\r\n            ocorrencias: Array.isArray(resultado) ? resultado.length : resultado ? 1 : 0,\r\n            global: true,\r\n          });\r\n        }\r\n        if (opts?.verbose) {\r\n          log.sucesso(`Técnica global \"${tecnica.nome}\"`);\r\n        }\r\n        if (config.LOG_ESTRUTURADO) {\r\n          log.info(\r\n            JSON.stringify({\r\n              tipo: 'analista',\r\n              escopo: 'global',\r\n              nome: tecnica.nome,\r\n              duracaoMs,\r\n              ocorrencias: metricasAnalistas.at(-1)?.ocorrencias,\r\n            }),\r\n          );\r\n        }\r\n      } catch (error) {\r\n        const err = error as Error;\r\n        const isTimeout = err.message.includes('Timeout: analista global');\r\n        const nivelLog = isTimeout ? 'aviso' : 'erro';\r\n        const prefixo = isTimeout ? '⏰' : '❌';\r\n\r\n        // Log apropriado baseado no tipo de erro\r\n        if (nivelLog === 'aviso') {\r\n          log.aviso(`${prefixo} ${err.message}`);\r\n        } else {\r\n          log.erro(`${prefixo} Erro na técnica global '${tecnica.nome}': ${err.message}`);\r\n          if (err.stack && opts?.verbose) log.info(err.stack);\r\n        }\r\n\r\n        // Registra ocorrência de erro/timeout\r\n        ocorrencias.push(\r\n          ocorrenciaErroAnalista({\r\n            mensagem: isTimeout\r\n              ? `Timeout na técnica global '${tecnica.nome}': ${timeoutMs}ms excedido`\r\n              : `Falha na técnica global '${tecnica.nome}': ${err.message}`,\r\n            relPath: '[execução global]',\r\n            origem: tecnica.nome,\r\n          }),\r\n        );\r\n      }\r\n    }\r\n  }\r\n\r\n  // Técnicas por arquivo\r\n  let arquivoAtual = 0;\r\n  const totalArquivos = fileEntriesComAst.length;\r\n  // Limiar para logs detalhados por arquivo\r\n  const LIMIAR_DETALHE_TOTAL = 100; // até aqui permite detalhar por arquivo\r\n  const LIMIAR_DETALHE_THROTTLED_MAX = 250; // até aqui permite \"Arquivo X/Y\" com throttle\r\n  // Define passo de logging quando em modo verbose para evitar spam massivo\r\n  function passoDeLog(total: number): number {\r\n    // Assumimos faixas: até 100 => cada arquivo; 101-250 => a cada 10; 251-500 => a cada 25; >500 => a cada 100\r\n    if (total <= 100) return 1;\r\n    if (total <= 250) return 10;\r\n    if (total <= 500) return 25;\r\n    return 100;\r\n  }\r\n  const frames = ['->', '=>', '>>', '=>'] as const;\r\n  const stepVerbose = passoDeLog(totalArquivos);\r\n  const detalharPorArquivo = (opts?.verbose ?? false) && totalArquivos <= LIMIAR_DETALHE_TOTAL;\r\n  const permitirArquivoXY =\r\n    (opts?.verbose ?? false) && totalArquivos <= LIMIAR_DETALHE_THROTTLED_MAX;\r\n  for (const entry of fileEntriesComAst) {\r\n    arquivoAtual++;\r\n    if (opts?.compact) {\r\n      if (arquivoAtual === totalArquivos) {\r\n        log.info(`Arquivos analisados: ${totalArquivos}`);\r\n      }\r\n    } else if (opts?.verbose) {\r\n      // Em verbose: detalha por arquivo somente até o limiar; entre 101-250 mostra \"Arquivo X/Y\" com throttle; acima disso, só resumo de progresso.\r\n      if (permitirArquivoXY) {\r\n        if (\r\n          arquivoAtual === 1 ||\r\n          arquivoAtual % stepVerbose === 0 ||\r\n          arquivoAtual === totalArquivos\r\n        ) {\r\n          const seta = frames[arquivoAtual % frames.length];\r\n          log.info(`${seta} Arquivo ${arquivoAtual}/${totalArquivos}: ${entry.relPath}`);\r\n        }\r\n      } else {\r\n        if (\r\n          arquivoAtual === 1 ||\r\n          arquivoAtual % stepVerbose === 0 ||\r\n          arquivoAtual === totalArquivos\r\n        ) {\r\n          log.info(`Arquivos analisados: ${arquivoAtual}/${totalArquivos}`);\r\n        }\r\n      }\r\n    } else if (arquivoAtual % 10 === 0 || arquivoAtual === totalArquivos) {\r\n      if (arquivoAtual === totalArquivos) {\r\n        __infoD(`Arquivos analisados: ${arquivoAtual}/${totalArquivos}`);\r\n      } else {\r\n        log.info(`Arquivos analisados: ${arquivoAtual}/${totalArquivos}`);\r\n      }\r\n    }\r\n    // Verifica incremento\r\n    const conteudo = entry.content ?? '';\r\n    const h = hashConteudo(conteudo);\r\n    const cacheAnterior = estadoIncremental?.arquivos[entry.relPath];\r\n    let reaproveitou = false;\r\n    if (config.ANALISE_INCREMENTAL_ENABLED && cacheAnterior && cacheAnterior.hash === h) {\r\n      // Reaproveita ocorrências anteriores do arquivo\r\n      ocorrencias.push(...cacheAnterior.ocorrencias);\r\n      novoEstado.arquivos[entry.relPath] = cacheAnterior; // mantém\r\n      novoEstado.arquivos[entry.relPath].reaproveitadoCount =\r\n        (cacheAnterior.reaproveitadoCount || 0) + 1;\r\n      if (novoEstado.estatisticas) {\r\n        novoEstado.estatisticas.totalReaproveitamentos =\r\n          (novoEstado.estatisticas.totalReaproveitamentos || 0) + 1;\r\n      }\r\n      reaproveitou = true;\r\n      if (detalharPorArquivo) log.info(`♻️ Reaproveitado ${entry.relPath} (incremental)`);\r\n      if (config.LOG_ESTRUTURADO) {\r\n        log.info(\r\n          JSON.stringify({\r\n            tipo: 'incremental-reuse',\r\n            arquivo: entry.relPath,\r\n            ocorrencias: cacheAnterior.ocorrencias.length,\r\n          }),\r\n        );\r\n      }\r\n    }\r\n    if (reaproveitou) continue; // pula analistas\r\n\r\n    for (const tecnica of tecnicas) {\r\n      if (tecnica.global) continue;\r\n      if (tecnica.test && !tecnica.test(entry.relPath)) continue;\r\n\r\n      // início medido apenas por analista específico (inicioAnalista)\r\n      const timeoutMs = config.ANALISE_TIMEOUT_POR_ANALISTA_MS;\r\n      try {\r\n        const inicioAnalista = performance.now();\r\n\r\n        // Implementa timeout por analista se configurado\r\n        let resultado: ReturnType<typeof tecnica.aplicar> | undefined;\r\n\r\n        if (timeoutMs > 0) {\r\n          // Promise.race entre execução do analista e timeout\r\n          const execPromise = tecnica.aplicar(\r\n            entry.content ?? '',\r\n            entry.relPath,\r\n            entry.ast ?? null,\r\n            entry.fullPath,\r\n            contextoGlobal,\r\n          );\r\n          resultado = await (async () => {\r\n            let timer: NodeJS.Timeout | null = null;\r\n            try {\r\n              const race = Promise.race([\r\n                execPromise,\r\n                new Promise<never>((_, reject) => {\r\n                  timer = setTimeout(\r\n                    () =>\r\n                      reject(\r\n                        new Error(\r\n                          `Timeout: analista '${tecnica.nome}' excedeu ${timeoutMs}ms para ${entry.relPath}`,\r\n                        ),\r\n                      ),\r\n                    timeoutMs,\r\n                  );\r\n                }),\r\n              ]);\r\n              return await race;\r\n            } finally {\r\n              if (timer) clearTimeout(timer);\r\n            }\r\n          })();\r\n        } else {\r\n          // Execução sem timeout\r\n          resultado = await tecnica.aplicar(\r\n            entry.content ?? '',\r\n            entry.relPath,\r\n            entry.ast ?? null,\r\n            entry.fullPath,\r\n            contextoGlobal,\r\n          );\r\n        }\r\n\r\n        if (resultado) {\r\n          const arr = Array.isArray(resultado) ? resultado : [resultado];\r\n          ocorrencias.push(...arr);\r\n        }\r\n        const duracaoMs = performance.now() - inicioAnalista;\r\n        if (config.ANALISE_METRICAS_ENABLED) {\r\n          metricasAnalistas.push({\r\n            nome: tecnica.nome || 'desconhecido',\r\n            duracaoMs,\r\n            ocorrencias: Array.isArray(resultado) ? resultado.length : resultado ? 1 : 0,\r\n            global: false,\r\n          });\r\n        }\r\n        if (detalharPorArquivo) {\r\n          log.info(`📄 '${tecnica.nome}' analisou ${entry.relPath} em ${formatMs(duracaoMs)}`);\r\n        }\r\n        if (config.LOG_ESTRUTURADO) {\r\n          log.info(\r\n            JSON.stringify({\r\n              tipo: 'analista',\r\n              arquivo: entry.relPath,\r\n              nome: tecnica.nome,\r\n              duracaoMs,\r\n              ocorrencias: metricasAnalistas.at(-1)?.ocorrencias,\r\n            }),\r\n          );\r\n        }\r\n      } catch (error) {\r\n        const err = error as Error;\r\n        const isTimeout = err.message.includes('Timeout: analista');\r\n        const nivelLog = isTimeout ? 'aviso' : 'erro';\r\n        const prefixo = isTimeout ? '⏰' : '❌';\r\n\r\n        // Log apropriado baseado no tipo de erro\r\n        if (nivelLog === 'aviso') {\r\n          log.aviso(`${prefixo} ${err.message}`);\r\n        } else {\r\n          log.erro(`${prefixo} Erro em '${tecnica.nome}' para ${entry.relPath}: ${err.message}`);\r\n          if (err.stack && opts?.verbose) log.info(err.stack);\r\n        }\r\n\r\n        // Registra ocorrência de erro/timeout\r\n        ocorrencias.push(\r\n          ocorrenciaErroAnalista({\r\n            mensagem: isTimeout\r\n              ? `Timeout na técnica '${tecnica.nome}' para ${entry.relPath}: ${timeoutMs}ms excedido`\r\n              : `Falha na técnica '${tecnica.nome}' para ${entry.relPath}: ${err.message}`,\r\n            relPath: entry.relPath,\r\n            origem: tecnica.nome,\r\n          }),\r\n        );\r\n      }\r\n    }\r\n    // Salva estado incremental do arquivo processado\r\n    if (config.ANALISE_INCREMENTAL_ENABLED) {\r\n      const ocorrArq = ocorrencias.filter((o) => o.relPath === entry.relPath);\r\n      // Extrai métricas por analista específicas do arquivo\r\n      const analistasArquivo: Record<string, { ocorrencias: number; duracaoMs: number }> = {};\r\n      for (const m of metricasAnalistas.filter((m) => !m.global)) {\r\n        analistasArquivo[m.nome] = { ocorrencias: m.ocorrencias, duracaoMs: m.duracaoMs };\r\n      }\r\n      novoEstado.arquivos[entry.relPath] = {\r\n        hash: h,\r\n        ocorrencias: ocorrArq,\r\n        analistas: analistasArquivo,\r\n        ultimaExecucaoMs: Date.now(),\r\n        reaproveitadoCount: 0,\r\n      };\r\n      if (novoEstado.estatisticas) {\r\n        novoEstado.estatisticas.totalArquivosProcessados =\r\n          (novoEstado.estatisticas.totalArquivosProcessados || 0) + 1;\r\n      }\r\n    }\r\n  }\r\n\r\n  const fimExecucao = performance.now();\r\n  const duracaoMs = Math.round(fimExecucao - inicioExecucao);\r\n\r\n  // Agregação de métricas\r\n  let metricasExecucao: MetricaExecucao | null = null;\r\n  if (config.ANALISE_METRICAS_ENABLED) {\r\n    interface MetricasGlobais {\r\n      parsingTimeMs: number;\r\n      cacheHits: number;\r\n      cacheMiss: number;\r\n    }\r\n    const metricasGlobais: MetricasGlobais = ((globalThis as unknown as Record<string, unknown>)\r\n      .__ORACULO_METRICAS__ as MetricasGlobais) || { parsingTimeMs: 0, cacheHits: 0, cacheMiss: 0 };\r\n    metricasExecucao = {\r\n      totalArquivos: fileEntriesComAst.length,\r\n      tempoParsingMs: Math.round(metricasGlobais.parsingTimeMs),\r\n      tempoAnaliseMs: duracaoMs,\r\n      cacheAstHits: metricasGlobais.cacheHits,\r\n      cacheAstMiss: metricasGlobais.cacheMiss,\r\n      analistas: metricasAnalistas,\r\n    };\r\n    if (config.LOG_ESTRUTURADO) {\r\n      log.info(JSON.stringify({ tipo: 'metricas', ...metricasExecucao }));\r\n    }\r\n    // Persistir histórico\r\n    try {\r\n      const historicoPath = config.ANALISE_METRICAS_HISTORICO_PATH as string | undefined;\r\n      if (historicoPath) {\r\n        type RegistroHistorico = MetricaExecucao & { timestamp: number };\r\n        let anterior = await lerEstado<unknown>(historicoPath).catch(\r\n          () => [] as RegistroHistorico[],\r\n        );\r\n        const lista = Array.isArray(anterior) ? (anterior as RegistroHistorico[]) : [];\r\n        lista.push({ ...metricasExecucao, timestamp: Date.now() });\r\n        const max = config.ANALISE_METRICAS_HISTORICO_MAX || 200;\r\n        const recortado = lista.slice(-max);\r\n        await salvarEstado(historicoPath, recortado);\r\n      }\r\n    } catch (e) {\r\n      // Sempre registra em DEV e também em execução normal para visibilidade dos testes\r\n      log.erro(`Falha ao persistir histórico de métricas: ${(e as Error).message}`);\r\n    }\r\n  }\r\n\r\n  // Persistir incremental\r\n  if (config.ANALISE_INCREMENTAL_ENABLED) {\r\n    if (novoEstado.estatisticas) {\r\n      novoEstado.estatisticas.ultimaDuracaoMs = duracaoMs;\r\n    }\r\n    await salvarEstado(config.ANALISE_INCREMENTAL_STATE_PATH, novoEstado);\r\n    if (config.LOG_ESTRUTURADO) {\r\n      log.info(\r\n        JSON.stringify({\r\n          tipo: 'incremental-salvo',\r\n          arquivos: Object.keys(novoEstado.arquivos).length,\r\n          totalReaproveitamentos: novoEstado.estatisticas?.totalReaproveitamentos,\r\n          processados: novoEstado.estatisticas?.totalArquivosProcessados,\r\n        }),\r\n      );\r\n    }\r\n  }\r\n\r\n  return {\r\n    totalArquivos: fileEntriesComAst.length,\r\n    arquivosAnalisados: fileEntriesComAst.map((e) => e.relPath),\r\n    ocorrencias,\r\n    timestamp: Date.now(),\r\n    duracaoMs,\r\n    metricas: metricasExecucao || undefined,\r\n  };\r\n}\r\n\r\n// Hook simples para expor última métrica de execução (consumido por comando perf baseline)\r\nexport function registrarUltimasMetricas(metricas: MetricaExecucao | undefined) {\r\n  try {\r\n    (\r\n      globalThis as unknown as { __ULTIMAS_METRICAS_ORACULO__?: MetricaExecucao | null }\r\n    ).__ULTIMAS_METRICAS_ORACULO__ = metricas || null;\r\n  } catch {\r\n    /* ignore */\r\n  }\r\n}\r\n"]}