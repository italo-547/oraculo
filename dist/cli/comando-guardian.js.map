{"version":3,"file":"comando-guardian.js","sourceRoot":"","sources":["../../src/cli/comando-guardian.ts"],"names":[],"mappings":"AAAA,+BAA+B;AAC/B,OAAO,KAAK,MAAM,qCAAqC,CAAC;AACxD,OAAO,EAAE,OAAO,EAAE,MAAM,WAAW,CAAC;AAGpC,OAAO,EAAE,iBAAiB,EAAE,MAAM,mBAAmB,CAAC;AAEtD,OAAO,EAAE,iBAAiB,EAAE,mBAAmB,EAAE,MAAM,0BAA0B,CAAC;AAClF,OAAO,EAAE,MAAM,EAAE,MAAM,iCAAiC,CAAC;AACzD,OAAO,EAAE,GAAG,EAAE,MAAM,8BAA8B,CAAC;AACnD,OAAO,EAAE,iBAAiB,EAAE,MAAM,yBAAyB,CAAC;AAE5D,MAAM,UAAU,eAAe,CAAC,mBAA4D;IAC1F,OAAO,CACL,IAAI,OAAO,CAAC,UAAU,CAAC;SACpB,WAAW,CAAC,2DAA2D,CAAC;QACzE,sEAAsE;SACrE,kBAAkB,CAAC,IAAI,CAAC;SACxB,oBAAoB,CAAC,IAAI,CAAC;SAC1B,MAAM,CACL,uBAAuB,EACvB,6DAA6D,CAC9D;SACA,MAAM,CAAC,YAAY,EAAE,wDAAwD,CAAC;SAC9E,MAAM,CACL,aAAa,EACb,mFAAmF,CACpF;SACA,MAAM,CAAC,QAAQ,EAAE,iDAAiD,CAAC;SACnE,MAAM,CAAC,KAAK,WAEX,IAAsF;QAEtF,mBAAmB,CACjB,IAAI,CAAC,MAAM,IAAI,OAAO,IAAI,CAAC,MAAM,CAAC,IAAI,KAAK,UAAU,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,EAAE,CAChF,CAAC;QAEF,MAAM,OAAO,GAAG,OAAO,CAAC,GAAG,EAAE,CAAC;QAC9B,IAAI,WAAW,GAAuB,EAAE,CAAC;QAEzC,IAAI,CAAC;YACH,MAAM,mBAAmB,GAAG,MAAM,iBAAiB,CAAC,OAAO,EAAE,EAAE,gBAAgB,EAAE,KAAK,EAAE,CAAC,CAAC;YAC1F,WAAW,GAAG,mBAAmB,CAAC,WAAW,CAAC;YAC9C,MAAM,qBAAqB,GAAI,MAAkD;iBAC9E,wBAAwB,CAAC;YAC5B,MAAM,kBAAkB,GAAG,KAAK,CAAC,OAAO,CAAC,qBAAqB,CAAC;gBAC7D,CAAC,CAAC,CAAC,GAAG,qBAAqB,CAAC;gBAC5B,CAAC,CAAC,EAAE,CAAC;YACP,IAAI,IAAI,CAAC,QAAQ,EAAE,CAAC;gBAClB,+CAA+C;gBAC9C,MAA4D,CAAC,wBAAwB;oBACpF,EAAE,CAAC;gBACL,IAAI,CAAC,IAAI,CAAC,cAAc,EAAE,CAAC;oBACzB,GAAG,CAAC,KAAK,CAAC,0EAA0E,CAAC,CAAC;gBACxF,CAAC;YACH,CAAC;YAED,IAAI,IAAI,CAAC,cAAc,EAAE,CAAC;gBACxB,IAAI,IAAI,CAAC,QAAQ,EAAE,CAAC;oBAClB,GAAG,CAAC,KAAK,CACP,kFAAkF,CACnF,CAAC;oBAEA,MACD,CAAC,wBAAwB,GAAG,kBAAkB,CAAC;oBAChD,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;gBAClB,CAAC;gBACD,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,kDAAkD,CAAC,CAAC,CAAC;gBACzE,MAAM,iBAAiB,CAAC,WAAW,CAAC,CAAC;gBACrC,IAAI,IAAI,CAAC,IAAI,EAAE,CAAC;oBACd,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,MAAM,EAAE,iBAAiB,CAAC,MAAM,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC;gBACpF,CAAC;qBAAM,CAAC;oBACN,GAAG,CAAC,OAAO,CAAC,qDAAqD,CAAC,CAAC;gBACrE,CAAC;YACH,CAAC;iBAAM,IAAI,IAAI,CAAC,IAAI,EAAE,CAAC;gBACrB,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,4DAA4D,CAAC,CAAC,CAAC;gBACnF,MAAM,UAAU,GAAG,MAAM,mBAAmB,CAAC,WAAW,EAAE;oBACxD,QAAQ,EAAE,IAAI;oBACd,YAAY,EAAE,IAAI,CAAC,IAAI;iBACxB,CAAC,CAAC;gBACH,MAAM,UAAU,GAAG,MAAM,CACtB,UAAyC,EAAE,MAAM,IAAI,EAAE,CACzD,CAAC,WAAW,EAAE,CAAC;gBAChB,MAAM,UAAU,GACd,UAAU,KAAK,MAAM,CAAC,iBAAiB,CAAC,oBAAoB,CAAC,CAAC,WAAW,EAAE;oBAC3E,UAAU,CAAC,QAAQ,CAAC,SAAS,CAAC;oBAC9B,UAAU,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC;gBACjC,IAAI,UAAU,IAAI,UAAU,CAAC,QAAQ,IAAI,UAAU,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC;oBACpE,IAAI,IAAI,CAAC,IAAI,EAAE,CAAC;wBACd,OAAO,CAAC,GAAG,CACT,IAAI,CAAC,SAAS,CAAC;4BACb,MAAM,EAAE,uBAAuB;4BAC/B,QAAQ,EAAE,UAAU,CAAC,QAAQ;yBAC9B,CAAC,CACH,CAAC;oBACJ,CAAC;yBAAM,CAAC;wBACN,GAAG,CAAC,KAAK,CAAC,2BAA2B,CAAC,CAAC;wBACvC,UAAU,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAC,CAAS,EAAE,EAAE;4BACzC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;wBACvB,CAAC,CAAC,CAAC;wBACH,GAAG,CAAC,KAAK,CACP,2EAA2E,CAC5E,CAAC;oBACJ,CAAC;oBACD,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;gBAClB,CAAC;qBAAM,CAAC;oBACN,IAAI,IAAI,CAAC,IAAI,EAAE,CAAC;wBACd,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,MAAM,EAAE,IAAI,EAAE,QAAQ,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC;oBAC9D,CAAC;yBAAM,CAAC;wBACN,GAAG,CAAC,OAAO,CAAC,wDAAwD,CAAC,CAAC;oBACxE,CAAC;gBACH,CAAC;YACH,CAAC;iBAAM,CAAC;gBACN,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,+CAA+C,CAAC,CAAC,CAAC;gBACtE,MAAM,iBAAiB,GAAG,MAAM,mBAAmB,CAAC,WAAW,EAAE;oBAC/D,YAAY,EAAE,IAAI,CAAC,IAAI;iBACxB,CAAC,CAAC;gBACH,MAAM,SAAS,GAAG,MAAM,CACrB,iBAAgD,EAAE,MAAM,IAAI,EAAE,CAChE,CAAC,WAAW,EAAE,CAAC;gBAChB,MAAM,UAAU,GAAG,CAAC,GAAG,EAAE;oBACvB,IAAI,SAAS,KAAK,MAAM,CAAC,iBAAiB,CAAC,EAAE,CAAC,CAAC,WAAW,EAAE,IAAI,SAAS,KAAK,IAAI;wBAChF,OAAO,iBAAiB,CAAC,EAAE,CAAC;oBAC9B,IACE,SAAS,KAAK,MAAM,CAAC,iBAAiB,CAAC,MAAM,CAAC,CAAC,WAAW,EAAE;wBAC5D,SAAS,CAAC,QAAQ,CAAC,iBAAiB,CAAC;wBAErC,OAAO,iBAAiB,CAAC,MAAM,CAAC;oBAClC,IACE,SAAS,KAAK,MAAM,CAAC,iBAAiB,CAAC,MAAM,CAAC,CAAC,WAAW,EAAE;wBAC5D,SAAS,CAAC,QAAQ,CAAC,iBAAiB,CAAC;wBAErC,OAAO,iBAAiB,CAAC,MAAM,CAAC;oBAClC,IACE,SAAS,KAAK,MAAM,CAAC,iBAAiB,CAAC,oBAAoB,CAAC,CAAC,WAAW,EAAE;wBAC1E,SAAS,CAAC,QAAQ,CAAC,SAAS,CAAC;wBAE7B,OAAO,iBAAiB,CAAC,oBAAoB,CAAC;oBAChD,OAAO,iBAAiB,CAAC,EAAE,CAAC;gBAC9B,CAAC,CAAC,EAAE,CAAC;gBACL,QAAQ,UAAU,EAAE,CAAC;oBACnB,KAAK,iBAAiB,CAAC,EAAE;wBACvB,IAAI,IAAI,CAAC,IAAI;4BACX,OAAO,CAAC,GAAG,CACT,IAAI,CAAC,SAAS,CAAC;gCACb,MAAM,EAAE,IAAI;gCACZ,aAAa,EACV,UAAkE;qCAChE,2BAA2B,IAAI,CAAC;6BACtC,CAAC,CACH,CAAC;;4BACC,GAAG,CAAC,OAAO,CAAC,sCAAsC,CAAC,CAAC;wBACzD,MAAM;oBACR,KAAK,iBAAiB,CAAC,MAAM;wBAC3B,IAAI,IAAI,CAAC,IAAI;4BACX,OAAO,CAAC,GAAG,CACT,IAAI,CAAC,SAAS,CAAC;gCACb,MAAM,EAAE,iBAAiB;gCACzB,aAAa,EACV,UAAkE;qCAChE,2BAA2B,IAAI,CAAC;6BACtC,CAAC,CACH,CAAC;;4BACC,GAAG,CAAC,IAAI,CAAC,6BAA6B,CAAC,CAAC;wBAC7C,GAAG,CAAC,KAAK,CACP,kGAAkG,CACnG,CAAC;wBACF,MAAM;oBACR,KAAK,iBAAiB,CAAC,MAAM;wBAC3B,IAAI,IAAI,CAAC,IAAI;4BACX,OAAO,CAAC,GAAG,CACT,IAAI,CAAC,SAAS,CAAC;gCACb,MAAM,EAAE,iBAAiB;gCACzB,aAAa,EACV,UAAkE;qCAChE,2BAA2B,IAAI,CAAC;6BACtC,CAAC,CACH,CAAC;;4BACC,GAAG,CAAC,OAAO,CAAC,2CAA2C,CAAC,CAAC;wBAC9D,MAAM;oBACR,KAAK,iBAAiB,CAAC,oBAAoB,CAAC,CAAC,CAAC;wBAC5C,IAAI,IAAI,CAAC,IAAI,EAAE,CAAC;4BACd,OAAO,CAAC,GAAG,CACT,IAAI,CAAC,SAAS,CAAC;gCACb,MAAM,EAAE,uBAAuB;gCAC/B,aAAa,EACV,UAAkE;qCAChE,2BAA2B,IAAI,CAAC;6BACtC,CAAC,CACH,CAAC;wBACJ,CAAC;6BAAM,CAAC;4BACN,GAAG,CAAC,KAAK,CAAC,+CAA+C,CAAC,CAAC;wBAC7D,CAAC;wBACD,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;oBAClB,CAAC;gBACH,CAAC;YACH,CAAC;YACD,IAAI,IAAI,CAAC,QAAQ,EAAE,CAAC;gBAClB,2CAA2C;gBAC1C,MAA4D,CAAC,wBAAwB;oBACpF,kBAAkB,CAAC;YACvB,CAAC;QACH,CAAC;QAAC,OAAO,GAAG,EAAE,CAAC;YACb,GAAG,CAAC,IAAI,CAAC,uBAAwB,GAAa,CAAC,OAAO,IAAI,MAAM,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;YACzE,IAAI,MAAM,CAAC,QAAQ;gBAAE,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;YACxC,IAAI,IAAI,CAAC,IAAI;gBACX,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,MAAM,EAAE,MAAM,EAAE,QAAQ,EAAG,GAAa,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC;YACpF,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QAClB,CAAC;IACH,CAAC,CAAC,CACL,CAAC;AACJ,CAAC","sourcesContent":["// SPDX-License-Identifier: MIT\r\nimport chalk from '../nucleo/constelacao/chalk-safe.js';\r\nimport { Command } from 'commander';\r\n\r\nimport type { FileEntryWithAst } from '../tipos/tipos.js';\r\nimport { IntegridadeStatus } from '../tipos/tipos.js';\r\n\r\nimport { acceptNewBaseline, scanSystemIntegrity } from '../guardian/sentinela.js';\r\nimport { config } from '../nucleo/constelacao/cosmos.js';\r\nimport { log } from '../nucleo/constelacao/log.js';\r\nimport { iniciarInquisicao } from '../nucleo/inquisidor.js';\r\n\r\nexport function comandoGuardian(aplicarFlagsGlobais: (opts: Record<string, unknown>) => void) {\r\n  return (\r\n    new Command('guardian')\r\n      .description('Gerencia e verifica a integridade do ambiente do Or√°culo.')\r\n      // Alinhar com comportamento tolerante usado em outros comandos/testes\r\n      .allowUnknownOption(true)\r\n      .allowExcessArguments(true)\r\n      .option(\r\n        '-a, --accept-baseline',\r\n        'Aceita o baseline atual como o novo baseline de integridade',\r\n      )\r\n      .option('-d, --diff', 'Mostra as diferen√ßas entre o estado atual e o baseline')\r\n      .option(\r\n        '--full-scan',\r\n        'Executa verifica√ß√£o sem aplicar GUARDIAN_IGNORE_PATTERNS (n√£o persistir baseline)',\r\n      )\r\n      .option('--json', 'Sa√≠da em JSON estruturado (para CI/integracoes)')\r\n      .action(async function (\r\n        this: Command,\r\n        opts: { acceptBaseline?: boolean; diff?: boolean; fullScan?: boolean; json?: boolean },\r\n      ) {\r\n        aplicarFlagsGlobais(\r\n          this.parent && typeof this.parent.opts === 'function' ? this.parent.opts() : {},\r\n        );\r\n\r\n        const baseDir = process.cwd();\r\n        let fileEntries: FileEntryWithAst[] = [];\r\n\r\n        try {\r\n          const resultadoInquisicao = await iniciarInquisicao(baseDir, { incluirMetadados: false });\r\n          fileEntries = resultadoInquisicao.fileEntries;\r\n          const ignoradosOriginaisRaw = (config as { GUARDIAN_IGNORE_PATTERNS?: string[] })\r\n            .GUARDIAN_IGNORE_PATTERNS;\r\n          const ignoradosOriginais = Array.isArray(ignoradosOriginaisRaw)\r\n            ? [...ignoradosOriginaisRaw]\r\n            : [];\r\n          if (opts.fullScan) {\r\n            // Temporariamente desabilita padr√µes ignorados\r\n            (config as unknown as { GUARDIAN_IGNORE_PATTERNS: string[] }).GUARDIAN_IGNORE_PATTERNS =\r\n              [];\r\n            if (!opts.acceptBaseline) {\r\n              log.aviso('‚ö†Ô∏è --full-scan ativo: baseline N√ÉO ser√° persistido com escopo expandido.');\r\n            }\r\n          }\r\n\r\n          if (opts.acceptBaseline) {\r\n            if (opts.fullScan) {\r\n              log.aviso(\r\n                'üö´ N√£o √© permitido aceitar baseline em modo --full-scan. Remova a flag e repita.',\r\n              );\r\n              (\r\n                config as unknown as { GUARDIAN_IGNORE_PATTERNS: string[] }\r\n              ).GUARDIAN_IGNORE_PATTERNS = ignoradosOriginais;\r\n              process.exit(1);\r\n            }\r\n            log.info(chalk.bold('\\nüîÑ Aceitando novo baseline de integridade...\\n'));\r\n            await acceptNewBaseline(fileEntries);\r\n            if (opts.json) {\r\n              console.log(JSON.stringify({ status: IntegridadeStatus.Aceito, baseline: true }));\r\n            } else {\r\n              log.sucesso('üîí Novo baseline de integridade aceito com sucesso!');\r\n            }\r\n          } else if (opts.diff) {\r\n            log.info(chalk.bold('\\nüìä Comparando integridade do Or√°culo com o baseline...\\n'));\r\n            const diffResult = await scanSystemIntegrity(fileEntries, {\r\n              justDiff: true,\r\n              suppressLogs: opts.json,\r\n            });\r\n            const statusDiff = String(\r\n              (diffResult as { status?: string } | null)?.status || '',\r\n            ).toLowerCase();\r\n            const alteracoes =\r\n              statusDiff === String(IntegridadeStatus.AlteracoesDetectadas).toLowerCase() ||\r\n              statusDiff.includes('alterac') ||\r\n              statusDiff.includes('diferen');\r\n            if (alteracoes && diffResult.detalhes && diffResult.detalhes.length) {\r\n              if (opts.json) {\r\n                console.log(\r\n                  JSON.stringify({\r\n                    status: 'alteracoes-detectadas',\r\n                    detalhes: diffResult.detalhes,\r\n                  }),\r\n                );\r\n              } else {\r\n                log.aviso('üö® Diferen√ßas detectadas:');\r\n                diffResult.detalhes?.forEach((d: string) => {\r\n                  log.info(`  - ${d}`);\r\n                });\r\n                log.aviso(\r\n                  'Execute `oraculo guardian --accept-baseline` para aceitar essas mudan√ßas.',\r\n                );\r\n              }\r\n              process.exit(1);\r\n            } else {\r\n              if (opts.json) {\r\n                console.log(JSON.stringify({ status: 'ok', detalhes: [] }));\r\n              } else {\r\n                log.sucesso('‚úÖ Nenhuma diferen√ßa detectada. Integridade preservada.');\r\n              }\r\n            }\r\n          } else {\r\n            log.info(chalk.bold('\\nüõ°Ô∏è Verificando integridade do Or√°culo...\\n'));\r\n            const guardianResultado = await scanSystemIntegrity(fileEntries, {\r\n              suppressLogs: opts.json,\r\n            });\r\n            const statusRaw = String(\r\n              (guardianResultado as { status?: string } | null)?.status || '',\r\n            ).toLowerCase();\r\n            const statusNorm = (() => {\r\n              if (statusRaw === String(IntegridadeStatus.Ok).toLowerCase() || statusRaw === 'ok')\r\n                return IntegridadeStatus.Ok;\r\n              if (\r\n                statusRaw === String(IntegridadeStatus.Criado).toLowerCase() ||\r\n                statusRaw.includes('baseline-criado')\r\n              )\r\n                return IntegridadeStatus.Criado;\r\n              if (\r\n                statusRaw === String(IntegridadeStatus.Aceito).toLowerCase() ||\r\n                statusRaw.includes('baseline-aceito')\r\n              )\r\n                return IntegridadeStatus.Aceito;\r\n              if (\r\n                statusRaw === String(IntegridadeStatus.AlteracoesDetectadas).toLowerCase() ||\r\n                statusRaw.includes('alterac')\r\n              )\r\n                return IntegridadeStatus.AlteracoesDetectadas;\r\n              return IntegridadeStatus.Ok;\r\n            })();\r\n            switch (statusNorm) {\r\n              case IntegridadeStatus.Ok:\r\n                if (opts.json)\r\n                  console.log(\r\n                    JSON.stringify({\r\n                      status: 'ok',\r\n                      cacheDiffHits:\r\n                        (globalThis as unknown as { __ORACULO_DIFF_CACHE_HITS__?: number })\r\n                          .__ORACULO_DIFF_CACHE_HITS__ || 0,\r\n                    }),\r\n                  );\r\n                else log.sucesso('üîí Guardian: integridade preservada.');\r\n                break;\r\n              case IntegridadeStatus.Criado:\r\n                if (opts.json)\r\n                  console.log(\r\n                    JSON.stringify({\r\n                      status: 'baseline-criado',\r\n                      cacheDiffHits:\r\n                        (globalThis as unknown as { __ORACULO_DIFF_CACHE_HITS__?: number })\r\n                          .__ORACULO_DIFF_CACHE_HITS__ || 0,\r\n                    }),\r\n                  );\r\n                else log.info('üìò Guardian baseline criado');\r\n                log.aviso(\r\n                  'Execute `oraculo guardian --accept-baseline` para aceit√°-lo ou `oraculo diagnosticar` novamente.',\r\n                );\r\n                break;\r\n              case IntegridadeStatus.Aceito:\r\n                if (opts.json)\r\n                  console.log(\r\n                    JSON.stringify({\r\n                      status: 'baseline-aceito',\r\n                      cacheDiffHits:\r\n                        (globalThis as unknown as { __ORACULO_DIFF_CACHE_HITS__?: number })\r\n                          .__ORACULO_DIFF_CACHE_HITS__ || 0,\r\n                    }),\r\n                  );\r\n                else log.sucesso('üåÄ Guardian: baseline atualizado e aceito');\r\n                break;\r\n              case IntegridadeStatus.AlteracoesDetectadas: {\r\n                if (opts.json) {\r\n                  console.log(\r\n                    JSON.stringify({\r\n                      status: 'alteracoes-detectadas',\r\n                      cacheDiffHits:\r\n                        (globalThis as unknown as { __ORACULO_DIFF_CACHE_HITS__?: number })\r\n                          .__ORACULO_DIFF_CACHE_HITS__ || 0,\r\n                    }),\r\n                  );\r\n                } else {\r\n                  log.aviso('üö® Guardian: altera√ß√µes suspeitas detectadas!');\r\n                }\r\n                process.exit(1);\r\n              }\r\n            }\r\n          }\r\n          if (opts.fullScan) {\r\n            // Restaura padr√µes originais ap√≥s execu√ß√£o\r\n            (config as unknown as { GUARDIAN_IGNORE_PATTERNS: string[] }).GUARDIAN_IGNORE_PATTERNS =\r\n              ignoradosOriginais;\r\n          }\r\n        } catch (err) {\r\n          log.erro(`‚ùå Erro no Guardian: ${(err as Error).message ?? String(err)}`);\r\n          if (config.DEV_MODE) console.error(err);\r\n          if (opts.json)\r\n            console.log(JSON.stringify({ status: 'erro', mensagem: (err as Error).message }));\r\n          process.exit(1);\r\n        }\r\n      })\r\n  );\r\n}\r\n"]}