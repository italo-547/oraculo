{"version":3,"file":"comando-podar.js","sourceRoot":"","sources":["../../src/cli/comando-podar.ts"],"names":[],"mappings":"AAAA,+BAA+B;AAC/B,OAAO,EAAE,OAAO,EAAE,MAAM,WAAW,CAAC;AAIpC,OAAO,KAAK,MAAM,mCAAmC,CAAC;AACtD,OAAO,EAAE,MAAM,EAAE,MAAM,+BAA+B,CAAC;AACvD,OAAO,EAAE,GAAG,EAAE,MAAM,4BAA4B,CAAC;AACjD,OAAO,EAAE,iBAAiB,EAAE,MAAM,uBAAuB,CAAC;AAC1D,OAAO,EAAE,qBAAqB,EAAE,MAAM,oBAAoB,CAAC;AAC3D,OAAO,IAAI,MAAM,WAAW,CAAC;AAC7B,OAAO,EAAE,sBAAsB,EAAE,0BAA0B,EAAE,MAAM,+BAA+B,CAAC;AAEnG,MAAM,UAAU,YAAY,CAAC,mBAA4D;IACvF,OAAO,IAAI,OAAO,CAAC,OAAO,CAAC;SACxB,WAAW,CAAC,+CAA+C,CAAC;SAC5D,MAAM,CAAC,aAAa,EAAE,4CAA4C,EAAE,KAAK,CAAC;SAC1E,MAAM,CACL,oBAAoB,EACpB,wFAAwF,EACxF,CAAC,GAAW,EAAE,IAAc,EAAE,EAAE;QAC9B,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QACf,OAAO,IAAI,CAAC;IACd,CAAC,EACD,EAAc,CACf;SACA,MAAM,CACL,oBAAoB,EACpB,wFAAwF,EACxF,CAAC,GAAW,EAAE,IAAc,EAAE,EAAE;QAC9B,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QACf,OAAO,IAAI,CAAC;IACd,CAAC,EACD,EAAc,CACf;SACA,MAAM,CAAC,KAAK,WAEX,IAAiE;QAEjE,mBAAmB,CACjB,IAAI,CAAC,MAAM,IAAI,OAAO,IAAI,CAAC,MAAM,CAAC,IAAI,KAAK,UAAU,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,EAAE,CAChF,CAAC;QACF,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,sCAAsC,CAAC,CAAC,CAAC;QAE7D,MAAM,OAAO,GAAG,OAAO,CAAC,GAAG,EAAE,CAAC;QAE9B,IAAI,CAAC;YACH,8EAA8E;YAC9E,MAAM,kBAAkB,GAAG,CAAC,GAAyB,EAAE,EAAE;gBACvD,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM;oBAAE,OAAO,EAAc,CAAC;gBAC/C,OAAO,KAAK,CAAC,IAAI,CACf,IAAI,GAAG,CACL,GAAG;qBACA,OAAO,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;qBACjC,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC;qBACpB,MAAM,CAAC,OAAO,CAAC,CACnB,CACF,CAAC;YACJ,CAAC,CAAC;YACF,MAAM,cAAc,GAAG,CAAC,IAAc,EAAE,EAAE;gBACxC,MAAM,IAAI,GAAG,iBAAiB,CAAC;gBAC/B,MAAM,GAAG,GAAG,IAAI,GAAG,EAAU,CAAC;gBAC9B,KAAK,MAAM,CAAC,IAAI,IAAI,EAAE,CAAC;oBACrB,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;oBACX,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC;wBAClB,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,CAAC,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,GAAG,KAAK,CAAC,CAAC;wBAC3D,IAAI,CAAC,CAAC,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC;4BAAE,GAAG,CAAC,GAAG,CAAC,KAAK,GAAG,CAAC,GAAG,KAAK,CAAC,CAAC;oBACxE,CAAC;gBACH,CAAC;gBACD,OAAO,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;YACzB,CAAC,CAAC;YACF,MAAM,cAAc,GAAG,kBAAkB,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YACxD,MAAM,WAAW,GAAG,cAAc,CAAC,MAAM,CAAC,CAAC,CAAC,cAAc,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;YAChF,MAAM,WAAW,GAAG,kBAAkB,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YACrD,IAAI,WAAW,CAAC,MAAM;gBAAE,MAAM,CAAC,oBAAoB,GAAG,WAAW,CAAC;YAClE,IAAI,WAAW,CAAC,MAAM;gBAAE,MAAM,CAAC,oBAAoB,GAAG,WAAW,CAAC;YAClE,MAAM,iBAAiB,GAAG,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;YAC1E,IAAI,iBAAiB,EAAE,CAAC;gBACtB,MAAM,CAAC,uBAAuB,GAAG,MAAM,CAAC,uBAAuB,CAAC,MAAM,CACpE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,CAAC,CAC/B,CAAC;gBACF,MAAM,CAAC,wBAAwB,GAAG,MAAM,CAAC,wBAAwB,CAAC,MAAM,CACtE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,CAAC,CAC/B,CAAC;YACJ,CAAC;YAED,MAAM,EAAE,WAAW,EAAE,GAAG,MAAM,iBAAiB,CAAC,OAAO,EAAE,EAAE,gBAAgB,EAAE,KAAK,EAAE,CAAC,CAAC;YACtF,MAAM,aAAa,GAAkB,MAAM,qBAAqB,CAAC,WAAW,CAAC,CAAC;YAC9E,IAAI,aAAa,CAAC,cAAc,CAAC,MAAM,KAAK,CAAC,EAAE,CAAC;gBAC9C,GAAG,CAAC,OAAO,CAAC,kDAAkD,CAAC,CAAC;gBAChE,IAAI,MAAM,CAAC,qBAAqB,EAAE,CAAC;oBACjC,IAAI,CAAC;wBACH,MAAM,EAAE,GAAG,IAAI,IAAI,EAAE,CAAC,WAAW,EAAE,CAAC,OAAO,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC;wBAC1D,MAAM,GAAG,GACP,OAAO,MAAM,CAAC,iBAAiB,KAAK,QAAQ;4BAC1C,CAAC,CAAC,MAAM,CAAC,iBAAiB;4BAC1B,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,YAAY,CAAC,CAAC;wBACvC,MAAM,MAAM,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,QAAQ,CAAC,KAAK,CAAC,GAAG,EAAE,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC;wBAClF,MAAM,IAAI,GAAG,gBAAgB,EAAE,EAAE,CAAC;wBAClC,MAAM,0BAA0B,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,IAAI,KAAK,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE;4BACrE,QAAQ,EAAE,CAAC,IAAI,CAAC,KAAK;yBACtB,CAAC,CAAC;wBACH,MAAM,sBAAsB,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,IAAI,OAAO,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;wBACrE,GAAG,CAAC,OAAO,CAAC,uCAAuC,GAAG,EAAE,CAAC,CAAC;oBAC5D,CAAC;oBAAC,OAAO,CAAC,EAAE,CAAC;wBACX,GAAG,CAAC,IAAI,CAAC,yCAA0C,CAAW,CAAC,OAAO,EAAE,CAAC,CAAC;wBAC1E,MAAM,CAAC,CAAC;oBACV,CAAC;gBACH,CAAC;gBACD,OAAO;YACT,CAAC;YAED,GAAG,CAAC,KAAK,CAAC,KAAK,aAAa,CAAC,cAAc,CAAC,MAAM,8BAA8B,CAAC,CAAC;YAClF,aAAa,CAAC,cAAc,CAAC,OAAO,CAAC,CAAC,IAAqB,EAAE,EAAE;gBAC7D,GAAG,CAAC,IAAI,CAAC,KAAK,IAAI,CAAC,OAAO,EAAE,CAAC,CAAC;YAChC,CAAC,CAAC,CAAC;YAEH,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC;gBAChB,MAAM,QAAQ,GAAG,MAAM,MAAM,CAAC,wBAAwB,CAAC,CAAC;gBACxD,MAAM,EAAE,GAAG,QAAQ,CAAC,eAAe,CAAC;oBAClC,KAAK,EAAE,OAAO,CAAC,KAAK;oBACpB,MAAM,EAAE,OAAO,CAAC,MAAM;iBACvB,CAAC,CAAC;gBAEH,MAAM,MAAM,GAAG,MAAM,EAAE,CAAC,QAAQ,CAC9B,KAAK,CAAC,MAAM,CAAC,uDAAuD,CAAC,CACtE,CAAC;gBACF,EAAE,CAAC,KAAK,EAAE,CAAC;gBAEX,sFAAsF;gBACtF,IAAI,MAAM,CAAC,WAAW,EAAE,KAAK,GAAG,EAAE,CAAC;oBACjC,GAAG,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC;oBAC9B,OAAO;gBACT,CAAC;YACH,CAAC;YAED,0BAA0B;YAC1B,yBAAyB;YACzB,IAAI,IAAI,CAAC,KAAK,EAAE,CAAC;gBACf,MAAM,qBAAqB,CAAC,WAAW,CAAC,CAAC;gBACzC,GAAG,CAAC,OAAO,CAAC,0DAA0D,CAAC,CAAC;gBACxE,IAAI,MAAM,CAAC,qBAAqB,EAAE,CAAC;oBACjC,MAAM,EAAE,GAAG,IAAI,IAAI,EAAE,CAAC,WAAW,EAAE,CAAC,OAAO,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC;oBAC1D,MAAM,GAAG,GACP,OAAO,MAAM,CAAC,iBAAiB,KAAK,QAAQ;wBAC1C,CAAC,CAAC,MAAM,CAAC,iBAAiB;wBAC1B,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,YAAY,CAAC,CAAC;oBACvC,MAAM,MAAM,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,QAAQ,CAAC,KAAK,CAAC,GAAG,EAAE,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC;oBAClF,MAAM,IAAI,GAAG,gBAAgB,EAAE,EAAE,CAAC;oBAClC,MAAM,OAAO,GAAG,aAAa,CAAC,cAAc,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;wBACvD,OAAO,EAAE,CAAC,CAAC,OAAO;wBAClB,MAAM,EAAE,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,OAAO;wBAC5C,UAAU,EAAE,IAAI,CAAC,GAAG,EAAE;wBACtB,UAAU,EAAE,IAAI,CAAC,GAAG,EAAE;qBACvB,CAAC,CAAC,CAAC;oBACJ,MAAM,0BAA0B,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,IAAI,KAAK,CAAC,EAAE,OAAO,EAAE,EAAE,EAAE;wBAC1E,QAAQ,EAAE,KAAK;qBAChB,CAAC,CAAC;oBACH,MAAM,sBAAsB,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,IAAI,OAAO,CAAC,EAAE,OAAO,EAAE,EAAE,CAAC,CAAC;oBAC1E,GAAG,CAAC,OAAO,CAAC,uCAAuC,GAAG,EAAE,CAAC,CAAC;gBAC5D,CAAC;YACH,CAAC;QACH,CAAC;QAAC,OAAO,KAAK,EAAE,CAAC;YACf,GAAG,CAAC,IAAI,CACN,0BAA0B,OAAO,KAAK,KAAK,QAAQ,IAAI,KAAK,IAAI,SAAS,IAAI,KAAK,CAAC,CAAC,CAAE,KAA6B,CAAC,OAAO,CAAC,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE,CAC9I,CAAC;YACF,IAAI,MAAM,CAAC,QAAQ;gBAAE,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;YAC1C,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,MAAM;gBAAE,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;iBACpC,CAAC;gBACJ,OAAO,CAAC,QAAQ,GAAG,CAAC,CAAC;gBACrB,OAAO;YACT,CAAC;QACH,CAAC;IACH,CAAC,CAAC,CAAC;AACP,CAAC","sourcesContent":["// SPDX-License-Identifier: MIT\r\nimport { Command } from 'commander';\r\n\r\nimport type { ArquivoFantasma, ResultadoPoda } from '@tipos/tipos.js';\r\n\r\nimport chalk from '@nucleo/constelacao/chalk-safe.js';\r\nimport { config } from '@nucleo/constelacao/cosmos.js';\r\nimport { log } from '@nucleo/constelacao/log.js';\r\nimport { iniciarInquisicao } from '@nucleo/inquisidor.js';\r\nimport { removerArquivosOrfaos } from '@zeladores/poda.js';\r\nimport path from 'node:path';\r\nimport { gerarRelatorioPodaJson, gerarRelatorioPodaMarkdown } from '@relatorios/relatorio-poda.js';\r\n\r\nexport function comandoPodar(aplicarFlagsGlobais: (opts: Record<string, unknown>) => void) {\r\n  return new Command('podar')\r\n    .description('Remove arquivos √≥rf√£os e lixo do reposit√≥rio.')\r\n    .option('-f, --force', 'Remove arquivos sem confirma√ß√£o (CUIDADO!)', false)\r\n    .option(\r\n      '--include <padrao>',\r\n      'Glob pattern a INCLUIR (pode repetir a flag ou usar v√≠rgulas / espa√ßos para m√∫ltiplos)',\r\n      (val: string, prev: string[]) => {\r\n        prev.push(val);\r\n        return prev;\r\n      },\r\n      [] as string[],\r\n    )\r\n    .option(\r\n      '--exclude <padrao>',\r\n      'Glob pattern a EXCLUIR adicionalmente (pode repetir a flag ou usar v√≠rgulas / espa√ßos)',\r\n      (val: string, prev: string[]) => {\r\n        prev.push(val);\r\n        return prev;\r\n      },\r\n      [] as string[],\r\n    )\r\n    .action(async function (\r\n      this: Command,\r\n      opts: { force?: boolean; include?: string[]; exclude?: string[] },\r\n    ) {\r\n      aplicarFlagsGlobais(\r\n        this.parent && typeof this.parent.opts === 'function' ? this.parent.opts() : {},\r\n      );\r\n      log.info(chalk.bold('\\nüå≥ Iniciando processo de poda...\\n'));\r\n\r\n      const baseDir = process.cwd();\r\n\r\n      try {\r\n        // Normaliza padr√µes de include/exclude para sincronizar filtros com o scanner\r\n        const processPatternList = (raw: string[] | undefined) => {\r\n          if (!raw || !raw.length) return [] as string[];\r\n          return Array.from(\r\n            new Set(\r\n              raw\r\n                .flatMap((r) => r.split(/[\\s,]+/))\r\n                .map((s) => s.trim())\r\n                .filter(Boolean),\r\n            ),\r\n          );\r\n        };\r\n        const expandIncludes = (list: string[]) => {\r\n          const META = /[\\\\*\\?\\{\\}\\[\\]]/;\r\n          const out = new Set<string>();\r\n          for (const p of list) {\r\n            out.add(p);\r\n            if (!META.test(p)) {\r\n              out.add(p.replace(/\\\\+$/, '').replace(/\\/+$/, '') + '/**');\r\n              if (!p.includes('/') && !p.includes('\\\\')) out.add('**/' + p + '/**');\r\n            }\r\n          }\r\n          return Array.from(out);\r\n        };\r\n        const includeListRaw = processPatternList(opts.include);\r\n        const includeList = includeListRaw.length ? expandIncludes(includeListRaw) : [];\r\n        const excludeList = processPatternList(opts.exclude);\r\n        if (includeList.length) config.CLI_INCLUDE_PATTERNS = includeList;\r\n        if (excludeList.length) config.CLI_EXCLUDE_PATTERNS = excludeList;\r\n        const incluiNodeModules = includeList.some((p) => /node_modules/.test(p));\r\n        if (incluiNodeModules) {\r\n          config.ZELADOR_IGNORE_PATTERNS = config.ZELADOR_IGNORE_PATTERNS.filter(\r\n            (p) => !/node_modules/.test(p),\r\n          );\r\n          config.GUARDIAN_IGNORE_PATTERNS = config.GUARDIAN_IGNORE_PATTERNS.filter(\r\n            (p) => !/node_modules/.test(p),\r\n          );\r\n        }\r\n\r\n        const { fileEntries } = await iniciarInquisicao(baseDir, { incluirMetadados: false });\r\n        const resultadoPoda: ResultadoPoda = await removerArquivosOrfaos(fileEntries);\r\n        if (resultadoPoda.arquivosOrfaos.length === 0) {\r\n          log.sucesso('üéâ Nenhuma sujeira detectada. Reposit√≥rio limpo!');\r\n          if (config.REPORT_EXPORT_ENABLED) {\r\n            try {\r\n              const ts = new Date().toISOString().replace(/[:.]/g, '-');\r\n              const dir =\r\n                typeof config.REPORT_OUTPUT_DIR === 'string'\r\n                  ? config.REPORT_OUTPUT_DIR\r\n                  : path.join(baseDir, 'relatorios');\r\n              await import('node:fs').then((fs) => fs.promises.mkdir(dir, { recursive: true }));\r\n              const nome = `oraculo-poda-${ts}`;\r\n              await gerarRelatorioPodaMarkdown(path.join(dir, `${nome}.md`), [], [], {\r\n                simulado: !opts.force,\r\n              });\r\n              await gerarRelatorioPodaJson(path.join(dir, `${nome}.json`), [], []);\r\n              log.sucesso(`Relat√≥rios de poda exportados para: ${dir}`);\r\n            } catch (e) {\r\n              log.erro(`Falha ao exportar relat√≥rios de poda: ${(e as Error).message}`);\r\n              throw e;\r\n            }\r\n          }\r\n          return;\r\n        }\r\n\r\n        log.aviso(`\\n${resultadoPoda.arquivosOrfaos.length} arquivos √≥rf√£os detectados:`);\r\n        resultadoPoda.arquivosOrfaos.forEach((file: ArquivoFantasma) => {\r\n          log.info(`- ${file.arquivo}`);\r\n        });\r\n\r\n        if (!opts.force) {\r\n          const readline = await import('node:readline/promises');\r\n          const rl = readline.createInterface({\r\n            input: process.stdin,\r\n            output: process.stdout,\r\n          });\r\n\r\n          const answer = await rl.question(\r\n            chalk.yellow('Tem certeza que deseja remover esses arquivos? (s/N) '),\r\n          );\r\n          rl.close();\r\n\r\n          // debug removido (usava console.log) ‚Äì manter somente se modo debug ativo futuramente\r\n          if (answer.toLowerCase() !== 's') {\r\n            log.info('‚ùå Poda cancelada.');\r\n            return;\r\n          }\r\n        }\r\n\r\n        // S√≥ remove se confirmado\r\n        // --force: remove direto\r\n        if (opts.force) {\r\n          await removerArquivosOrfaos(fileEntries);\r\n          log.sucesso('‚úÖ Poda conclu√≠da: Arquivos √≥rf√£os removidos com sucesso!');\r\n          if (config.REPORT_EXPORT_ENABLED) {\r\n            const ts = new Date().toISOString().replace(/[:.]/g, '-');\r\n            const dir =\r\n              typeof config.REPORT_OUTPUT_DIR === 'string'\r\n                ? config.REPORT_OUTPUT_DIR\r\n                : path.join(baseDir, 'relatorios');\r\n            await import('node:fs').then((fs) => fs.promises.mkdir(dir, { recursive: true }));\r\n            const nome = `oraculo-poda-${ts}`;\r\n            const podados = resultadoPoda.arquivosOrfaos.map((f) => ({\r\n              arquivo: f.arquivo,\r\n              motivo: f.referenciado ? 'inativo' : '√≥rf√£o',\r\n              detectedAt: Date.now(),\r\n              scheduleAt: Date.now(),\r\n            }));\r\n            await gerarRelatorioPodaMarkdown(path.join(dir, `${nome}.md`), podados, [], {\r\n              simulado: false,\r\n            });\r\n            await gerarRelatorioPodaJson(path.join(dir, `${nome}.json`), podados, []);\r\n            log.sucesso(`Relat√≥rios de poda exportados para: ${dir}`);\r\n          }\r\n        }\r\n      } catch (error) {\r\n        log.erro(\r\n          `‚ùå Erro durante a poda: ${typeof error === 'object' && error && 'message' in error ? (error as { message: string }).message : String(error)}`,\r\n        );\r\n        if (config.DEV_MODE) console.error(error);\r\n        if (!process.env.VITEST) process.exit(1);\r\n        else {\r\n          process.exitCode = 1;\r\n          return;\r\n        }\r\n      }\r\n    });\r\n}\r\n"]}